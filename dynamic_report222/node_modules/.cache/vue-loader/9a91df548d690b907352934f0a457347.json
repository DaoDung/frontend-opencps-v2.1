{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/LandingMobile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/LandingMobile.vue","mtime":1548058113291},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\n\nimport TemplateRendering from './pagging/template_rendering.vue'\nimport TinyPagination from './pagging/hanghai_pagination.vue'\nimport ThongTinCoBanHoSo from './form_xu_ly/ThongTinCoBanHoSo.vue'\nimport PhanCong from './form_xu_ly/PhanCongNguoiThucHien.vue'\nimport TraKetQua from './form_xu_ly/TraKetQua.vue'\nimport XacNhanThuPhi from './form_xu_ly/XacNhanThuPhi.vue'\nimport ThuPhi from './form_xu_ly/FeeDetail.vue'\nimport YkienCanBoThucHien from './form_xu_ly/YkienCanBoThucHien.vue'\nimport support from '../store/support.json'\nimport FormBoSungThongTinNgan from './form_xu_ly/FormBoSungThongTinNgan.vue'\nimport { isMobile } from 'mobile-device-detect'\nexport default {\n  props: ['index'],\n  components: {\n    'tiny-pagination': TinyPagination,\n    'thong-tin-co-ban-ho-so': ThongTinCoBanHoSo,\n    'phan-cong': PhanCong,\n    'tra-ket-qua': TraKetQua,\n    'xac-nhan-thu-phi': XacNhanThuPhi,\n    'thu-phi': ThuPhi,\n    'y-kien-can-bo': YkienCanBoThucHien,\n    'template-rendering': TemplateRendering,\n    'form-bo-sung-thong-tin': FormBoSungThongTinNgan\n  },\n  data: () => ({\n    isAdminSuper: false,\n    actionId: '',\n    dossierIdSelected: '',\n    dossierCountingShow: false,\n    dossierCounting: [],\n    advSearchToolsSelected: [],\n    advSearchTools: support.advSearchTools,\n    advSearchItems: [],\n    advObjectSearch: {},\n    menusss: false,\n    itemFilterSupport: {\n      years: [\n        {\n          'value': '',\n          'name': 'Lọc theo năm'\n        },\n        {\n          'value': '2017',\n          'name': 'năm 2017'\n        },\n        {\n          'value': '2018',\n          'name': 'năm 2018'\n        },\n        {\n          'value': '2019',\n          'name': 'năm 2019'\n        }\n      ],\n      year: '',\n      months: [\n        {\n          'value': '',\n          'name': 'Lọc theo tháng'\n        },\n        {\n          'value': '1',\n          'name': 'tháng 1'\n        },\n        {\n          'value': '2',\n          'name': 'tháng 2'\n        },\n        {\n          'value': '3',\n          'name': 'tháng 3'\n        },\n        {\n          'value': '4',\n          'name': 'tháng 4'\n        },\n        {\n          'value': '5',\n          'name': 'tháng 5'\n        },\n        {\n          'value': '6',\n          'name': 'tháng 6'\n        },\n        {\n          'value': '7',\n          'name': 'tháng 7'\n        },\n        {\n          'value': '8',\n          'name': 'tháng 8'\n        },\n        {\n          'value': '9',\n          'name': 'tháng 9'\n        },\n        {\n          'value': '10',\n          'name': 'tháng 10'\n        },\n        {\n          'value': '11',\n          'name': 'tháng 11'\n        },\n        {\n          'value': '12',\n          'name': 'tháng 12'\n        }\n      ],\n      month: '',\n      tops: [\n        {\n          'value': '',\n          'name': 'toàn bộ'\n        },\n        {\n          'value': 'overdue',\n          'name': 'hồ sơ đang quá hạn cần giải quyết'\n        },\n        {\n          'value': 'delay',\n          'name': 'chậm hạn trả'\n        },\n        {\n          'value': 'coming',\n          'name': 'sắp đến hạn'\n        }\n      ],\n      top: '',\n      statusLists: [],\n      status: '',\n      substatusLists: [\n        {\n          'itemCode': '',\n          'itemName': 'toàn bộ'\n        }\n      ],\n      substatus: '',\n      agencyLists: [],\n      agency: '',\n      serviceLists: [],\n      service: '',\n      domainLists: [],\n      domain: '',\n      keyword: '',\n      register: ''\n    },\n    itemFilterKey: ['year', 'month', 'top', 'status', 'substatus', 'agency', 'service', 'domain', 'keyword', 'register'],\n    menuType: 0,\n    type_assign: '',\n    assign_items: [],\n    /* data TraKetQua */\n    returnFiles: [],\n    /* data XacNhanThuPhi */\n    payments: '',\n    viaPortalDetail: 0,\n    /* */\n    countSelected: 0,\n    statusFailed: 0,\n    dialog_statusAction: false,\n    dialog_printGuide: false,\n    dialog_extraForm: false,\n    validGuide: false,\n    applicantNameGuide: '',\n    applicantEmailGuide: '',\n    applicantTelNoGuide: '',\n    applicantAddressGuide: '',\n    dossierSelected: [\n      {\n        dossierNo: '18ACE289',\n        serviceName: 'Đăng ký, cấp Giấy chứng nhận quyền sử dụng đất, quyền sở hữu nhà ở và tài sản khác gắn liền với đất lần đầu đối với tài sản gắn liền với đất mà chủ sở hữu không đồng thời là người sử dụng đất',\n        statusAction: false\n      }\n    ],\n    /** */\n    buttonConfigItem: {},\n    /* ý kiến cán bộ */\n    textNote: '',\n    /** */\n    thongtinhoso: {},\n    dossierId: 0,\n    valid: true,\n    isCallBack: true,\n    trangThaiHoSoList: null,\n    listDichVu: [],\n    dichVuSelected: null,\n    btnDynamics: [],\n    btnDossierDynamics: [],\n    btnStepsDynamics: [],\n    loading: true,\n    headers: [],\n    hideAction: false,\n    hosoDatas: [],\n    hosoDatasTotal: 0,\n    hosoDatasPage: 1,\n    hosoTotalPage: 0,\n    selectedDoAction: [],\n    selectMultiplePage: [],\n    selected: [],\n    listThuTucHanhChinh: [],\n    listThuTuc: [],\n    thuTucHanhChinhSelected: null,\n    thuTucHanhChinhSelectedGuide: null,\n    listLinhVuc: [],\n    linhVucSelected: null,\n    listDichVuGuide: [],\n    dichVuSelectedGuide: null,\n    templateNoGuide: '',\n    domainCode: '',\n    govAgencyCode: '',\n    serviceCode: '',\n    templateNo: '',\n    dossierNoKey: '',\n    searchKey: '',\n    dialogAction: false,\n    loadingAction: false,\n    dialogActionProcess: false,\n    loadingActionProcess: false,\n    validProcess: false,\n    indexAction: -1,\n    itemAction: {\n      title: ''\n    },\n    showThongTinCoBanHoSo: false,\n    showYkienCanBoThucHien: false,\n    showFormBoSungThongTinNgan: false,\n    showPhanCongNguoiThucHien: false,\n    showTaoTaiLieuKetQua: false,\n    showKyPheDuyetTaiLieu: false,\n    showTraKetQua: false,\n    showXacNhanThuPhi: false,\n    showThuPhi: false,\n    showThucHienThanhToanDienTu: false,\n    dossierItemDialogPick: null,\n    itemDialogPick: null,\n    resultDialogPick: null,\n    indexDialogPick: 0,\n    userNote: 0,\n    dialogPDF: false,\n    dialogPDFLoading: true,\n    filterForm: null,\n    checkSelectAll: (this.menuType !== 3 && this.originality !== 1),\n    titleLanding: '',\n    currentQueryState: ''\n  }),\n  computed: {\n    loadingDynamicBtn () {\n      return this.$store.getters.loadingDynamicBtn\n    },\n    loadingTable () {\n      return this.$store.getters.loadingTable\n    },\n    originality () {\n      var vm = this\n      return vm.getOriginality()\n    },\n    currentUser () {\n      return this.$store.getters.loadingInitData.user\n    },\n    activeLoadingDataHoSo () {\n      return this.$store.getters.activeLoadingDataHoSo\n    },\n    viewMobile () {\n      return isMobile\n    }\n  },\n  created () {\n    var vm = this\n    vm.selectMultiplePage = []\n    vm.$nextTick(function () {\n      let query = vm.$router.history.current.query\n      let currentQuery = vm.$router.history.current.query\n      vm.currentQueryState = query\n      if (query.hasOwnProperty('page') && query['page'] !== '1') {\n        vm.hosoDatasPage = parseInt(query['page'])\n      } else {\n        vm.hosoDatasPage = 1\n      }\n      // <--- set State advSearch\n      vm.setStateAdvSearch(currentQuery)\n      // ---->\n    })\n  },\n  updated () {\n    var vm = this\n    vm.$nextTick(function () {\n      let currentParams = vm.$router.history.current.params\n      let currentQuery = vm.$router.history.current.query\n      vm.currentQueryState = currentQuery\n      if (currentParams.hasOwnProperty('index') && vm.isCallBack) {\n        vm.isCallBack = false\n        vm.$store.commit('setLoadingDynamicBtn', true)\n        setTimeout(() => {\n          vm.$store.dispatch('loadMenuConfigToDo').then(function (result) {\n            vm.btnDynamics = []\n            vm.trangThaiHoSoList = result\n            vm.menuType = parseInt(vm.trangThaiHoSoList[vm.index]['menuType'])\n            vm.processListTTHC(currentQuery)\n            vm.processListDomain(currentQuery)\n            // console.log('vm.trangThaiHoSoList[vm.index]', vm.trangThaiHoSoList[vm.index])\n            if (vm.trangThaiHoSoList[vm.index]['tableConfig'] !== null && vm.trangThaiHoSoList[vm.index]['tableConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['tableConfig'].hasOwnProperty('headers')) {\n              vm.headers = vm.trangThaiHoSoList[vm.index]['tableConfig']['headers']\n            }\n            if (vm.trangThaiHoSoList[vm.index]['tableConfig'] !== null && vm.trangThaiHoSoList[vm.index]['tableConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['tableConfig'].hasOwnProperty('hideAction')) {\n              vm.hideAction = vm.trangThaiHoSoList[vm.index]['tableConfig']['hideAction']\n            }\n            if (vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== null && vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['buttonConfig'].hasOwnProperty('buttons')) {\n              vm.btnDynamics = vm.trangThaiHoSoList[vm.index]['buttonConfig']['buttons']\n            }\n            if (vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== null && vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['buttonConfig'].hasOwnProperty('layout_view')) {\n              vm.filterForm = vm.trangThaiHoSoList[vm.index]['buttonConfig']['layout_view']\n              // console.log('filterForm11111', vm.trangThaiHoSoList[vm.index]['buttonConfig'])\n              // console.log('filterForm', vm.filterForm)\n            }\n            let btnDynamicsOnlySteps = []\n            let btnDynamicsView = []\n            for (let key in vm.btnDynamics) {\n              if (vm.btnDynamics[key].hasOwnProperty('onlySteps')) {\n                btnDynamicsOnlySteps.push(vm.btnDynamics[key])\n              } else {\n                btnDynamicsView.push(vm.btnDynamics[key])\n              }\n            }\n            vm.btnDynamics = []\n            vm.btnDynamics = btnDynamicsView\n            vm.btnStepsDynamics = []\n            if (currentQuery.hasOwnProperty('step')) {\n              for (let key in vm.trangThaiHoSoList[vm.index]['items']) {\n                let currentStep = vm.trangThaiHoSoList[vm.index]['items'][key]\n                if (String(currentStep.stepCode) === String(currentQuery.step)) {\n                  for (let keyOnlyStep in btnDynamicsOnlySteps) {\n                    for (var i = 0; i < btnDynamicsOnlySteps[keyOnlyStep].onlySteps.length; i++) {\n                      if (String(btnDynamicsOnlySteps[keyOnlyStep].onlySteps[i]) === String(currentStep.stepCode)) {\n                        vm.btnDynamics.push(btnDynamicsOnlySteps[keyOnlyStep])\n                      }\n                    }\n                  }\n                  break\n                }\n              }\n            }\n            vm.$store.commit('setLoadingDynamicBtn', false)\n          })\n        }, 200)\n      }\n    })\n  },\n  watch: {\n    '$route': function (newRoute, oldRoute) {\n      let vm = this\n      let currentQuery = newRoute.query\n      let currentQueryOld = oldRoute.query\n      vm.currentQueryState = currentQuery\n      if (currentQuery.hasOwnProperty('q')) {\n        vm.btnDynamics = []\n        vm.$store.commit('setLoadingDynamicBtn', true)\n        vm.menuType = vm.trangThaiHoSoList[vm.index]['menuType']\n        // console.log('vm.trangThaiHoSoList[vm.index]', vm.trangThaiHoSoList[vm.index])\n        vm.headers = vm.trangThaiHoSoList[vm.index]['tableConfig']['headers']\n        if (vm.trangThaiHoSoList[vm.index]['tableConfig'] !== null && vm.trangThaiHoSoList[vm.index]['tableConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['tableConfig'].hasOwnProperty('hideAction')) {\n          vm.hideAction = vm.trangThaiHoSoList[vm.index]['tableConfig']['hideAction']\n        }\n        if (vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== null && vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['buttonConfig'].hasOwnProperty('buttons')) {\n          vm.btnDynamics = vm.trangThaiHoSoList[vm.index]['buttonConfig']['buttons']\n        }\n        if (vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== null && vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['buttonConfig'].hasOwnProperty('layout_view')) {\n          vm.filterForm = vm.trangThaiHoSoList[vm.index]['buttonConfig']['layout_view']\n        }\n        let btnDynamicsOnlySteps = []\n        let btnDynamicsView = []\n        for (let key in vm.btnDynamics) {\n          if (vm.btnDynamics[key].hasOwnProperty('onlySteps')) {\n            btnDynamicsOnlySteps.push(vm.btnDynamics[key])\n          } else {\n            btnDynamicsView.push(vm.btnDynamics[key])\n          }\n        }\n        vm.btnDynamics = []\n        vm.btnDynamics = btnDynamicsView\n        vm.btnStepsDynamics = []\n        if (currentQuery.hasOwnProperty('step')) {\n          for (let key in vm.trangThaiHoSoList[vm.index]['items']) {\n            let currentStep = vm.trangThaiHoSoList[vm.index]['items'][key]\n            if (String(currentStep.stepCode) === String(currentQuery.step)) {\n              for (let keyOnlySteps in btnDynamicsOnlySteps) {\n                for (var i = 0; i < btnDynamicsOnlySteps[keyOnlySteps].onlySteps.length; i++) {\n                  if (String(btnDynamicsOnlySteps[keyOnlySteps].onlySteps[i]) === String(currentStep.stepCode)) {\n                    vm.btnDynamics.push(btnDynamicsOnlySteps[keyOnlySteps])\n                  }\n                }\n              }\n              break\n            }\n          }\n          // console.log('btnDynamics', vm.btnDynamics)\n        }\n        if (currentQuery.hasOwnProperty('page')) {\n          vm.hosoDatasPage = parseInt(currentQuery.page)\n          if (currentQuery.page === currentQueryOld['page']) {\n            vm.selectMultiplePage = []\n          }\n        } else {\n          vm.hosoDatasPage = 1\n          vm.selectMultiplePage = []\n        }\n        vm.$store.commit('setLoadingDynamicBtn', false)\n        if (vm.listLinhVuc === null || vm.listLinhVuc === undefined || (vm.listLinhVuc !== null && vm.listLinhVuc !== undefined && vm.listLinhVuc.length === 0)) {\n          vm.processListDomain(currentQuery)\n        } else {\n          for (let key in vm.listLinhVuc) {\n            if (String(vm.listLinhVuc[key]['domainCode']) === String(currentQuery.domain)) {\n              vm.linhVucSelected = vm.listLinhVuc[key]\n              vm.domainCode = vm.linhVucSelected['domainCode']\n            }\n          }\n        }\n        if (vm.listThuTucHanhChinh === null || vm.listThuTucHanhChinh === undefined || (vm.listThuTucHanhChinh !== null && vm.listThuTucHanhChinh !== undefined && vm.listThuTucHanhChinh.length === 0)) {\n          vm.processListTTHC(currentQuery)\n        } else {\n          vm.doLoadingDataHoSo()\n        }\n        // <--- set State advSearch\n        vm.setStateAdvSearch(currentQuery)\n        // ---->\n      }\n    },\n    activeLoadingDataHoSo (val) {\n      var vm = this\n      setTimeout(function () {\n        vm.doLoadingDataHoSo()\n      }, 100)\n    },\n    selectMultiplePage: {\n      handler: function (val) {\n        let vm = this\n        if (val.length > 0) {\n          vm.selectedDoAction = []\n          for (let key in val) {\n            vm.selectedDoAction = vm.selectedDoAction.concat(val[key]['selected'])\n          }\n        } else {\n          vm.selectedDoAction = []\n        }\n        // console.log('selectedDoAction', vm.selectedDoAction)\n      },\n      deep: true\n    }\n  },\n  methods: {\n    toggleAll () {\n      var vm = this\n      /*\n      if (window.themeDisplay !== null && window.themeDisplay !== undefined && String(window.themeDisplay.getUserId()) === '20139') {\n        vm.isAdminSuper = true\n      }\n      */\n      if (vm.getUser('Administrator')) {\n        if (vm.selected.length) {\n          vm.selected = []\n        } else {\n          vm.selected = vm.hosoDatas\n        }\n      } else {\n        if (!vm.thuTucHanhChinhSelected || (vm.thuTucHanhChinhSelected && vm.thuTucHanhChinhSelected.serviceConfigId === '0') || (vm.thuTucHanhChinhSelected && vm.thuTucHanhChinhSelected.serviceConfigId === '')) {\n          return\n        } else {\n          if (vm.selected.length) {\n            vm.selected = []\n          } else {\n            vm.selected = vm.hosoDatas.filter(function (item) {\n              return item['assigned'] !== 0\n            })\n          }\n        }\n      }\n      vm.selectMultiplePage[vm.hosoDatasPage - 1]['selected'] = vm.selected\n      // console.log('selected toggle all', vm.selectMultiplePage)\n    },\n    getUser (roleItem) {\n      let vm = this\n      let roles = vm.$store.getters.getUser.role\n      let roleExits = roles.findIndex(item => item === roleItem)\n      return (roleExits >= 0)\n    },\n    changeSelected () {\n      let vm = this\n      vm.selectMultiplePage[vm.hosoDatasPage - 1]['selected'] = vm.selected\n      // console.log('selected item', vm.selectMultiplePage)\n    },\n    setStateAdvSearch (currentQuery) {\n      // <--------- set State advSearch\n      let vm = this\n      if (currentQuery.hasOwnProperty('adv_renew')) {\n        vm.advSearchItems = []\n        for (let key1 in vm.itemFilterKey) {\n          for (let key in currentQuery) {\n            if (vm.itemFilterKey[key1] === key && currentQuery[key]) {\n              vm.itemFilterSupport[vm.itemFilterKey[key1]] = currentQuery[key]\n              break\n            } else {\n              vm.itemFilterSupport[vm.itemFilterKey[key1]] = ''\n            }\n          }\n        }\n        for (let key in vm.itemFilterKey) {\n          let spec = vm.itemFilterKey[key]\n          let current = vm.advSearchTools.find(function (item) {\n            return item.spec === spec\n          })\n          if (vm.itemFilterSupport[spec]) {\n            if (spec === 'keyword') {\n              vm.advSearchItems.push({\n                spec: spec,\n                value: spec + ':' + vm.itemFilterSupport[spec],\n                text: spec + ':' + vm.itemFilterSupport[spec],\n                index: -1\n              })\n            } else if (spec === 'year') {\n              let searchDate = vm.advSearchItems.find(function (item) { return item.spec === 'year_month' })\n              if (searchDate) {\n                searchDate['value'] = 'year_month' + ':' + vm.itemFilterSupport[spec] + '_' + vm.itemFilterSupport['month']\n                searchDate['text'] = 'year_month' + ':' + vm.itemFilterSupport[spec] + '_' + vm.itemFilterSupport['month']\n                searchDate['index'] = 0\n              } else {\n                vm.advSearchItems.push({\n                  spec: 'year_month',\n                  value: 'year_month' + ':' + vm.itemFilterSupport[spec] + '_' + vm.itemFilterSupport['month'],\n                  text: 'year_month' + ':' + vm.itemFilterSupport[spec] + '_' + vm.itemFilterSupport['month'],\n                  index: 0\n                })\n              }\n            } else if (spec === 'month') {\n              let searchDate = vm.advSearchItems.find(function (item) { return item.spec === 'year_month' })\n              if (searchDate) {\n                searchDate['value'] = 'year_month' + ':' + vm.itemFilterSupport['year'] + '_' + vm.itemFilterSupport[spec]\n                searchDate['text'] = 'year_month' + ':' + vm.itemFilterSupport['year'] + '_' + vm.itemFilterSupport[spec]\n                searchDate['index'] = 0\n              } else {\n                vm.advSearchItems.push({\n                  spec: 'year_month',\n                  value: 'year_month' + ':' + vm.itemFilterSupport['year'] + '_' + vm.itemFilterSupport[spec],\n                  text: 'year_month' + ':' + vm.itemFilterSupport['year'] + '_' + vm.itemFilterSupport[spec],\n                  index: 0\n                })\n              }\n            } else {\n              vm.advSearchItems.push({\n                spec: spec,\n                value: spec + ':' + vm.itemFilterSupport[spec],\n                text: spec + ':' + vm.itemFilterSupport[spec],\n                index: current['index']\n              })\n            }\n          }\n        }\n      } else {\n        vm.advSearchItems = []\n      }\n      for (let keyTool in vm.advSearchTools) {\n        vm.advSearchTools[keyTool].display = false\n        vm.advSearchTools[keyTool].disabled = false\n        let current = vm.advSearchItems.find(function (item) {\n          return item.spec === vm.advSearchTools[keyTool].spec\n        })\n        if (current) {\n          vm.advSearchTools[keyTool].display = true\n          vm.advSearchTools[keyTool].disabled = true\n        }\n      }\n      // ------->\n    },\n    resend () {\n      var vm = this\n      vm.doActions(null, vm.buttonConfigItem, null, true)\n    },\n    closeDialogStatusAction () {\n      var vm = this\n      vm.dialog_statusAction = false\n      vm.selectedDoAction = vm.selectedDoAction.filter(function (item) {\n        return !item.statusAction\n      })\n    },\n    submitFormXuLy (dossierItemDialogPick, itemDialogPick, resultDialogPick, indexDialogPick, isGroup) {\n      var vm = this\n      if (vm.showYkienCanBoThucHien) {\n        let result = vm.$refs.ykiencanbo.doExport()\n        if (result.valid) {\n          vm.textNote = result.text\n          vm.processAction(dossierItemDialogPick, itemDialogPick, resultDialogPick, indexDialogPick, false)\n        }\n      } else {\n        vm.processAction(dossierItemDialogPick, itemDialogPick, resultDialogPick, indexDialogPick, false)\n      }\n    },\n    processListTTHC (currentQuery) {\n      let vm = this\n      vm.$store.dispatch('loadListThuTucHanhChinh').then(function (result) {\n        if (!currentQuery.hasOwnProperty('domain') || (currentQuery.hasOwnProperty('domain') && String(currentQuery.domain) === '')) {\n          vm.listThuTucHanhChinh = result.map(thuTuc => {\n            thuTuc['displayName'] = thuTuc['serviceCode'] + ' - ' + thuTuc['serviceName']\n            return thuTuc\n          })\n        }\n        vm.listThuTuc = result.map(thuTuc => {\n          thuTuc['displayName'] = thuTuc['serviceCode'] + ' - ' + thuTuc['serviceName']\n          return thuTuc\n        })\n        if (currentQuery.hasOwnProperty('service_config') && String(currentQuery.service_config) !== '0') {\n          for (let key in vm.listThuTucHanhChinh) {\n            if (String(vm.listThuTucHanhChinh[key].serviceConfigId) === String(currentQuery.service_config)) {\n              vm.thuTucHanhChinhSelected = vm.listThuTucHanhChinh[key]\n              if (vm.thuTucHanhChinhSelected !== null && vm.thuTucHanhChinhSelected !== undefined && vm.thuTucHanhChinhSelected.hasOwnProperty('options')) {\n                vm.govAgencyCode = vm.thuTucHanhChinhSelected.govAgencyCode\n                vm.serviceCode = vm.thuTucHanhChinhSelected.serviceCode\n                if (currentQuery.hasOwnProperty('template_no')) {\n                  vm.listDichVu = vm.thuTucHanhChinhSelected.options\n                  for (let keyDv in vm.listDichVu) {\n                    if (vm.listDichVu[keyDv].templateNo === currentQuery.template_no) {\n                      vm.dichVuSelected = vm.listDichVu[keyDv]\n                      vm.templateNo = vm.dichVuSelected.templateNo\n                    }\n                  }\n                } else {\n                  vm.listDichVu = []\n                  vm.dichVuSelected = null\n                  vm.govAgencyCode = ''\n                  vm.serviceCode = ''\n                  vm.templateNo = ''\n                }\n              }\n              break\n            }\n          }\n        } else {\n          vm.thuTucHanhChinhSelected = null\n          vm.dichVuSelected = null\n          vm.govAgencyCode = ''\n          vm.serviceCode = ''\n          vm.templateNo = ''\n        }\n        vm.doLoadingDataHoSo()\n      })\n    },\n    processListDomain (currentQuery) {\n      let vm = this\n      vm.$store.dispatch('getDomainLists').then(function (result) {\n        if (result.length > 0) {\n          vm.listLinhVuc = result.map(domain => {\n            domain['displayName'] = domain['domainCode'] + ' - ' + domain['domainName']\n            return domain\n          })\n        }\n        if (currentQuery.hasOwnProperty('domain') && String(currentQuery.domain) !== '') {\n          for (let key in vm.listLinhVuc) {\n            if (String(vm.listLinhVuc[key]['domainCode']) === String(currentQuery.domain)) {\n              vm.linhVucSelected = vm.listLinhVuc[key]\n              vm.domainCode = vm.linhVucSelected['domainCode']\n            }\n          }\n          let domain = {\n            domain: vm.linhVucSelected.domainCode\n          }\n          vm.$store.dispatch('getServiceinfoFilter', domain).then(result => {\n            vm.listThuTucHanhChinh = result.map(thuTuc => {\n              thuTuc['displayName'] = thuTuc['serviceCode'] + ' - ' + thuTuc['serviceName']\n              return thuTuc\n            })\n          })\n        } else {\n          vm.linhVucSelected = null\n        }\n        // vm.doLoadingDataHoSo()\n      })\n    },\n    checkPemissionSpecialAction (form, currentUser, thongtinchitiet) {\n      var vm = this\n      var checkValue = true\n      // check theo người thực hiện\n      if (form !== 'PRINT_01' && form !== 'PRINT_02' && form !== 'PRINT_03' && form !== 'GUIDE' && form !== 'PREVIEW' && form !== 'BETIMES') {\n        let userArr = vm.$store.getters.getUsersNextAction\n        if (userArr.length > 0) {\n          let check = userArr.filter(function (item) {\n            if (item !== undefined && currentUser !== undefined) {\n              return item['userId'].toString() === currentUser['userId'].toString()\n            }\n          })\n          if (check.length > 0) {\n            checkValue = true\n          } else {\n            checkValue = false\n          }\n        } else {\n          checkValue = false\n        }\n      }\n      // check theo lastactionUser\n      if (form === 'ROLLBACK_01' || form === 'ROLLBACK_02' || form === 'ROLLBACK_03') {\n        // if (currentUser.userId === thongtinchitiet.lastActionUserId) {\n        //   checkValue = true\n        // } else {\n        checkValue = false\n        // }\n      }\n      return checkValue\n    },\n    paggingData (config) {\n      let vm = this\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      newQuery['page'] = ''\n      for (let key in newQuery) {\n        if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined) {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      // console.log('queryString=====', queryString)\n      queryString += 'page=' + config.page\n      vm.$router.push({\n        path: current.path + queryString\n      })\n    },\n    doLoadingDataHoSo () {\n      let vm = this\n      vm.selected = []\n      let currentQuery = vm.$router.history.current.query\n      console.log('currentQuery======', currentQuery)\n      if (currentQuery.hasOwnProperty('q')) {\n        let querySet\n        if (currentQuery.q.indexOf('step') > 0) {\n          querySet = currentQuery.q\n          // console.log('querySet------', querySet)\n        } else {\n          querySet = currentQuery['step'] ? currentQuery.q + '&step=' + currentQuery['step'] : currentQuery.q\n        }\n        var filter = null\n        if (vm.menuType !== 3) {\n          filter = {\n            queryParams: querySet,\n            /*  test local */\n            // queryParams: 'http://127.0.0.1:8081' + querySet,\n            page: vm.hosoDatasPage,\n            agency: currentQuery.hasOwnProperty('agency') ? currentQuery.agency : vm.govAgencyCode,\n            service: currentQuery.hasOwnProperty('service') ? currentQuery.service : vm.serviceCode,\n            template: currentQuery.hasOwnProperty('template') ? currentQuery.template : vm.templateNo,\n            domain: currentQuery.hasOwnProperty('domain') ? currentQuery.domain : vm.domainCode,\n            status: currentQuery.hasOwnProperty('status') ? currentQuery.status : '',\n            substatus: currentQuery.hasOwnProperty('substatus') ? currentQuery.substatus : '',\n            year: currentQuery.hasOwnProperty('year') ? currentQuery.year : 0,\n            month: currentQuery.hasOwnProperty('month') ? currentQuery.month : 0,\n            top: currentQuery.hasOwnProperty('top') ? currentQuery.top : '',\n            keyword: currentQuery.hasOwnProperty('keyword') && currentQuery.keyword ? currentQuery.keyword : vm.searchKey,\n            register: currentQuery.hasOwnProperty('register') ? currentQuery.register : '',\n            dossierNo: vm.dossierNoKey ? vm.dossierNoKey : ''\n          }\n        } else {\n          let originalityDossierDeleted = currentQuery.hasOwnProperty('status') && currentQuery['status'] === 'deleted' ? -1 : ''\n          filter = {\n            queryParams: querySet,\n            /*  test local */\n            // queryParams: 'http://127.0.0.1:8081' + querySet,\n            page: vm.hosoDatasPage,\n            agency: currentQuery.hasOwnProperty('agency') ? currentQuery.agency : vm.govAgencyCode,\n            service: currentQuery.hasOwnProperty('service') ? currentQuery.service : vm.serviceCode,\n            template: currentQuery.hasOwnProperty('template') ? currentQuery.template : vm.templateNo,\n            domain: currentQuery.hasOwnProperty('domain') ? currentQuery.domain : vm.domainCode,\n            status: currentQuery.hasOwnProperty('status') && currentQuery['status'] && currentQuery['status'] !== 'deleted' ? currentQuery.status : '',\n            substatus: currentQuery.hasOwnProperty('substatus') ? currentQuery.substatus : '',\n            year: currentQuery.hasOwnProperty('year') ? currentQuery.year : 0,\n            month: currentQuery.hasOwnProperty('month') ? currentQuery.month : 0,\n            top: currentQuery.hasOwnProperty('top') ? currentQuery.top : '',\n            keyword: currentQuery.hasOwnProperty('keyword') && currentQuery.keyword ? currentQuery.keyword : '',\n            register: currentQuery.hasOwnProperty('register') ? currentQuery.register : '',\n            originality: currentQuery.hasOwnProperty('originality') && currentQuery['originality'] ? currentQuery.originality : originalityDossierDeleted,\n            dossierNo: vm.dossierNoKey ? vm.dossierNoKey : ''\n          }\n        }\n        vm.$store.dispatch('loadingDataHoSo', filter).then(function (result) {\n          vm.hosoDatas = result.data\n          vm.hosoDatasTotal = result.total\n          vm.hosoTotalPage = Math.ceil(vm.hosoDatasTotal / 15)\n          /*\n          if (window.themeDisplay !== null && window.themeDisplay !== undefined && String(window.themeDisplay.getUserId()) === '20139') {\n            vm.isAdminSuper = true\n          }\n          */\n          if (vm.hosoTotalPage > 0 && vm.selectMultiplePage.length === 0) {\n            for (let key = 0; key < vm.hosoTotalPage; key++) {\n              let item = {\n                selected: [],\n                page: key + 1\n              }\n              vm.selectMultiplePage.push(item)\n            }\n            console.log('selectMultiplePage', vm.selectMultiplePage)\n          }\n          vm.selected = vm.selectMultiplePage[vm.hosoDatasPage - 1]['selected']\n        }).catch(reject => {\n          vm.hosoDatas = []\n          vm.hosoDatasTotal = 0\n        })\n      }\n      if (vm.menuType === 3 || String(vm.menuType) === '3') {\n        setTimeout(() => {\n          vm.$store.dispatch('loadingDossierCounting').then(function (result) {\n            if (result !== null && result !== undefined) {\n              vm.dossierCounting = result\n              // add search dossierDeleted\n              if (vm.getUser('Administrator_data')) {\n                let dossierDelete = {key: 'deleted', title: 'Hồ sơ đã xóa', count: 0}\n                vm.dossierCounting.push(dossierDelete)\n              }\n            } else {\n              vm.dossierCounting = []\n            }\n            vm.dossierCountingShow = true\n          })\n        }, 200)\n      } else {\n        vm.dossierCountingShow = false\n      }\n    },\n    changeServiceConfigs (item) {\n      let vm = this\n      vm.selectMultiplePage = []\n      if (item !== null && item !== 'null' && item.hasOwnProperty('options')) {\n        this.listDichVu = item.options\n      } else {\n        this.listDichVu = []\n      }\n      if (this.listDichVu !== null && this.listDichVu !== undefined && this.listDichVu !== 'undefined' && this.listDichVu.length > 0) {\n        this.dichVuSelected = this.listDichVu[0]\n        this.templateNo = this.dichVuSelected.templateNo\n      } else {\n        this.dichVuSelected = null\n      }\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      newQuery['service_config'] = ''\n      newQuery['template_no'] = ''\n      for (let key in newQuery) {\n        if (key === 'page') {\n          queryString += key + '=1&'\n        } else if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined && key !== 'step') {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      if (String(newQuery['q']).indexOf('&step') === -1 && vm.menuType !== 3) {\n        queryString += 'step=' + newQuery['step'] + '&'\n      }\n      if (this.listDichVu !== null && this.listDichVu !== undefined && this.listDichVu !== 'undefined' && this.listDichVu.length > 0) {\n        queryString += 'service_config=' + item.serviceConfigId\n        queryString += '&template_no=' + this.dichVuSelected.templateNo\n        vm.govAgencyCode = item.govAgencyCode\n        vm.serviceCode = item.serviceCode\n      } else {\n        vm.templateNo = ''\n        vm.govAgencyCode = ''\n        vm.serviceCode = ''\n      }\n      vm.$router.push({\n        path: current.path + queryString\n      })\n    },\n    changeServiceConfigsGuide (item) {\n      let vm = this\n      if (item !== null && item !== 'null' && item.hasOwnProperty('options')) {\n        this.listDichVuGuide = item.options\n      } else {\n        this.listDichVuGuide = []\n      }\n      if (this.listDichVuGuide !== null && this.listDichVuGuide !== undefined && this.listDichVuGuide !== 'undefined' && this.listDichVuGuide.length > 0) {\n        this.dichVuSelectedGuide = this.listDichVuGuide[0]\n        this.templateNoGuide = this.dichVuSelectedGuide.templateNo\n      } else {\n        this.dichVuSelectedGuide = null\n      }\n    },\n    changeDomain (item) {\n      // console.log('change Domain')\n      let vm = this\n      vm.selectMultiplePage = []\n      vm.linhVucSelected = item\n      if (item) {\n        setTimeout(function () {\n          let domain = {\n            domain: vm.linhVucSelected.domainCode\n          }\n          vm.$store.dispatch('getServiceinfoFilter', domain).then(result => {\n            vm.listThuTucHanhChinh = result.map(thuTuc => {\n              thuTuc['displayName'] = thuTuc['serviceCode'] + ' - ' + thuTuc['serviceName']\n              return thuTuc\n            })\n          })\n          // vm.listThuTucHanhChinh = vm.listThuTuc.filter(function (itemThuTuc) {\n          //   return (itemThuTuc.serviceCode.split(itemThuTuc.serviceCode.match(/\\d+/g)[0])[0] === item.domainCode)\n          // })\n        }, 100)\n      } else {\n        vm.listThuTucHanhChinh = vm.listThuTuc\n      }\n      if (item !== null) {\n        vm.domainCode = vm.linhVucSelected['domainCode']\n      } else {\n        vm.domainCode = ''\n      }\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      newQuery['domain'] = ''\n      for (let key in newQuery) {\n        if (key === 'page') {\n          queryString += key + '=1&'\n        } else if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined && key !== 'step') {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      if (String(newQuery['q']).indexOf('&step') === -1 && vm.menuType !== 3) {\n        queryString += 'step=' + newQuery['step'] + '&'\n      }\n      queryString += 'domain=' + vm.domainCode\n      // console.log('change Domain queryString', queryString)\n      vm.$router.push({\n        path: current.path + queryString,\n        query: {\n          renew: Math.floor(Math.random() * (100 - 1 + 1)) + 1\n        }\n      })\n    },\n    changeDossierNoKey () {\n      var vm = this\n      vm.selectMultiplePage = []\n      // console.log('run log ...')\n      setTimeout(function () {\n        if (vm.dossierNoKey) {\n          if (vm.dossierNoKey.length > 3 || vm.dossierNoKey === '') {\n            vm.doLoadingDataHoSo()\n          }\n        } else {\n          vm.doLoadingDataHoSo()\n        }\n      }, 200)\n    },\n    clearDossierNoKey () {\n      this.dossierNoKey = ''\n      this.changeDossierNoKey()\n    },\n    changeDichVuConfigs (item) {\n      let vm = this\n      vm.selectMultiplePage = []\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      newQuery['template_no'] = ''\n      for (let key in newQuery) {\n        if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined) {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      queryString += 'template_no=' + item.templateNo\n      vm.templateNo = item.templateNo\n      vm.$router.push({\n        path: current.path + queryString\n      })\n    },\n    btnActionEvent (dossierItem, item, index, isGroup) {\n      let vm = this\n      // set info buttonConfig\n      vm.buttonConfigItem = {}\n      vm.buttonConfigItem = item\n      //\n      vm.itemAction = item\n      // console.log('itemAction++++++++++++', item)\n      vm.indexAction = index\n      if (String(item.form) === 'NEW') {\n        let isOpenDialog = true\n        if (vm.dichVuSelected !== null && vm.dichVuSelected !== undefined && vm.dichVuSelected !== 'undefined' && vm.listDichVu !== null && vm.listDichVu !== undefined && vm.listDichVu.length === 1) {\n          isOpenDialog = false\n        }\n        if (isOpenDialog) {\n          // vm.thuTucHanhChinhSelected = null\n          vm.dialogAction = true\n        } else {\n          vm.doCreateDossier()\n        }\n        // console.log('isOpenDialog++++++++', isOpenDialog)\n      } else if (String(item.form) === 'UPDATE') {\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + dossierItem.dossierId + '/' + vm.itemAction.form,\n          query: vm.$router.history.current.query\n        })\n      } else if (String(item.form) === 'ADD') {\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/bo-sung-ho-so/' + dossierItem.dossierId,\n          query: vm.$router.history.current.query\n        })\n      } else if (String(item.form) === 'COPY') {\n        vm.doCopy(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'CANCEL') {\n        vm.doCancel(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'PRINT_01') {\n        // Xem trước phiếu của một hồ sơ\n        vm.doPrint01(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'PRINT_02') {\n        // Xem trước phiếu gộp của nhiều hồ sơ\n        vm.doPrint02(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'PRINT_03') {\n        // In văn bản mới nhất đã phê duyệt\n        vm.doPrint03(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'GUIDING') {\n        vm.dialog_printGuide = true\n        // vm.doGuiding(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'PREVIEW') {\n        vm.doPreview(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'ACTIONS') {\n        vm.doActions(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'DELETE') {\n        vm.doDeleteDossier(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'ROLLBACK_01') {\n        let result = {\n          actionCode: 9000\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      } else if (String(item.form) === 'ROLLBACK_02') {\n        let result = {\n          actionCode: 9000\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      } else if (String(item.form) === 'OVERDUE') {\n        let result = {\n          actionCode: 8500,\n          dossierId: dossierItem.dossierId,\n          overdue: dossierItem['extendDate']\n        }\n        vm.processPullBtnDetailRouter(dossierItem, null, result, null, 8500)\n      } else if (String(item.form) === 'PREOVERDUE') {\n        let result = {\n          actionCode: 8501,\n          dossierId: dossierItem.dossierId,\n          preoverdue: dossierItem['extendDate']\n        }\n        vm.processPullBtnDetailRouter(dossierItem, null, result, null, 8501)\n      } else if (String(item.form) === 'BETIMES') {\n        let result = {\n          actionCode: 8400,\n          dossierId: dossierItem.dossierId,\n          betimes: dossierItem['extendDate']\n        }\n        vm.processPullBtnDetailRouter(dossierItem, null, result, null, 8400)\n      } else if (String(item.form) === 'CHANGE_DATA_DOSSIER') {\n        vm.doChangeDossier(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'UNDO_DOSSIER') {\n        vm.doUndoDossier(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'RESTORE_DOSSIER') {\n        vm.doRestoreDossier(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'GOTO_DONE') {\n        if (!dossierItem) {\n          alert('Chọn hồ sơ để thực hiện')\n          return\n        }\n        let result = {\n          actionCode: 4000\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      } else if (String(item.form) === 'GOTO_CANCEL') {\n        if (!dossierItem) {\n          alert('Chọn hồ sơ để thực hiện')\n          return\n        }\n        let result = {\n          actionCode: 4100\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      } else if (String(item.form) === 'GOTO_DENY') {\n        if (!dossierItem) {\n          alert('Chọn hồ sơ để thực hiện')\n          return\n        }\n        let result = {\n          actionCode: 4200\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      }\n    },\n    doPrint01 (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.dialogPDFLoading = true\n      vm.dialogPDF = true\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        document: item.document\n      }\n      vm.$store.dispatch('doPrint01', filter).then(function (result) {\n        vm.dialogPDFLoading = false\n        document.getElementById('dialogPDFPreview').src = result\n      })\n    },\n    doPrint02 (dossierItem, item, index, isGroup) {\n      let vm = this\n      console.log('vm.selectedDoAction', vm.selectedDoAction)\n      if (vm.thuTucHanhChinhSelected === null || vm.thuTucHanhChinhSelected === undefined || vm.thuTucHanhChinhSelected === 'undefined') {\n        alert('Loại thủ tục bắt buộc phải chọn')\n      } else {\n        let filter = {\n          document: item.document,\n          'serviceCode': vm.thuTucHanhChinhSelected.serviceCode,\n          'govAgencyCode': vm.thuTucHanhChinhSelected.govAgencyCode,\n          dossiers: JSON.stringify(vm.selectedDoAction)\n        }\n        vm.dialogPDFLoading = true\n        vm.dialogPDF = true\n        vm.$store.dispatch('doPrint02', filter).then(function (result) {\n          vm.dialogPDFLoading = false\n          document.getElementById('dialogPDFPreview').src = result\n        })\n      }\n    },\n    doPrint03 (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.dialogPDFLoading = true\n      vm.dialogPDF = true\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        document: item.document\n      }\n      vm.$store.dispatch('doPrint03', filter).then(function (result) {\n        vm.dialogPDFLoading = false\n        document.getElementById('dialogPDFPreview').src = result\n      })\n    },\n    doGuiding () {\n      let vm = this\n      if (vm.$refs.formGuide.validate()) {\n        vm.loadingAction = true\n        let filter = {\n          serviceConfigId: vm.thuTucHanhChinhSelectedGuide.serviceConfigId,\n          serviceCode: vm.thuTucHanhChinhSelectedGuide.serviceCode,\n          serviceName: vm.thuTucHanhChinhSelectedGuide.serviceName,\n          templateNo: vm.templateNoGuide,\n          applicantName: vm.applicantNameGuide,\n          applicantAddress: vm.applicantAddressGuide,\n          applicantEmail: vm.applicantEmailGuide,\n          applicantTelNo: vm.applicantTelNoGuide,\n          employeeName: window.themeDisplay.getUserName() ? window.themeDisplay.getUserName() : '',\n          typeCode: 'DOC_03'\n        }\n        vm.dialogPDFLoading = true\n        vm.dialogPDF = true\n        vm.$store.dispatch('doGuiding', filter).then(function (result) {\n          vm.loadingAction = false\n          vm.dialog_printGuide = false\n          vm.dialogPDFLoading = false\n          document.getElementById('dialogPDFPreview').src = result\n        }).catch(function () {\n          vm.loadingAction = false\n        })\n      }\n    },\n    doPreview (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.dialogPDFLoading = true\n      vm.dialogPDF = true\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        document: item.document\n      }\n      vm.$store.dispatch('doPrint03', filter).then(function (result) {\n        vm.dialogPDFLoading = false\n        document.getElementById('dialogPDFPreview').src = result\n      })\n    },\n    doActions (dossierItem, item, index, isGroup) {\n      let vm = this\n      let currentQuery = vm.$router.history.current.query\n      let result = {\n        actionCode: item.action\n      }\n      if (isGroup) {\n        vm.countSelected = 0\n        if (vm.selectedDoAction.length === 1) {\n          for (let key in vm.selectedDoAction) {\n            let actionDossierItem = vm.selectedDoAction[key]\n            vm.$router.push({\n              path: '/danh-sach-ho-so/' + vm.index + '/chi-tiet-ho-so/' + actionDossierItem['dossierId'],\n              query: {\n                activeTab: 'tabs-1',\n                btnIndex: null\n              }\n            })\n            // vm.processAction(actionDossierItem, item, result, key, false)\n          }\n        } else if (vm.selectedDoAction.length > 1) {\n          // console.log('run doActions Landing')\n          vm.$store.dispatch('loadActionActive', item).then(function () {\n            vm.$store.dispatch('loadDossierSelected', vm.selectedDoAction).then(function () {\n              let dossiersSelect = vm.selectedDoAction.map(select => {\n                return select.dossierId\n              }).join(',')\n              let query = vm.$router.history.current.query\n              query['dossiers'] = dossiersSelect\n              query['actionActive'] = JSON.stringify(item)\n              vm.$router.push({\n                path: '/danh-sach-ho-so/' + vm.index + '/xu-ly-ho-so',\n                query: query\n              })\n            })\n          })\n        } else {\n          alert('Chọn hồ sơ để thao tác')\n        }\n      }\n    },\n    doCopy (dossierItem, item, index, isGroup) {\n      let vm = this\n      let filter = {\n        dossierId: dossierItem.dossierId\n      }\n      vm.loadingAction = true\n      vm.$store.dispatch('doCopy', filter).then(function (result) {\n        vm.loadingAction = false\n        vm.indexAction = -1\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n          query: vm.$router.history.current.query\n        })\n      }).catch(reject => {\n        vm.loadingAction = false\n      })\n    },\n    doCancel (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.loadingAction = true\n      if (isGroup) {\n        // console.log(vm.selected)\n      } else {\n        let filter = {\n          dossierId: dossierItem.dossierId\n        }\n        vm.$store.dispatch('doCancel', filter).then(function (result) {\n          vm.loadingAction = false\n          vm.indexAction = -1\n          vm.$router.push({\n            path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n            query: vm.$router.history.current.query\n          })\n        }).catch(reject => {\n          vm.loadingAction = false\n        })\n      }\n    },\n    doChangeDossier (dossierItem, item, index, isGroup) {\n      let vm = this\n      let currentQuery = vm.$router.history.current.query\n      if (isGroup) {\n        if (vm.selectedDoAction.length > 0) {\n          let countSelectedDoAction = vm.selectedDoAction.length\n          vm.actionId = 9100\n          vm.dossierIdSelected = vm.selectedDoAction[countSelectedDoAction - 1].dossierId\n          // console.log('selectExtraForm', vm.dossierIdSelected, vm.actionId)\n          vm.dialog_extraForm = true\n        } else {\n          alert('Chọn hồ sơ để thực hiện')\n        }\n      }\n    },\n    doUndoDossier (dossierItem, item, index, isGroup) {\n      let vm = this\n      let currentQuery = vm.$router.history.current.query\n      if (vm.selectedDoAction.length > 0) {\n        let countSelectedDoAction = vm.selectedDoAction.length\n        let x = confirm('Xác thực Undo hồ sơ với mã: ' + vm.selectedDoAction[countSelectedDoAction - 1].dossierNo)\n        if (x) {\n          let fiter = {\n            dossierId: vm.selectedDoAction[countSelectedDoAction - 1].dossierId\n          }\n          vm.$store.dispatch('rollBack', fiter).then(function (result) {\n            setTimeout(function () {\n              vm.doLoadingDataHoSo()\n            }, 300)\n          }).catch(function () {\n            setTimeout(function () {\n              vm.doLoadingDataHoSo()\n            }, 300)\n          })\n        }\n      } else {\n        alert('Chọn hồ sơ để thực hiện')\n      }\n    },\n    doChangeDossierExtraForm () {\n      let vm = this\n      let validation = vm.$refs.formBoSungThongTinNgan.checkValid()\n      if (validation) {\n        let payloadExtraForm = vm.$refs.formBoSungThongTinNgan.formSubmitData()\n        let x = confirm('Bạn có chắc chắn thực hiện hành động điều chỉnh dữ liệu?')\n        if (x) {\n          let countSelectedDoAction = vm.selectedDoAction.length\n          let fiter = {\n            dossierId: vm.selectedDoAction[countSelectedDoAction - 1].dossierId,\n            actionCode: vm.actionId,\n            payload: payloadExtraForm\n          }\n          vm.$store.dispatch('processDossierRouter', fiter).then(function (result) {\n            vm.doLoadingDataHoSo()\n            vm.dialog_extraForm = false\n          }).catch(function () {\n            vm.dialog_extraForm = false\n            vm.doLoadingDataHoSo()\n          })\n        }\n      }\n    },\n    doRestoreDossier () {\n      let vm = this\n      let x = confirm('Bạn có chắc chắn thực hiện hành động khôi phục hồ sơ?')\n      if (x) {\n        if (vm.selectedDoAction.length > 0) {\n          let restoreCounter = 0\n          let lengthDossier = vm.selectedDoAction.length\n          for (let key in vm.selectedDoAction) {\n            let filter = {\n              dossierId: vm.selectedDoAction[key]['dossierId']\n            }\n            console.log('filter Restore', filter)\n            if (vm.selectedDoAction[key]['originality']) {\n              vm.$store.dispatch('restoreDossier', filter).then(function (result) {\n                restoreCounter += 1\n                if (restoreCounter === lengthDossier) {\n                  vm.doLoadingDataHoSo()\n                }\n              }).catch(function () {\n                restoreCounter += 1\n                if (restoreCounter === lengthDossier) {\n                  vm.doLoadingDataHoSo()\n                }\n              })\n            }\n          }\n        } else {\n          alert('Chọn hồ sơ để thực hiện')\n        }\n      }\n    },\n    doDeleteDossier (dossierItem, item, index, isGroup) {\n      let vm = this\n      let x = confirm('Bạn có chắc chắn thực hiện hành động xóa hồ sơ?')\n      if (x) {\n        let currentQuery = vm.$router.history.current.query\n        //\n        if (isGroup) {\n          let filter = {\n            dossierId: 0\n          }\n          // console.log(vm.selected)\n          if (vm.selectedDoAction.length > 0) {\n            let deleteIds = []\n            for (let key in vm.selectedDoAction) {\n              deleteIds.push(vm.selectedDoAction[key]['dossierId'])\n            }\n            filter['dossierId'] = deleteIds\n            vm.$store.dispatch('deleteDossierPatch', filter).then(function (result) {\n            })\n          } else {\n            alert('Chọn hồ sơ để thực hiện')\n          }\n        } else {\n          let filter = {\n            dossierId: dossierItem.dossierId\n          }\n          vm.$store.dispatch('deleteDossier', filter).then(function (result) {\n            vm.dialogActionProcess = false\n            vm.loadingActionProcess = false\n            vm.$router.push({\n              path: vm.$router.history.current.path,\n              query: {\n                recount: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                renew: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                q: currentQuery['q']\n              }\n            })\n          })\n        }\n      } else {\n        return false\n      }\n    },\n    doCreateDossier () {\n      let vm = this\n      let data = {\n        serviceCode: vm.serviceCode,\n        govAgencyCode: vm.govAgencyCode,\n        templateNo: vm.templateNo,\n        originality: vm.getOriginality()\n      }\n      vm.$store.commit('setDataCreateDossier', data)\n      vm.loadingAction = true\n      vm.$store.dispatch('postDossier', data).then(function (result) {\n        vm.loadingAction = false\n        vm.indexAction = -1\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n          query: vm.$router.history.current.query\n        })\n      }).catch(reject => {\n        vm.loadingAction = false\n      })\n    },\n    doSubmitDialogAction (item) {\n      let vm = this\n      if (vm.$refs.form.validate()) {\n        // console.log('yes-----')\n        // console.log('item++++++++', item)\n        vm.doCreateDossier()\n      }\n    },\n    processPullBtnDynamics (item) {\n      let vm = this\n      vm.btnDossierDynamics = []\n      let filter = {\n        dossierId: item.dossierId,\n        dossierStatus: item.dossierStatus,\n        dossierSubStatus: item.dossierSubStatus\n      }\n      vm.dossierId = item.dossierId\n      // if (vm.$router.history.current.query.hasOwnProperty('step')) {\n      //   vm.$store.dispatch('pullNextactions', filter).then(result => {\n      //     vm.btnDossierDynamics = result\n      //   })\n      // } else {\n      if (item.dossierStatus === '' || item.dossierSubStatus === '') {\n        vm.$store.dispatch('pullNextactions', filter).then(result => {\n          vm.btnDossierDynamics = result\n        })\n      } else {\n        vm.btnStepsDynamics = []\n        var getbuttonAction = [vm.$store.dispatch('pullNextactions', filter), vm.$store.dispatch('pullBtnConfigStep', filter)]\n        Promise.all(getbuttonAction).then(result => {\n          vm.btnDossierDynamics = result[0]\n          vm.btnStepsDynamics = result[1]\n        }).catch(reject => {\n          vm.$store.dispatch('pullNextactions', filter).then(result => {\n            vm.btnDossierDynamics = result\n          })\n        })\n      }\n      // }\n    },\n    processAction (dossierItem, item, result, index, isConfirm) {\n      let vm = this\n      var paymentsOut = null\n      if (vm.payments) {\n        paymentsOut = {\n          requestPayment: vm.payments['requestPayment'],\n          advanceAmount: Number(vm.payments['advanceAmount'].toString().replace(/\\./g, '')),\n          feeAmount: Number(vm.payments['feeAmount'].toString().replace(/\\./g, '')),\n          serviceAmount: Number(vm.payments['serviceAmount'].toString().replace(/\\./g, '')),\n          shipAmount: Number(vm.payments['shipAmount'].toString().replace(/\\./g, ''))\n        }\n      }\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        actionCode: result.actionCode,\n        toUsers: vm.assign_items,\n        payment: paymentsOut,\n        userNote: vm.textNote ? vm.textNote : ''\n      }\n      vm.dossierId = dossierItem.dossierId\n      let currentQuery = vm.$router.history.current.query\n      let queryString = '?'\n      currentQuery['recount'] = Math.floor(Math.random() * (100 - 1 + 1)) + 1\n      currentQuery['renew'] = Math.floor(Math.random() * (100 - 1 + 1)) + 1\n      for (let key in currentQuery) {\n        if (currentQuery[key] !== '' && currentQuery[key] !== 'undefined' && currentQuery[key] !== undefined) {\n          queryString += key + '=' + currentQuery[key] + '&'\n        }\n      }\n      vm.loadingActionProcess = true\n      if (isConfirm) {\n        let x = confirm('Bạn có muốn thực hiện hành động này?')\n        if (x) {\n          vm.$store.dispatch('processDossierRouter', filter).then(function (result) {\n            vm.dialogActionProcess = false\n            vm.loadingActionProcess = false\n            vm.$router.push({\n              path: vm.$router.history.current.path + queryString\n            })\n          })\n        } else {\n          return false\n        }\n      } else {\n        if (!dossierItem.statusAction) {\n          vm.$store.dispatch('processCheckNextActions', filter).then(function (newFilter) {\n            vm.$store.dispatch('processDossierRouter', newFilter).then(function (result) {\n              vm.dialogActionProcess = false\n              vm.loadingActionProcess = false\n              //\n              if (String(item.form) === 'ACTIONS') {\n                // get dossier submit fail and show on dialog\n                vm.hosoDatas.splice(index, 1)\n                vm.selectedDoAction[index].statusAction = true\n                vm.countSelected += 1\n                if (vm.countSelected === vm.selectedDoAction.length && vm.statusFailed > 0 && vm.selectedDoAction.length > 1) {\n                  vm.dialog_statusAction = true\n                } else if (vm.countSelected === vm.selectedDoAction.length && vm.statusFailed === 0) {\n                  vm.$router.push({\n                    path: vm.$router.history.current.path,\n                    query: {\n                      recount: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                      renew: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                      q: currentQuery['q']\n                    }\n                  })\n                }\n              } else {\n                vm.$router.push({\n                  path: vm.$router.history.current.path,\n                  query: {\n                    recount: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                    renew: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                    q: currentQuery['q']\n                  }\n                })\n              }\n            }).catch(function () {\n              vm.loadingActionProcess = false\n              //\n              if (String(item.form) === 'ACTIONS') {\n                vm.countSelected += 1\n                vm.statusFailed += 1\n                vm.selectedDoAction[index].statusAction = false\n                if (vm.countSelected === vm.selectedDoAction.length && vm.statusFailed > 0 && vm.selectedDoAction.length > 1) {\n                  vm.dialog_statusAction = true\n                }\n              } else {}\n            })\n          })\n        }\n      }\n    },\n    processPullBtnDetailRouter (dossierItem, item, result, index, btnIndex) {\n      let vm = this\n      let isPopup = false\n      vm.dossierId = dossierItem.dossierId\n      vm.showYkienCanBoThucHien = false\n      vm.showFormBoSungThongTinNgan = false\n      vm.showPhanCongNguoiThucHien = false\n      vm.showTaoTaiLieuKetQua = false\n      vm.showKyPheDuyetTaiLieu = false\n      vm.showTraKetQua = false\n      vm.showXacNhanThuPhi = false\n      vm.showThuPhi = false\n      vm.showThucHienThanhToanDienTu = false\n      vm.dossierItemDialogPick = dossierItem\n      vm.itemDialogPick = item\n      vm.resultDialogPick = result\n      vm.indexDialogPick = index\n      vm.userNote = 0\n      if (result !== null && result !== undefined && result !== 'undefined' &&\n        (result.hasOwnProperty('userNote') || result.hasOwnProperty('extraForm') || result.hasOwnProperty('allowAssignUser') ||\n        result.hasOwnProperty('createFiles') || result.hasOwnProperty('eSignature') || result.hasOwnProperty('returnFiles') ||\n        result.hasOwnProperty('payment') || result.hasOwnProperty('overdue') || result.hasOwnProperty('betimes'))) {\n        if (result.hasOwnProperty('userNote') && (result.userNote === 1 || result.userNote === '1' || result.userNote === 2 || result.userNote === '2')) {\n          isPopup = true\n          vm.showYkienCanBoThucHien = true\n          vm.userNote = result.userNote\n        }\n        if (result.hasOwnProperty('extraForm') && result.extraForm) {\n          isPopup = true\n          vm.showFormBoSungThongTinNgan = true\n        }\n        if (result.hasOwnProperty('allowAssignUser') && result.allowAssignUser !== 0) {\n          vm.assign_items = result.toUsers\n          vm.type_assign = result.allowAssignUser\n          isPopup = true\n          vm.showPhanCongNguoiThucHien = true\n        }\n        if (result.hasOwnProperty('returnFiles') && result.createFiles !== null && result.createFiles !== undefined && result.createFiles !== 'undefined' && result.createFiles.length > 0) {\n          isPopup = true\n          vm.showTaoTaiLieuKetQua = true\n        }\n        if (result.hasOwnProperty('eSignature') && result.eSignature) {\n          isPopup = true\n          vm.showKyPheDuyetTaiLieu = true\n        }\n        if (result.hasOwnProperty('returnFiles') && result.returnFiles !== null && result.returnFiles !== undefined && result.returnFiles !== 'undefined' && result.returnFiles.length > 0) {\n          isPopup = true\n          vm.showTraKetQua = true\n          vm.returnFiles = result.returnFiles\n        }\n        // if (result.hasOwnProperty('payment') && result.payment !== null && result.payment !== undefined && result.payment !== 'undefined' && result.payment !== '') {\n        //   isPopup = true\n        //   vm.showThuPhi = true\n        //   vm.payments = result.payment\n        //   vm.viaPortalDetail = dossierItem.viaPostal\n        // }\n        // add thanh toán điện tử\n        if (result.hasOwnProperty('payment') && result.payment !== null && result.payment !== undefined && result.payment !== 'undefined' && result.payment.requestPayment > 0) {\n          if (result.payment.requestPayment === 2 || result.payment.requestPayment === '2') {\n            isPopup = true\n            let filter = {\n              dossierId: vm.dossierId\n            }\n            vm.$store.dispatch('loadDossierPayments', filter).then(result => {\n              vm.paymentProfile = result\n              // vm.showThanhToanDienTu = true\n            }).catch(reject => {\n            })\n          } else {\n            isPopup = true\n            vm.showThuPhi = true\n            vm.payments = result.payment\n            vm.viaPortalDetail = dossierItem.viaPostal\n          }\n        }\n        //\n        if (result.hasOwnProperty('overdue')) {\n          isPopup = true\n        }\n        if (result.hasOwnProperty('betimes')) {\n          isPopup = true\n        }\n      }\n      if (isPopup) {\n        /*\n        vm.dialogActionProcess = true\n        vm.loadingActionProcess = false\n        */\n        let query = {\n          activeTab: 'tabs-1',\n          btnIndex: btnIndex\n        }\n        // if (item['autoEvent']) {\n        //   if (item['autoEvent'] === 'special') {\n        //     query['actionSpecial'] = true\n        //   }\n        // }\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/chi-tiet-ho-so/' + dossierItem['dossierId'],\n          query: query\n        })\n      } else {\n        vm.processAction(dossierItem, item, result, index, true)\n      }\n    },\n    processPullBtnDetail (dossierItem, item, index, btnIndex) {\n      let vm = this\n      if (item['enable'] === 1 || item['autoEvent'] === 'special') {\n        vm.itemAction = item\n        let filter = {\n          dossierId: dossierItem.dossierId,\n          actionId: item.processActionId\n        }\n        vm.dossierId = dossierItem.dossierId\n        vm.loadingActionProcess = true\n        vm.$store.dispatch('processPullBtnDetail', filter).then(function (result) {\n          vm.processPullBtnDetailRouter(dossierItem, item, result, index, btnIndex)\n        })\n      }\n    },\n    goBack () {\n      window.history.back()\n    },\n    viewDetail (item, indexItem) {\n      console.log('permission: ', item.permission)\n      if (item.permission !== null && item.permission !== '') {\n        vm.$router.push('/danh-sach-ho-so/' + this.index + '/chi-tiet-ho-so/' + item['dossierId'])\n      }\n    },\n    keywordEventChange (data) {\n      let vm = this\n      vm.selectMultiplePage = []\n      console.log('keywordEventChange', data)\n      vm.advObjectSearch = {}\n      for (let key in data) {\n        if (typeof data[key] === 'string' && data[key] !== null && data[key] !== undefined && data[key] !== 'undefined') {\n          if (!data[key].startsWith('keyword:') && !data[key].startsWith('year_month:') && !data[key].startsWith('top:') &&\n            !data[key].startsWith('status:') && !data[key].startsWith('substatus:') && !data[key].startsWith('agency:') &&\n            !data[key].startsWith('service:') && !data[key].startsWith('domain:') && !data[key].startsWith('register:')) {\n            vm.advObjectSearch['keyword'] = data[key]\n          }\n          if (data[key].startsWith('keyword:')) {\n            vm.advObjectSearch['keyword'] = data[key].replace('keyword:', '')\n          } else {\n            for (let keyTool in vm.advSearchItems) {\n              if (data[key].startsWith(vm.advSearchItems[keyTool].spec + ':')) {\n                vm.advObjectSearch[vm.advSearchItems[keyTool].spec] = data[key].replace(vm.advSearchItems[keyTool].spec + ':', '')\n              }\n            }\n          }\n        } else {\n          let newText = data[key].value\n          vm.advObjectSearch[data[key].spec] = newText.replace(data[key].spec + ':', '')\n        }\n      }\n      vm.advSearchItems = []\n      for (let key in vm.advObjectSearch) {\n        if (!vm.advObjectSearch.hasOwnProperty(key)) continue\n        let value = vm.advObjectSearch[key]\n        if (typeof value === 'string' && value !== null && value !== undefined && value !== '') {\n          if (key === 'keyword') {\n            vm.advSearchItems.push({\n              spec: key,\n              value: key + ':' + value,\n              text: key + ':' + value,\n              index: -1\n            })\n          } else {\n            let toolIndex = -2\n            for (let keyTool in vm.advSearchTools) {\n              if (vm.advSearchTools[keyTool].spec === key) {\n                toolIndex = vm.advSearchTools[keyTool].index\n                break\n              }\n            }\n            vm.advSearchItems.push({\n              spec: key,\n              value: key + ':' + value,\n              text: key + ':' + value,\n              index: toolIndex\n            })\n          }\n        } else if (typeof value !== 'string' && value !== null && value !== undefined && value !== '') {\n          vm.advSearchItems.push({\n            spec: key,\n            value: key + ':' + value.value,\n            text: key + ':' + value.value,\n            index: key + ':' + value.index\n          })\n        }\n      }\n      for (let keyTool in vm.advSearchTools) {\n        vm.advSearchTools[keyTool].display = false\n        vm.advSearchTools[keyTool].disabled = false\n        if (vm.advObjectSearch[vm.advSearchTools[keyTool].spec] !== null && vm.advObjectSearch[vm.advSearchTools[keyTool].spec] !== undefined &&\n          vm.advObjectSearch[vm.advSearchTools[keyTool].spec] !== '') {\n          vm.advSearchTools[keyTool].display = true\n          vm.advSearchTools[keyTool].disabled = true\n        }\n      }\n      console.log('vm.advSearchItems', vm.advSearchItems)\n      vm.doRedirectFilter()\n    },\n    selectedAdvFilter (item) {\n      let vm = this\n      vm.advSearchTools[item.index].display = true\n      vm.advSearchTools[item.index].disabled = true\n      let hasKey = false\n      for (let key in vm.advSearchItems) {\n        if (vm.advSearchItems[key].index === item.index) {\n          hasKey = true\n          break\n        }\n      }\n      if (!hasKey) {\n        vm.advSearchItems.push({\n          spec: vm.advSearchTools[item.index].spec,\n          value: vm.advSearchTools[item.index].spec + ':' + '__',\n          text: vm.advSearchTools[item.index].spec + ':' + '__',\n          index: item.index\n        })\n      }\n    },\n    showAdvFilter () {\n      let vm = this\n      vm.menusss = !vm.menusss\n      vm.$store.dispatch('getStatusLists').then(function (result) {\n        vm.itemFilterSupport.statusLists = result\n        let statusDeleted = {\n          itemCode: 'deleted',\n          itemName: 'Đã xóa'\n        }\n        if (vm.getUser('Administrator_data')) {\n          vm.itemFilterSupport.statusLists.push(statusDeleted)\n        }\n      })\n      let filter = {\n        itemCode: ''\n      }\n      vm.$store.dispatch('getSubstatusLists', filter).then(function (result) {\n        vm.itemFilterSupport.substatusLists = result\n      })\n      vm.$store.dispatch('getAgencyLists').then(function (result) {\n        vm.itemFilterSupport.agencyLists = result\n      })\n      vm.$store.dispatch('getServiceLists').then(function (result) {\n        vm.itemFilterSupport.serviceLists = result\n      })\n      vm.$store.dispatch('getDomainLists').then(function (result) {\n        vm.itemFilterSupport.domainLists = result\n      })\n    },\n    changeAdvFilterData (data, spec, index) {\n      let vm = this\n      console.log('data change advSearch', data, spec, index)\n      if (spec === 'status') {\n        let filter = {\n          itemCode: data\n        }\n        vm.$store.dispatch('getSubstatusLists', filter).then(function (result) {\n          vm.itemFilterSupport.substatusLists = result\n        })\n      }\n      let valueFilter = data\n      if (spec === 'year') {\n        vm.itemFilterSupport.year = data\n        valueFilter = vm.itemFilterSupport.year + '_' + vm.itemFilterSupport.month\n        spec = 'year_month'\n      } else if (spec === 'month') {\n        vm.itemFilterSupport.month = data\n        valueFilter = vm.itemFilterSupport.year + '_' + vm.itemFilterSupport.month\n        spec = 'year_month'\n      } else {\n        /* set State advSearch */\n        vm.itemFilterSupport[spec] = data\n      }\n      for (let key in vm.advSearchItems) {\n        console.log('adv Search index', vm.advSearchItems[key].index)\n        if (vm.advSearchItems[key].index === index) {\n          console.log('vm.itemFilterSupport2', vm.itemFilterSupport)\n          vm.advSearchItems[key].value = spec + ':' + valueFilter\n          vm.advSearchItems[key].text = spec + ':' + valueFilter\n          break\n        }\n      }\n      vm.doRedirectFilter()\n    },\n    doRedirectFilter () {\n      let vm = this\n      vm.selectMultiplePage = []\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      for (let key in newQuery) {\n        if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined &&\n          key !== 'top' && key !== 'status' && key !== 'substatus' && key !== 'agency' && key !== 'service' && key !== 'domain' &&\n          key !== 'register' && key !== 'year' && key !== 'month' && key !== 'adv_renew' && key !== 'keyword') {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      for (let key in vm.advSearchItems) {\n        let currentItemFilter = vm.advSearchItems[key]\n        if (currentItemFilter.spec === 'year_month') {\n          let currentYearMonth = currentItemFilter.text.replace(currentItemFilter.spec + ':', '')\n          const [year, month] = currentYearMonth.split('_')\n          queryString += 'year' + '=' + year + '&' + 'month' + '=' + month + '&'\n        } else {\n          console.log('currentItemFilter.spec', currentItemFilter.text.replace(currentItemFilter.spec + ':', ''))\n          queryString += currentItemFilter.spec + '=' + currentItemFilter.text.replace(currentItemFilter.spec + ':', '') + '&'\n        }\n      }\n      queryString += 'adv_renew=' + Math.floor(Math.random() * (100 - 1 + 1)) + 1\n      queryString = queryString.replace(/=__/g, '=')\n      vm.$router.push({\n        path: current.path + queryString\n      })\n    },\n    changeAdvFilterDataChips (item) {\n      let vm = this\n      // console.log('changeAdvFilterDataChips', vm.advSearchItems)\n      let indexPush = -2\n      for (let key in vm.advSearchTools) {\n        if (item.key === 'delay' || item.key === 'overdue' || item.key === 'coming') {\n          if (vm.advSearchTools[key]['spec'] === 'top') {\n            indexPush = vm.advSearchTools[key]['index']\n            vm.advSearchTools[key].display = true\n            vm.advSearchTools[key].disabled = true\n          }\n        } else {\n          if (vm.advSearchTools[key]['spec'] === 'status') {\n            indexPush = vm.advSearchTools[key]['index']\n            vm.advSearchTools[key].display = true\n            vm.advSearchTools[key].disabled = true\n          }\n        }\n      }\n      let typeSearch = ''\n      if (item.key === 'delay' || item.key === 'overdue' || item.key === 'coming') {\n        typeSearch = 'top'\n      } else {\n        typeSearch = 'status'\n      }\n      let noFilterData = true\n      for (let key in vm.advSearchItems) {\n        if (vm.advSearchItems[key]['spec'] === 'status') {\n          if (item.key !== 'delay' && item.key !== 'overdue' && item.key !== 'coming') {\n            vm.advSearchItems[key].value = 'status' + ':' + item.key\n            vm.advSearchItems[key].text = 'status' + ':' + item.key\n            noFilterData = false\n            break\n          }\n        } else if (vm.advSearchItems[key]['spec'] === 'top') {\n          if (item.key === 'delay' || item.key === 'overdue' || item.key === 'coming') {\n            vm.advSearchItems[key].value = 'top' + ':' + item.key\n            vm.advSearchItems[key].text = 'top' + ':' + item.key\n            noFilterData = false\n            break\n          }\n        }\n      }\n      if (noFilterData) {\n        vm.advSearchItems.push({\n          spec: typeSearch,\n          value: typeSearch + ':' + item.key,\n          text: typeSearch + ':' + item.key,\n          index: indexPush\n        })\n      }\n      vm.doRedirectFilter()\n    },\n    validate () {\n      // validate your form , if you don't have validate prop , default validate pass .\n      return true\n    },\n    callback (token) {\n      // google recaptcha token , then you can pass to backend with your form data .\n      if (token) {\n        alert(token)\n      } else {\n        // if you use data-size show reCAPTCHA , maybe you will get empty token. 6LfuMm4UAAAAAIeNgZHhWHR-aVaqXqNUSsurnzm2\n        alert('please check you are not robot')\n      }\n    }\n  }\n}\n",{"version":3,"sources":["LandingMobile.vue"],"names":[],"mappingskfile":"LandingMobile.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"row-header no__hidden_class\" style=\"background-color: #070f52\">\n      <div class=\"ml-2 py-2 text-bold white--text\" v-if=\"trangThaiHoSoList !== null\"> <span>{{trangThaiHoSoList[index]['title']}}</span> </div>\n    </div>\n    <v-layout wrap class=\"menu_header_list\" :class='{\"no__border__bottom\": btnDynamics === null || btnDynamics === undefined || btnDynamics === \"undefined\" || (btnDynamics !== null && btnDynamics !== undefined && btnDynamics !== \"undefined\" && btnDynamics.length === 0)}'>\n      <!-- <template-rendering v-if=\"menuType === 3\" :item=\"itemFilterSupport\" :layout_view=\"filterForm\"></template-rendering> -->\n      <v-layout wrap v-if=\"originality !== 1\">\n        <v-flex xs12 sm3 class=\"pl-2 pr-2 input-group--text-field-box\">\n          <v-select\n            :items=\"listLinhVuc\"\n            v-model=\"linhVucSelected\"\n            autocomplete\n            placeholder=\"Chọn lĩnh vực\"\n            item-text=\"displayName\"\n            item-value=\"domainCode\"\n            return-object\n            :hide-selected=\"true\"\n            @change=\"changeDomain\"\n            clearable\n          ></v-select>\n        </v-flex>\n        <v-flex xs12 sm3 class=\"pl-2 pr-2 input-group--text-field-box\">\n          <v-select\n            :items=\"listThuTucHanhChinh\"\n            v-model=\"thuTucHanhChinhSelected\"\n            autocomplete\n            placeholder=\"Chọn thủ tục hành chính\"\n            item-text=\"displayName\"\n            item-value=\"serviceConfigId\"\n            return-object\n            :hide-selected=\"true\"\n            @change=\"changeServiceConfigs\"\n            clearable\n          ></v-select>\n        </v-flex>\n        <v-flex xs12 sm3 class=\"pl-2 pr-2 input-group--text-field-box\">\n          <v-select\n            :items=\"listDichVu\"\n            v-model=\"dichVuSelected\"\n            placeholder=\"Chọn dịch vụ:\"\n            autocomplete\n            item-text=\"optionName\"\n            item-value=\"processOptionId\"\n            return-object\n            :hide-selected=\"true\"\n            @change=\"changeDichVuConfigs\"\n          ></v-select>\n        </v-flex>\n        <v-flex xs12 sm3 class=\"pl-2 pr-2\">\n          <div style=\"position:relative\">\n            <v-text-field\n              placeholder=\"Mã hồ sơ, tên hồ sơ, tên thủ tục ...\"\n              v-model=\"searchKey\"\n              @keyup.enter=\"keywordEventChange\"\n              append-icon=\"search\"\n              box\n              :append-icon-cb=\"keywordEventChange\"\n            ></v-text-field>\n            <!-- <v-icon v-if=\"dossierNoKey\" color=\"primary\" @click=\"clearDossierNoKey\" class=\"hover-pointer\" style=\"position:absolute;top:15px;right:0px\">clear</v-icon> -->\n          </div>\n        </v-flex>\n      </v-layout>\n      <div class=\"py-1 px-1\" style=\"background: #f6f6f6;border-top: 1px solid lightgrey;\"\n        v-if=\"dossierCounting !== null && dossierCounting !== undefined && dossierCounting.length > 0 && dossierCountingShow\">\n        <v-chip v-for=\"(item, index) in dossierCounting\" v-bind:key=\"index\" @click=\"changeAdvFilterDataChips(item)\">\n          <v-avatar v-if=\"item.key === 'deleted'\" style=\"background-color: #da0e0e;border-color: #da0e0e;color: #fff;\"><v-icon size=\"16\">delete</v-icon></v-avatar>\n          <v-avatar v-else style=\"background-color: #0b72ba;border-color: #0b72ba;color: #fff;\">{{item.count}}</v-avatar>\n          {{item.title}}\n        </v-chip>\n      </div>\n    </v-layout>\n    <v-flex xs12 sm3 class=\"pl-2 pr-2\" v-if=\"originality === 1 && viewMobile\">\n      <div style=\"position:relative\">\n        <v-text-field\n          placeholder=\"Tìm theo mã hồ sơ, tên hồ sơ, tên thủ tục ...\"\n          v-model=\"searchKey\"\n          @keyup.enter=\"keywordEventChange\"\n          append-icon=\"search\"\n          box\n          :append-icon-cb=\"keywordEventChange\"\n        ></v-text-field>\n      </div>\n    </v-flex>\n    <v-layout wrap v-if=\"loadingDynamicBtn\">\n      <v-flex xs12 sm6>\n      </v-flex>\n      <v-flex xs12 sm2>\n       <content-placeholders class=\"mt-3\">\n        <content-placeholders-text :lines=\"1\" />\n      </content-placeholders>\n      </v-flex>\n      <v-flex xs12 sm2>\n       <content-placeholders class=\"mt-3\">\n        <content-placeholders-text :lines=\"1\" />\n      </content-placeholders>\n      </v-flex>\n      <v-flex xs12 sm2>\n       <content-placeholders class=\"mt-3\">\n        <content-placeholders-text :lines=\"1\" />\n      </content-placeholders>\n      </v-flex>\n    </v-layout>\n    <div v-if=\"!loadingDynamicBtn\" class=\"btn_wrap_actions\">\n      <v-btn color=\"red\" dark\n        v-on:click.native=\"btnActionEvent(null, {form: 'UNDO_DOSSIER'}, 0, true)\" \n        v-if=\"getUser('Administrator_data') && currentQueryState['status'] !== 'deleted'\"\n      >\n       &nbsp; &nbsp; Undo&nbsp; &nbsp;\n      </v-btn>\n      \n      <v-menu left v-if=\"getUser('Administrator_data')\" style=\"position:relative !important\">\n        <v-btn slot=\"activator\" color=\"red\" dark>Go to &nbsp; <v-icon size=\"18\">arrow_drop_down</v-icon></v-btn>\n        <v-list>\n          <v-list-tile @click=\"btnActionEvent(selectedDoAction[selectedDoAction.length - 1], {form: 'GOTO_DONE'}, 0, true)\" >\n            <v-list-tile-title>Hoàn thành</v-list-tile-title>\n          </v-list-tile>\n          <v-list-tile @click=\"btnActionEvent(selectedDoAction[selectedDoAction.length - 1], {form: 'GOTO_CANCEL'}, 0, true)\">\n            <v-list-tile-title>Rút hồ sơ</v-list-tile-title>\n          </v-list-tile>\n          <v-list-tile @click=\"btnActionEvent(selectedDoAction[selectedDoAction.length - 1], {form: 'GOTO_DENY'}, 0, true)\">\n            <v-list-tile-title>Từ chối</v-list-tile-title>\n          </v-list-tile>\n        </v-list>\n      </v-menu>\n\n      <v-btn color=\"red\" dark\n        v-on:click.native=\"btnActionEvent(null, {form: 'CHANGE_DATA_DOSSIER'}, 0, true)\" \n        v-if=\"getUser('Administrator_data') && currentQueryState['status'] !== 'deleted'\"\n      >\n        Điều chỉnh dữ liệu\n      </v-btn>\n\n      <v-btn color=\"red\" dark\n        v-on:click.native=\"btnActionEvent(null, {form: 'DELETE'}, 0, true)\" \n        v-if=\"getUser('Administrator') && currentQueryState['status'] !== 'deleted'\"\n      >\n        DELETE\n      </v-btn>\n      \n      <v-btn color=\"red\" dark\n        v-on:click.native=\"btnActionEvent(null, {form: 'RESTORE_DOSSIER'}, 0, true)\" \n        v-if=\"getUser('Administrator_data') && currentQueryState.hasOwnProperty('status') && currentQueryState['status'] === 'deleted'\"\n      >\n        Khôi phục hồ sơ\n      </v-btn>\n\n      <v-btn color=\"primary\" v-for=\"(item, indexBTN) in btnDynamics\" v-bind:key=\"indexBTN\"\n        v-on:click.native=\"btnActionEvent(null, item, indexBTN, true)\" \n        v-if=\"String(item.form).indexOf('VIEW') < 0 && menuType !== 3\"\n        :loading=\"loadingAction && indexBTN === indexAction\"\n        :disabled=\"loadingAction && indexBTN === indexAction\"\n      >\n        {{item.title}}{{item.tiltle}}\n        <span slot=\"loader\">Loading...</span>\n      </v-btn>\n    </div>\n    \n    <v-data-table\n        :headers=\"headers\"\n        :items=\"hosoDatas\"\n        :total-items=\"hosoDatasTotal\"\n        v-model=\"selected\"\n        item-key=\"dossierId\"\n        :select-all=\"(menuType !== 3 && originality !== 1 && btnDynamics.length > 0) || getUser('Administrator') || getUser('Administrator_data')\"\n        class=\"table-landing table-bordered\"\n        no-data-text=\"Không có hồ sơ nào\"\n        hide-actions\n      >\n      <!--  -->\n      <template slot=\"headers\" slot-scope=\"props\">\n        <tr>\n          <th class=\"v_data_table_check_all\" v-if=\"(menuType !== 3 && originality !== 1 && btnDynamics.length > 0) || getUser('Administrator') || getUser('Administrator_data')\">\n            <v-checkbox\n              :input-value=\"props.all\"\n              :indeterminate=\"props.indeterminate\"\n              primary\n              hide-details\n              @click.native=\"toggleAll\"\n              v-if=\"getUser('Administrator')\"\n            ></v-checkbox>\n            <v-checkbox v-else\n              :input-value=\"props.all\"\n              :indeterminate=\"props.indeterminate\"\n              :disabled=\"!thuTucHanhChinhSelected || (thuTucHanhChinhSelected && thuTucHanhChinhSelected.serviceConfigId === '0') || (thuTucHanhChinhSelected && thuTucHanhChinhSelected.serviceConfigId === '')\"\n              primary\n              hide-details\n              @click.native=\"toggleAll\"\n            ></v-checkbox>\n          </th>\n          <th width=\"30px\">\n            <span>STT</span>\n          </th>\n          <th>\n            <span>Tên thủ tục</span>\n          </th>\n          <th width=\"30px\" v-if=\"!hideAction\"></th>\n        </tr>\n      </template>\n      <!--  -->\n      <template slot=\"items\" slot-scope=\"props\">\n        <tr>\n          <td class=\"v_data_table_check_all\" v-if=\"(menuType !== 3 && originality !== 1 && btnDynamics.length > 0) || getUser('Administrator') || getUser('Administrator_data')\">\n            <v-checkbox\n              v-model=\"props.selected\"\n              @change=\"changeSelected\"\n              primary\n              hide-details\n              color=\"primary\"\n              v-if=\"getUser('Administrator') || getUser('Administrator_data')\"\n            ></v-checkbox>\n            <v-checkbox v-else\n              :disabled=\"props.item['assigned'] === 0 || !thuTucHanhChinhSelected || (thuTucHanhChinhSelected && thuTucHanhChinhSelected.serviceConfigId === '0') || (thuTucHanhChinhSelected && thuTucHanhChinhSelected.serviceConfigId === '')\"\n              v-model=\"props.selected\"\n              @change=\"changeSelected\"\n              primary\n              hide-details\n              color=\"primary\"\n            ></v-checkbox>\n          </td>\n          <td class=\"text-xs-center px-0 py-0\">\n            <content-placeholders v-if=\"loadingTable\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <span v-else @click=\"viewDetail(props.item, props.index)\" style=\"cursor: pointer;\" :class=\"{'no_acction__event': !props.item['permission']}\">\n              {{ hosoDatasPage * 15 - 15 + props.index + 1 }}\n            </span>\n          </td>\n          <td class=\"px-1 py-0\">\n            <content-placeholders v-if=\"loadingTable\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <div v-else @click=\"viewDetail(props.item, props.index)\" style=\"cursor: pointer;\" :class=\"{'no_acction__event': !props.item['permission']}\">\n              <span class=\"primary--text\" v-if=\"props.item.dossierNo\"> {{ props.item.dossierNo }} - </span><span class=\"primary--text\"> {{ props.item.online ? 'Hồ sơ trực tuyến' : 'Hồ sơ một cửa' }}</span><br>\n              <span class=\"primary--text text-bold\"> {{ props.item.serviceName }} </span><br>\n              <span class=\"text-bold\">Chủ hồ sơ: </span> <span>{{ props.item.applicantName }}</span><br>\n              <span class=\"text-bold\">Tiếp nhận: </span> <span>{{ props.item.receiveDate }}</span><br>\n              <span class=\"text-bold\">Hẹn trả: </span> <span>{{ props.item.dueDate }}</span><br>\n              <span v-if=\"props.item.dossierOverdue\" :class=\"props.item.dossierOverdue.indexOf('Quá hạn') >= 0 ? 'red--text' : 'green--text'\">{{ props.item.dossierOverdue }}</span>\n            </div>\n          </td>\n          <td class=\"text-xs-center px-0 py-0\" v-if=\"!hideAction\">\n            <content-placeholders v-if=\"loadingTable\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-menu left style=\"position:relative !important\"\n              v-if=\"!loadingTable && ((btnDynamics !== null || btnDynamics !== undefined || btnDynamics !== 'undefined') || \n                (btnDossierDynamics !== null || btnDossierDynamics !== undefined || btnDossierDynamics !== 'undefined'))\">\n              <v-btn class=\"mx-0 my-0\" slot=\"activator\" icon @click=\"processPullBtnDynamics(props.item)\">\n                <v-icon>more_vert</v-icon>\n              </v-btn>\n              <v-list>\n                <!-- :class=\"{'no_acction__event': (item['enable'] === 2 || props.item['assigned'] === 0)}\" -->\n                <v-list-tile v-for=\"(item, i) in btnDynamics\" :key=\"i + '_menu_' + props.item.dossierId\" \n                  @click=\"btnActionEvent(props.item, item, props.index, false)\"\n                  :disabled=\"String(props.item['permission']).indexOf('write') === -1\"\n                  v-if=\"menuType === 3\"\n                  >\n                  <v-list-tile-title>{{item.title}}{{item.tiltle}}</v-list-tile-title>\n                </v-list-tile>\n                <v-list-tile v-for=\"(item, i) in btnDossierDynamics\" :key=\"i + '_' + props.item.dossierId\" \n                  @click=\"processPullBtnDetail(props.item, item, props.index, i)\" \n                  :disabled=\"item['enable'] === 2 || String(props.item['permission']).indexOf('write') === -1\"\n                  v-if=\"(item['enable'] > 0 || item['autoEvent'] === 'special') && menuType !== 3\"\n                  >\n                  <v-list-tile-title>{{ item.actionName }}</v-list-tile-title>\n                </v-list-tile>\n                <v-list-tile v-for=\"(item, i) in btnStepsDynamics\" :key=\"i + '_' + props.item.dossierId + '_' + props.item.dossierId\"\n                  v-if=\"String(props.item['permission']).indexOf('write') !== -1 && String(item.form) !== 'NEW' && menuType !== 3\"\n                  @click=\"btnActionEvent(props.item, item, index, false)\"\n                >\n                  <v-list-tile-title>{{ item.title }}</v-list-tile-title>\n                </v-list-tile>\n                <v-list-tile @click=\"viewDetail(props.item, props.index)\" :disabled=\"!props.item['permission']\">\n                  Xem chi tiết\n                </v-list-tile>\n              </v-list>\n            </v-menu>\n          </td>\n        </tr>\n      </template>\n    </v-data-table>\n    <div :class=\"!viewMobile ? 'text-xs-right layout wrap' : ''\" style=\"position: relative;\">\n      <div class=\"flex pagging-table px-2\"> \n        <tiny-pagination :total=\"hosoDatasTotal\" :page=\"hosoDatasPage\" custom-class=\"custom-tiny-class\" \n          @tiny:change-page=\"paggingData\" ></tiny-pagination> \n      </div>\n    </div>\n    <v-dialog v-model=\"dialogAction\" max-width=\"400\" transition=\"fade-transition\" persistent>\n      <v-card>\n        <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n          <v-card-title class=\"headline\">{{itemAction.title}}{{itemAction.tiltle}}</v-card-title>\n          <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"dialogAction = false\">\n            <v-icon>clear</v-icon>\n          </v-btn>\n          <v-progress-linear v-if=\"loadingAction\" class=\"my-0\" :indeterminate=\"true\"></v-progress-linear>\n          <v-card-text class=\"pb-0 pt-4\">\n            <v-layout wrap>\n              <v-flex xs12 class=\"px-2 pb-3\">\n                <v-select\n                  :items=\"listThuTucHanhChinh\"\n                  v-model=\"thuTucHanhChinhSelected\"\n                  autocomplete\n                  placeholder=\"chọn thủ tục hành chính\"\n                  item-text=\"serviceName\"\n                  item-value=\"serviceConfigId\"\n                  return-object\n                  :hide-selected=\"true\"\n                  @change = \"changeServiceConfigs\"\n                ></v-select>\n              </v-flex>\n              <v-flex xs12 class=\"px-2\">\n                <v-select\n                  :items=\"listDichVu\"\n                  v-model=\"dichVuSelected\"\n                  label=\"Dịch vụ:\"\n                  autocomplete\n                  placeholder=\"chọn dịch vụ\"\n                  item-text=\"optionName\"\n                  item-value=\"processOptionId\"\n                  return-object\n                  :hide-selected=\"true\"\n                  v-if=\"thuTucHanhChinhSelected && listDichVu.length > 1\"\n                  :rules=\"[v => !!v || 'dịch vụ bắt buộc phải chọn.']\"\n                  @change = \"changeDichVuConfigs\"\n                  required\n                ></v-select>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"red darken-3\" flat=\"flat\" @click.native=\"dialogAction = false\"\n              :loading=\"loadingAction\"\n              :disabled=\"loadingAction\"\n            >\n              <v-icon>undo</v-icon>&nbsp;\n              Quay lại\n              <span slot=\"loader\">Loading...</span>\n            </v-btn>\n            <v-btn color=\"primary\" flat=\"flat\" @click.native=\"doSubmitDialogAction(itemAction)\"\n              :loading=\"loadingAction\"\n              :disabled=\"loadingAction\"\n            >\n              <v-icon>save</v-icon>&nbsp;\n              Đồng ý\n              <span slot=\"loader\">Loading...</span>\n            </v-btn>\n          </v-card-actions>\n        </v-form>\n      </v-card>\n    </v-dialog>\n    <v-dialog v-model=\"dialogActionProcess\" max-width=\"1000\" transition=\"fade-transition\" persistent>\n      <v-card>\n        <v-form ref=\"form\" v-model=\"validProcess\" lazy-validation>\n          <v-card-title class=\"headline\">{{itemAction.actionName}}</v-card-title>\n          <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"dialogActionProcess = false\">\n            <v-icon>clear</v-icon>\n          </v-btn>\n          <v-progress-linear v-if=\"loadingActionProcess\" class=\"my-0\" :indeterminate=\"true\"></v-progress-linear>\n          <v-card-text class=\"py-0 px-0\">\n            <v-layout wrap>\n              <thong-tin-co-ban-ho-so v-if=\"dialogActionProcess\" :detailDossier=\"thongtinhoso\"></thong-tin-co-ban-ho-so>\n              <!-- showFormBoSungThongTinNgan: {{showFormBoSungThongTinNgan}} <br/> -->\n              <phan-cong v-if=\"dialogActionProcess && showPhanCongNguoiThucHien\" v-model=\"assign_items\" :type=\"type_assign\" ></phan-cong>\n              <!-- showTaoTaiLieuKetQua: {{showTaoTaiLieuKetQua}} <br/> -->\n              <!-- showKyPheDuyetTaiLieu: {{showKyPheDuyetTaiLieu}} <br/> -->\n              <tra-ket-qua v-if=\"dialogActionProcess && showTraKetQua\" :resultFiles=\"returnFiles\"></tra-ket-qua>\n              <thu-phi v-if=\"dialogActionProcess && showThuPhi\" v-model=\"payments\" :viaPortal=\"viaPortalDetail\"></thu-phi>\n              <!-- showThucHienThanhToanDienTu: {{showThucHienThanhToanDienTu}} <br/> -->\n              <y-kien-can-bo ref=\"ykiencanbo\" v-if=\"dialogActionProcess && showYkienCanBoThucHien\" :user_note=\"userNote\"></y-kien-can-bo>\n            </v-layout>\n          </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" @click.native=\"submitFormXuLy(dossierItemDialogPick, itemDialogPick, resultDialogPick, indexDialogPick, false)\"\n              :loading=\"loadingActionProcess\"\n              :disabled=\"loadingActionProcess\"\n            >\n            <v-icon>save</v-icon>&nbsp;\n            Xác nhận\n            <span slot=\"loader\">Loading...</span>\n            </v-btn>\n            <v-btn color=\"red\" dark @click.native=\"dialogActionProcess = false\"\n              :loading=\"loadingActionProcess\"\n              :disabled=\"loadingActionProcess\"\n            >\n            <v-icon>undo</v-icon>&nbsp;\n            Quay lại\n            <span slot=\"loader\">Loading...</span>\n            </v-btn>\n          </v-card-actions>\n        </v-form>\n      </v-card>\n    </v-dialog>\n    <v-dialog v-model=\"dialogPDF\" max-width=\"900\" transition=\"fade-transition\">\n      <v-card>\n        <v-card-title class=\"headline\">{{itemAction.title}}{{itemAction.tiltle}}</v-card-title>\n        <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"dialogPDF = false\">\n          <v-icon>clear</v-icon>\n        </v-btn>\n        <div v-if=\"dialogPDFLoading\" style=\"\n            min-height: 600px;\n            text-align: center;\n            margin: auto;\n            padding: 25%;\n        \">\n          <v-progress-circular\n            :size=\"100\"\n            :width=\"1\"\n            color=\"primary\"\n            indeterminate\n          ></v-progress-circular>\n        </div>\n        <iframe v-show=\"!dialogPDFLoading\" id=\"dialogPDFPreview\" src=\"\" type=\"application/pdf\" width=\"100%\" height=\"100%\" style=\"overflow: auto;min-height: 600px;\" frameborder=\"0\">\n        </iframe>\n      </v-card>\n    </v-dialog>\n    <v-dialog v-model=\"dialog_statusAction\" scrollable persistent max-width=\"700px\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Trạng thái xử lý\n        </v-card-title>\n        <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"closeDialogStatusAction\">\n          <v-icon>clear</v-icon>\n        </v-btn>\n        <v-card-text style=\"max-height: 350px\">\n          <div v-for=\"(item, index) in selected\" v-bind:key=\"item.dossierIdCTN\">\n            <v-layout wrap class=\"py-1 align-center row-list-style\" style=\"border-bottom: 1px solid #ddd;position:relative\"> \n              <v-flex xs11>\n                <span class=\"text-bold\" style=\"position: absolute;\">{{index + 1}}.</span> \n                <div class=\"ml-4\"><span class=\"text-bold\">{{item.dossierNo}}</span> - {{item.serviceName}}</div>\n              </v-flex>\n              <v-flex xs1 class=\"text-right\">\n                <v-tooltip top v-if=\"item.statusAction\">\n                  <v-icon size=\"20\" color=\"primary\" slot=\"activator\">\n                    check\n                  </v-icon>\n                  <span>Thành công</span>\n                </v-tooltip>\n                <v-tooltip top v-else>\n                  <v-icon size=\"20\" color=\"red darken-3\" slot=\"activator\">\n                    block\n                  </v-icon>\n                  <span>Thất bại</span>\n                </v-tooltip>\n              </v-flex>\n            </v-layout>\n          </div>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" @click.native=\"resend\" \n            :loading=\"loadingAction\"\n            :disabled=\"loadingAction\"\n          >\n            <v-icon size=\"20\">refresh</v-icon>&nbsp;\n            Thử lại\n            <span slot=\"loader\">Loading...</span>\n          </v-btn>\n          <v-btn color=\"red\" dark @click.native=\"closeDialogStatusAction\"\n            :loading=\"loadingAction\"\n            :disabled=\"loadingAction\"\n          >\n            <v-icon>undo</v-icon>&nbsp;\n            Thoát\n            <span slot=\"loader\">Loading...</span>\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog v-model=\"dialog_printGuide\" scrollable persistent max-width=\"700px\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Thông tin phiếu hướng dẫn hoàn thiện hồ sơ\n        </v-card-title>\n        <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"dialog_printGuide = false\">\n          <v-icon>clear</v-icon>\n        </v-btn>\n        <v-card-text>\n          <v-form ref=\"formGuide\" v-model=\"validGuide\" lazy-validation>\n            <v-layout wrap class=\"py-1 align-center row-list-style\">\n              <v-flex xs12 class=\"px-2 pb-3\">\n                <div class=\"my-2\">Thủ tục hành chính:</div>\n                <v-select\n                  class=\"input-group--text-field-box\"\n                  :items=\"listThuTucHanhChinh\"\n                  v-model=\"thuTucHanhChinhSelectedGuide\"\n                  autocomplete\n                  placeholder=\"Chọn thủ tục hành chính\"\n                  item-text=\"serviceName\"\n                  item-value=\"serviceConfigId\"\n                  return-object\n                  :hide-selected=\"true\"\n                  @change = \"changeServiceConfigsGuide\"\n                  :rules=\"[v => !!v || 'Thủ tục bắt buộc phải chọn.']\"\n                  required\n                ></v-select>\n              </v-flex>\n              <v-flex xs12 class=\"px-2\">\n                <div class=\"my-2\">Dịch vụ:</div>\n                <v-select\n                  class=\"input-group--text-field-box\"\n                  :items=\"listDichVuGuide\"\n                  v-model=\"dichVuSelectedGuide\"\n                  placeholder=\"Chọn dịch vụ\"\n                  autocomplete\n                  item-text=\"optionName\"\n                  item-value=\"processOptionId\"\n                  return-object\n                  :hide-selected=\"true\"\n                  :rules=\"[v => !!v || 'dịch vụ bắt buộc phải chọn.']\"\n                  required\n                ></v-select>\n              </v-flex>\n              <v-flex xs12 class=\"px-2\">\n                <div class=\"my-2\">Tên người làm thủ tục:</div>\n                <v-text-field\n                  placeholder=\"Nhập tên người làm thủ tục\"\n                  box\n                  v-model=\"applicantNameGuide\"\n                  :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                  required\n                ></v-text-field>\n              </v-flex>\n              <v-flex xs12 class=\"px-2\">\n                <div class=\"my-2\">Địa chỉ:</div>\n                <v-text-field\n                  placeholder=\"Nhập địa chỉ\"\n                  box\n                  v-model=\"applicantAddressGuide\"\n                ></v-text-field>\n              </v-flex>\n              <v-flex xs12 class=\"px-2\">\n                <div class=\"my-2\">Thư điện tử:</div>\n                <v-text-field\n                  box\n                  placeholder=\"Nhập thư điện tử\"\n                  v-model=\"applicantEmailGuide\"\n                ></v-text-field>\n              </v-flex>\n              <v-flex xs12 class=\"px-2\">\n                <div class=\"my-2\">Số điện thoại:</div>\n                <v-text-field\n                  box\n                  v-model=\"applicantTelNoGuide\"\n                ></v-text-field>\n              </v-flex>\n            </v-layout>\n          </v-form>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn class=\"mr-3\" color=\"primary\" @click=\"doGuiding()\"\n          :loading=\"loadingAction\"\n          :disabled=\"loadingAction\">\n            <v-icon>print</v-icon> &nbsp;\n            In phiếu hướng dẫn\n            <span slot=\"loader\">Loading...</span>\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n    <v-dialog v-model=\"dialog_extraForm\" scrollable persistent max-width=\"700px\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Điều chỉnh dữ liệu mã hồ sơ: {{selectedDoAction.length > 0 ? selectedDoAction[selectedDoAction.length - 1]['dossierNo'] : ''}}\n        </v-card-title>\n        <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"dialog_extraForm = false\">\n          <v-icon>clear</v-icon>\n        </v-btn>\n        <v-card-text flat class=\"px-0\">\n          <form-bo-sung-thong-tin ref=\"formBoSungThongTinNgan\" :dossier_id=\"dossierIdSelected\" :action_id=\"actionId\" :type=\"'dieuchinhdulieu'\"></form-bo-sung-thong-tin>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn class=\"mr-3\" color=\"primary\" @click=\"doChangeDossierExtraForm()\">\n            <v-icon>save</v-icon> &nbsp;\n            Xác nhận\n          </v-btn>\n          <v-btn class=\"mr-3\" color=\"primary\" @click=\"dialog_extraForm = false\">\n            <v-icon>clear</v-icon> &nbsp;\n            Hủy\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\n\nimport TemplateRendering from './pagging/template_rendering.vue'\nimport TinyPagination from './pagging/hanghai_pagination.vue'\nimport ThongTinCoBanHoSo from './form_xu_ly/ThongTinCoBanHoSo.vue'\nimport PhanCong from './form_xu_ly/PhanCongNguoiThucHien.vue'\nimport TraKetQua from './form_xu_ly/TraKetQua.vue'\nimport XacNhanThuPhi from './form_xu_ly/XacNhanThuPhi.vue'\nimport ThuPhi from './form_xu_ly/FeeDetail.vue'\nimport YkienCanBoThucHien from './form_xu_ly/YkienCanBoThucHien.vue'\nimport support from '../store/support.json'\nimport FormBoSungThongTinNgan from './form_xu_ly/FormBoSungThongTinNgan.vue'\nimport { isMobile } from 'mobile-device-detect'\nexport default {\n  props: ['index'],\n  components: {\n    'tiny-pagination': TinyPagination,\n    'thong-tin-co-ban-ho-so': ThongTinCoBanHoSo,\n    'phan-cong': PhanCong,\n    'tra-ket-qua': TraKetQua,\n    'xac-nhan-thu-phi': XacNhanThuPhi,\n    'thu-phi': ThuPhi,\n    'y-kien-can-bo': YkienCanBoThucHien,\n    'template-rendering': TemplateRendering,\n    'form-bo-sung-thong-tin': FormBoSungThongTinNgan\n  },\n  data: () => ({\n    isAdminSuper: false,\n    actionId: '',\n    dossierIdSelected: '',\n    dossierCountingShow: false,\n    dossierCounting: [],\n    advSearchToolsSelected: [],\n    advSearchTools: support.advSearchTools,\n    advSearchItems: [],\n    advObjectSearch: {},\n    menusss: false,\n    itemFilterSupport: {\n      years: [\n        {\n          'value': '',\n          'name': 'Lọc theo năm'\n        },\n        {\n          'value': '2017',\n          'name': 'năm 2017'\n        },\n        {\n          'value': '2018',\n          'name': 'năm 2018'\n        },\n        {\n          'value': '2019',\n          'name': 'năm 2019'\n        }\n      ],\n      year: '',\n      months: [\n        {\n          'value': '',\n          'name': 'Lọc theo tháng'\n        },\n        {\n          'value': '1',\n          'name': 'tháng 1'\n        },\n        {\n          'value': '2',\n          'name': 'tháng 2'\n        },\n        {\n          'value': '3',\n          'name': 'tháng 3'\n        },\n        {\n          'value': '4',\n          'name': 'tháng 4'\n        },\n        {\n          'value': '5',\n          'name': 'tháng 5'\n        },\n        {\n          'value': '6',\n          'name': 'tháng 6'\n        },\n        {\n          'value': '7',\n          'name': 'tháng 7'\n        },\n        {\n          'value': '8',\n          'name': 'tháng 8'\n        },\n        {\n          'value': '9',\n          'name': 'tháng 9'\n        },\n        {\n          'value': '10',\n          'name': 'tháng 10'\n        },\n        {\n          'value': '11',\n          'name': 'tháng 11'\n        },\n        {\n          'value': '12',\n          'name': 'tháng 12'\n        }\n      ],\n      month: '',\n      tops: [\n        {\n          'value': '',\n          'name': 'toàn bộ'\n        },\n        {\n          'value': 'overdue',\n          'name': 'hồ sơ đang quá hạn cần giải quyết'\n        },\n        {\n          'value': 'delay',\n          'name': 'chậm hạn trả'\n        },\n        {\n          'value': 'coming',\n          'name': 'sắp đến hạn'\n        }\n      ],\n      top: '',\n      statusLists: [],\n      status: '',\n      substatusLists: [\n        {\n          'itemCode': '',\n          'itemName': 'toàn bộ'\n        }\n      ],\n      substatus: '',\n      agencyLists: [],\n      agency: '',\n      serviceLists: [],\n      service: '',\n      domainLists: [],\n      domain: '',\n      keyword: '',\n      register: ''\n    },\n    itemFilterKey: ['year', 'month', 'top', 'status', 'substatus', 'agency', 'service', 'domain', 'keyword', 'register'],\n    menuType: 0,\n    type_assign: '',\n    assign_items: [],\n    /* data TraKetQua */\n    returnFiles: [],\n    /* data XacNhanThuPhi */\n    payments: '',\n    viaPortalDetail: 0,\n    /* */\n    countSelected: 0,\n    statusFailed: 0,\n    dialog_statusAction: false,\n    dialog_printGuide: false,\n    dialog_extraForm: false,\n    validGuide: false,\n    applicantNameGuide: '',\n    applicantEmailGuide: '',\n    applicantTelNoGuide: '',\n    applicantAddressGuide: '',\n    dossierSelected: [\n      {\n        dossierNo: '18ACE289',\n        serviceName: 'Đăng ký, cấp Giấy chứng nhận quyền sử dụng đất, quyền sở hữu nhà ở và tài sản khác gắn liền với đất lần đầu đối với tài sản gắn liền với đất mà chủ sở hữu không đồng thời là người sử dụng đất',\n        statusAction: false\n      }\n    ],\n    /** */\n    buttonConfigItem: {},\n    /* ý kiến cán bộ */\n    textNote: '',\n    /** */\n    thongtinhoso: {},\n    dossierId: 0,\n    valid: true,\n    isCallBack: true,\n    trangThaiHoSoList: null,\n    listDichVu: [],\n    dichVuSelected: null,\n    btnDynamics: [],\n    btnDossierDynamics: [],\n    btnStepsDynamics: [],\n    loading: true,\n    headers: [],\n    hideAction: false,\n    hosoDatas: [],\n    hosoDatasTotal: 0,\n    hosoDatasPage: 1,\n    hosoTotalPage: 0,\n    selectedDoAction: [],\n    selectMultiplePage: [],\n    selected: [],\n    listThuTucHanhChinh: [],\n    listThuTuc: [],\n    thuTucHanhChinhSelected: null,\n    thuTucHanhChinhSelectedGuide: null,\n    listLinhVuc: [],\n    linhVucSelected: null,\n    listDichVuGuide: [],\n    dichVuSelectedGuide: null,\n    templateNoGuide: '',\n    domainCode: '',\n    govAgencyCode: '',\n    serviceCode: '',\n    templateNo: '',\n    dossierNoKey: '',\n    searchKey: '',\n    dialogAction: false,\n    loadingAction: false,\n    dialogActionProcess: false,\n    loadingActionProcess: false,\n    validProcess: false,\n    indexAction: -1,\n    itemAction: {\n      title: ''\n    },\n    showThongTinCoBanHoSo: false,\n    showYkienCanBoThucHien: false,\n    showFormBoSungThongTinNgan: false,\n    showPhanCongNguoiThucHien: false,\n    showTaoTaiLieuKetQua: false,\n    showKyPheDuyetTaiLieu: false,\n    showTraKetQua: false,\n    showXacNhanThuPhi: false,\n    showThuPhi: false,\n    showThucHienThanhToanDienTu: false,\n    dossierItemDialogPick: null,\n    itemDialogPick: null,\n    resultDialogPick: null,\n    indexDialogPick: 0,\n    userNote: 0,\n    dialogPDF: false,\n    dialogPDFLoading: true,\n    filterForm: null,\n    checkSelectAll: (this.menuType !== 3 && this.originality !== 1),\n    titleLanding: '',\n    currentQueryState: ''\n  }),\n  computed: {\n    loadingDynamicBtn () {\n      return this.$store.getters.loadingDynamicBtn\n    },\n    loadingTable () {\n      return this.$store.getters.loadingTable\n    },\n    originality () {\n      var vm = this\n      return vm.getOriginality()\n    },\n    currentUser () {\n      return this.$store.getters.loadingInitData.user\n    },\n    activeLoadingDataHoSo () {\n      return this.$store.getters.activeLoadingDataHoSo\n    },\n    viewMobile () {\n      return isMobile\n    }\n  },\n  created () {\n    var vm = this\n    vm.selectMultiplePage = []\n    vm.$nextTick(function () {\n      let query = vm.$router.history.current.query\n      let currentQuery = vm.$router.history.current.query\n      vm.currentQueryState = query\n      if (query.hasOwnProperty('page') && query['page'] !== '1') {\n        vm.hosoDatasPage = parseInt(query['page'])\n      } else {\n        vm.hosoDatasPage = 1\n      }\n      // <--- set State advSearch\n      vm.setStateAdvSearch(currentQuery)\n      // ---->\n    })\n  },\n  updated () {\n    var vm = this\n    vm.$nextTick(function () {\n      let currentParams = vm.$router.history.current.params\n      let currentQuery = vm.$router.history.current.query\n      vm.currentQueryState = currentQuery\n      if (currentParams.hasOwnProperty('index') && vm.isCallBack) {\n        vm.isCallBack = false\n        vm.$store.commit('setLoadingDynamicBtn', true)\n        setTimeout(() => {\n          vm.$store.dispatch('loadMenuConfigToDo').then(function (result) {\n            vm.btnDynamics = []\n            vm.trangThaiHoSoList = result\n            vm.menuType = parseInt(vm.trangThaiHoSoList[vm.index]['menuType'])\n            vm.processListTTHC(currentQuery)\n            vm.processListDomain(currentQuery)\n            // console.log('vm.trangThaiHoSoList[vm.index]', vm.trangThaiHoSoList[vm.index])\n            if (vm.trangThaiHoSoList[vm.index]['tableConfig'] !== null && vm.trangThaiHoSoList[vm.index]['tableConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['tableConfig'].hasOwnProperty('headers')) {\n              vm.headers = vm.trangThaiHoSoList[vm.index]['tableConfig']['headers']\n            }\n            if (vm.trangThaiHoSoList[vm.index]['tableConfig'] !== null && vm.trangThaiHoSoList[vm.index]['tableConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['tableConfig'].hasOwnProperty('hideAction')) {\n              vm.hideAction = vm.trangThaiHoSoList[vm.index]['tableConfig']['hideAction']\n            }\n            if (vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== null && vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['buttonConfig'].hasOwnProperty('buttons')) {\n              vm.btnDynamics = vm.trangThaiHoSoList[vm.index]['buttonConfig']['buttons']\n            }\n            if (vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== null && vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['buttonConfig'].hasOwnProperty('layout_view')) {\n              vm.filterForm = vm.trangThaiHoSoList[vm.index]['buttonConfig']['layout_view']\n              // console.log('filterForm11111', vm.trangThaiHoSoList[vm.index]['buttonConfig'])\n              // console.log('filterForm', vm.filterForm)\n            }\n            let btnDynamicsOnlySteps = []\n            let btnDynamicsView = []\n            for (let key in vm.btnDynamics) {\n              if (vm.btnDynamics[key].hasOwnProperty('onlySteps')) {\n                btnDynamicsOnlySteps.push(vm.btnDynamics[key])\n              } else {\n                btnDynamicsView.push(vm.btnDynamics[key])\n              }\n            }\n            vm.btnDynamics = []\n            vm.btnDynamics = btnDynamicsView\n            vm.btnStepsDynamics = []\n            if (currentQuery.hasOwnProperty('step')) {\n              for (let key in vm.trangThaiHoSoList[vm.index]['items']) {\n                let currentStep = vm.trangThaiHoSoList[vm.index]['items'][key]\n                if (String(currentStep.stepCode) === String(currentQuery.step)) {\n                  for (let keyOnlyStep in btnDynamicsOnlySteps) {\n                    for (var i = 0; i < btnDynamicsOnlySteps[keyOnlyStep].onlySteps.length; i++) {\n                      if (String(btnDynamicsOnlySteps[keyOnlyStep].onlySteps[i]) === String(currentStep.stepCode)) {\n                        vm.btnDynamics.push(btnDynamicsOnlySteps[keyOnlyStep])\n                      }\n                    }\n                  }\n                  break\n                }\n              }\n            }\n            vm.$store.commit('setLoadingDynamicBtn', false)\n          })\n        }, 200)\n      }\n    })\n  },\n  watch: {\n    '$route': function (newRoute, oldRoute) {\n      let vm = this\n      let currentQuery = newRoute.query\n      let currentQueryOld = oldRoute.query\n      vm.currentQueryState = currentQuery\n      if (currentQuery.hasOwnProperty('q')) {\n        vm.btnDynamics = []\n        vm.$store.commit('setLoadingDynamicBtn', true)\n        vm.menuType = vm.trangThaiHoSoList[vm.index]['menuType']\n        // console.log('vm.trangThaiHoSoList[vm.index]', vm.trangThaiHoSoList[vm.index])\n        vm.headers = vm.trangThaiHoSoList[vm.index]['tableConfig']['headers']\n        if (vm.trangThaiHoSoList[vm.index]['tableConfig'] !== null && vm.trangThaiHoSoList[vm.index]['tableConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['tableConfig'].hasOwnProperty('hideAction')) {\n          vm.hideAction = vm.trangThaiHoSoList[vm.index]['tableConfig']['hideAction']\n        }\n        if (vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== null && vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['buttonConfig'].hasOwnProperty('buttons')) {\n          vm.btnDynamics = vm.trangThaiHoSoList[vm.index]['buttonConfig']['buttons']\n        }\n        if (vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== null && vm.trangThaiHoSoList[vm.index]['buttonConfig'] !== undefined && vm.trangThaiHoSoList[vm.index]['buttonConfig'].hasOwnProperty('layout_view')) {\n          vm.filterForm = vm.trangThaiHoSoList[vm.index]['buttonConfig']['layout_view']\n        }\n        let btnDynamicsOnlySteps = []\n        let btnDynamicsView = []\n        for (let key in vm.btnDynamics) {\n          if (vm.btnDynamics[key].hasOwnProperty('onlySteps')) {\n            btnDynamicsOnlySteps.push(vm.btnDynamics[key])\n          } else {\n            btnDynamicsView.push(vm.btnDynamics[key])\n          }\n        }\n        vm.btnDynamics = []\n        vm.btnDynamics = btnDynamicsView\n        vm.btnStepsDynamics = []\n        if (currentQuery.hasOwnProperty('step')) {\n          for (let key in vm.trangThaiHoSoList[vm.index]['items']) {\n            let currentStep = vm.trangThaiHoSoList[vm.index]['items'][key]\n            if (String(currentStep.stepCode) === String(currentQuery.step)) {\n              for (let keyOnlySteps in btnDynamicsOnlySteps) {\n                for (var i = 0; i < btnDynamicsOnlySteps[keyOnlySteps].onlySteps.length; i++) {\n                  if (String(btnDynamicsOnlySteps[keyOnlySteps].onlySteps[i]) === String(currentStep.stepCode)) {\n                    vm.btnDynamics.push(btnDynamicsOnlySteps[keyOnlySteps])\n                  }\n                }\n              }\n              break\n            }\n          }\n          // console.log('btnDynamics', vm.btnDynamics)\n        }\n        if (currentQuery.hasOwnProperty('page')) {\n          vm.hosoDatasPage = parseInt(currentQuery.page)\n          if (currentQuery.page === currentQueryOld['page']) {\n            vm.selectMultiplePage = []\n          }\n        } else {\n          vm.hosoDatasPage = 1\n          vm.selectMultiplePage = []\n        }\n        vm.$store.commit('setLoadingDynamicBtn', false)\n        if (vm.listLinhVuc === null || vm.listLinhVuc === undefined || (vm.listLinhVuc !== null && vm.listLinhVuc !== undefined && vm.listLinhVuc.length === 0)) {\n          vm.processListDomain(currentQuery)\n        } else {\n          for (let key in vm.listLinhVuc) {\n            if (String(vm.listLinhVuc[key]['domainCode']) === String(currentQuery.domain)) {\n              vm.linhVucSelected = vm.listLinhVuc[key]\n              vm.domainCode = vm.linhVucSelected['domainCode']\n            }\n          }\n        }\n        if (vm.listThuTucHanhChinh === null || vm.listThuTucHanhChinh === undefined || (vm.listThuTucHanhChinh !== null && vm.listThuTucHanhChinh !== undefined && vm.listThuTucHanhChinh.length === 0)) {\n          vm.processListTTHC(currentQuery)\n        } else {\n          vm.doLoadingDataHoSo()\n        }\n        // <--- set State advSearch\n        vm.setStateAdvSearch(currentQuery)\n        // ---->\n      }\n    },\n    activeLoadingDataHoSo (val) {\n      var vm = this\n      setTimeout(function () {\n        vm.doLoadingDataHoSo()\n      }, 100)\n    },\n    selectMultiplePage: {\n      handler: function (val) {\n        let vm = this\n        if (val.length > 0) {\n          vm.selectedDoAction = []\n          for (let key in val) {\n            vm.selectedDoAction = vm.selectedDoAction.concat(val[key]['selected'])\n          }\n        } else {\n          vm.selectedDoAction = []\n        }\n        // console.log('selectedDoAction', vm.selectedDoAction)\n      },\n      deep: true\n    }\n  },\n  methods: {\n    toggleAll () {\n      var vm = this\n      /*\n      if (window.themeDisplay !== null && window.themeDisplay !== undefined && String(window.themeDisplay.getUserId()) === '20139') {\n        vm.isAdminSuper = true\n      }\n      */\n      if (vm.getUser('Administrator')) {\n        if (vm.selected.length) {\n          vm.selected = []\n        } else {\n          vm.selected = vm.hosoDatas\n        }\n      } else {\n        if (!vm.thuTucHanhChinhSelected || (vm.thuTucHanhChinhSelected && vm.thuTucHanhChinhSelected.serviceConfigId === '0') || (vm.thuTucHanhChinhSelected && vm.thuTucHanhChinhSelected.serviceConfigId === '')) {\n          return\n        } else {\n          if (vm.selected.length) {\n            vm.selected = []\n          } else {\n            vm.selected = vm.hosoDatas.filter(function (item) {\n              return item['assigned'] !== 0\n            })\n          }\n        }\n      }\n      vm.selectMultiplePage[vm.hosoDatasPage - 1]['selected'] = vm.selected\n      // console.log('selected toggle all', vm.selectMultiplePage)\n    },\n    getUser (roleItem) {\n      let vm = this\n      let roles = vm.$store.getters.getUser.role\n      let roleExits = roles.findIndex(item => item === roleItem)\n      return (roleExits >= 0)\n    },\n    changeSelected () {\n      let vm = this\n      vm.selectMultiplePage[vm.hosoDatasPage - 1]['selected'] = vm.selected\n      // console.log('selected item', vm.selectMultiplePage)\n    },\n    setStateAdvSearch (currentQuery) {\n      // <--------- set State advSearch\n      let vm = this\n      if (currentQuery.hasOwnProperty('adv_renew')) {\n        vm.advSearchItems = []\n        for (let key1 in vm.itemFilterKey) {\n          for (let key in currentQuery) {\n            if (vm.itemFilterKey[key1] === key && currentQuery[key]) {\n              vm.itemFilterSupport[vm.itemFilterKey[key1]] = currentQuery[key]\n              break\n            } else {\n              vm.itemFilterSupport[vm.itemFilterKey[key1]] = ''\n            }\n          }\n        }\n        for (let key in vm.itemFilterKey) {\n          let spec = vm.itemFilterKey[key]\n          let current = vm.advSearchTools.find(function (item) {\n            return item.spec === spec\n          })\n          if (vm.itemFilterSupport[spec]) {\n            if (spec === 'keyword') {\n              vm.advSearchItems.push({\n                spec: spec,\n                value: spec + ':' + vm.itemFilterSupport[spec],\n                text: spec + ':' + vm.itemFilterSupport[spec],\n                index: -1\n              })\n            } else if (spec === 'year') {\n              let searchDate = vm.advSearchItems.find(function (item) { return item.spec === 'year_month' })\n              if (searchDate) {\n                searchDate['value'] = 'year_month' + ':' + vm.itemFilterSupport[spec] + '_' + vm.itemFilterSupport['month']\n                searchDate['text'] = 'year_month' + ':' + vm.itemFilterSupport[spec] + '_' + vm.itemFilterSupport['month']\n                searchDate['index'] = 0\n              } else {\n                vm.advSearchItems.push({\n                  spec: 'year_month',\n                  value: 'year_month' + ':' + vm.itemFilterSupport[spec] + '_' + vm.itemFilterSupport['month'],\n                  text: 'year_month' + ':' + vm.itemFilterSupport[spec] + '_' + vm.itemFilterSupport['month'],\n                  index: 0\n                })\n              }\n            } else if (spec === 'month') {\n              let searchDate = vm.advSearchItems.find(function (item) { return item.spec === 'year_month' })\n              if (searchDate) {\n                searchDate['value'] = 'year_month' + ':' + vm.itemFilterSupport['year'] + '_' + vm.itemFilterSupport[spec]\n                searchDate['text'] = 'year_month' + ':' + vm.itemFilterSupport['year'] + '_' + vm.itemFilterSupport[spec]\n                searchDate['index'] = 0\n              } else {\n                vm.advSearchItems.push({\n                  spec: 'year_month',\n                  value: 'year_month' + ':' + vm.itemFilterSupport['year'] + '_' + vm.itemFilterSupport[spec],\n                  text: 'year_month' + ':' + vm.itemFilterSupport['year'] + '_' + vm.itemFilterSupport[spec],\n                  index: 0\n                })\n              }\n            } else {\n              vm.advSearchItems.push({\n                spec: spec,\n                value: spec + ':' + vm.itemFilterSupport[spec],\n                text: spec + ':' + vm.itemFilterSupport[spec],\n                index: current['index']\n              })\n            }\n          }\n        }\n      } else {\n        vm.advSearchItems = []\n      }\n      for (let keyTool in vm.advSearchTools) {\n        vm.advSearchTools[keyTool].display = false\n        vm.advSearchTools[keyTool].disabled = false\n        let current = vm.advSearchItems.find(function (item) {\n          return item.spec === vm.advSearchTools[keyTool].spec\n        })\n        if (current) {\n          vm.advSearchTools[keyTool].display = true\n          vm.advSearchTools[keyTool].disabled = true\n        }\n      }\n      // ------->\n    },\n    resend () {\n      var vm = this\n      vm.doActions(null, vm.buttonConfigItem, null, true)\n    },\n    closeDialogStatusAction () {\n      var vm = this\n      vm.dialog_statusAction = false\n      vm.selectedDoAction = vm.selectedDoAction.filter(function (item) {\n        return !item.statusAction\n      })\n    },\n    submitFormXuLy (dossierItemDialogPick, itemDialogPick, resultDialogPick, indexDialogPick, isGroup) {\n      var vm = this\n      if (vm.showYkienCanBoThucHien) {\n        let result = vm.$refs.ykiencanbo.doExport()\n        if (result.valid) {\n          vm.textNote = result.text\n          vm.processAction(dossierItemDialogPick, itemDialogPick, resultDialogPick, indexDialogPick, false)\n        }\n      } else {\n        vm.processAction(dossierItemDialogPick, itemDialogPick, resultDialogPick, indexDialogPick, false)\n      }\n    },\n    processListTTHC (currentQuery) {\n      let vm = this\n      vm.$store.dispatch('loadListThuTucHanhChinh').then(function (result) {\n        if (!currentQuery.hasOwnProperty('domain') || (currentQuery.hasOwnProperty('domain') && String(currentQuery.domain) === '')) {\n          vm.listThuTucHanhChinh = result.map(thuTuc => {\n            thuTuc['displayName'] = thuTuc['serviceCode'] + ' - ' + thuTuc['serviceName']\n            return thuTuc\n          })\n        }\n        vm.listThuTuc = result.map(thuTuc => {\n          thuTuc['displayName'] = thuTuc['serviceCode'] + ' - ' + thuTuc['serviceName']\n          return thuTuc\n        })\n        if (currentQuery.hasOwnProperty('service_config') && String(currentQuery.service_config) !== '0') {\n          for (let key in vm.listThuTucHanhChinh) {\n            if (String(vm.listThuTucHanhChinh[key].serviceConfigId) === String(currentQuery.service_config)) {\n              vm.thuTucHanhChinhSelected = vm.listThuTucHanhChinh[key]\n              if (vm.thuTucHanhChinhSelected !== null && vm.thuTucHanhChinhSelected !== undefined && vm.thuTucHanhChinhSelected.hasOwnProperty('options')) {\n                vm.govAgencyCode = vm.thuTucHanhChinhSelected.govAgencyCode\n                vm.serviceCode = vm.thuTucHanhChinhSelected.serviceCode\n                if (currentQuery.hasOwnProperty('template_no')) {\n                  vm.listDichVu = vm.thuTucHanhChinhSelected.options\n                  for (let keyDv in vm.listDichVu) {\n                    if (vm.listDichVu[keyDv].templateNo === currentQuery.template_no) {\n                      vm.dichVuSelected = vm.listDichVu[keyDv]\n                      vm.templateNo = vm.dichVuSelected.templateNo\n                    }\n                  }\n                } else {\n                  vm.listDichVu = []\n                  vm.dichVuSelected = null\n                  vm.govAgencyCode = ''\n                  vm.serviceCode = ''\n                  vm.templateNo = ''\n                }\n              }\n              break\n            }\n          }\n        } else {\n          vm.thuTucHanhChinhSelected = null\n          vm.dichVuSelected = null\n          vm.govAgencyCode = ''\n          vm.serviceCode = ''\n          vm.templateNo = ''\n        }\n        vm.doLoadingDataHoSo()\n      })\n    },\n    processListDomain (currentQuery) {\n      let vm = this\n      vm.$store.dispatch('getDomainLists').then(function (result) {\n        if (result.length > 0) {\n          vm.listLinhVuc = result.map(domain => {\n            domain['displayName'] = domain['domainCode'] + ' - ' + domain['domainName']\n            return domain\n          })\n        }\n        if (currentQuery.hasOwnProperty('domain') && String(currentQuery.domain) !== '') {\n          for (let key in vm.listLinhVuc) {\n            if (String(vm.listLinhVuc[key]['domainCode']) === String(currentQuery.domain)) {\n              vm.linhVucSelected = vm.listLinhVuc[key]\n              vm.domainCode = vm.linhVucSelected['domainCode']\n            }\n          }\n          let domain = {\n            domain: vm.linhVucSelected.domainCode\n          }\n          vm.$store.dispatch('getServiceinfoFilter', domain).then(result => {\n            vm.listThuTucHanhChinh = result.map(thuTuc => {\n              thuTuc['displayName'] = thuTuc['serviceCode'] + ' - ' + thuTuc['serviceName']\n              return thuTuc\n            })\n          })\n        } else {\n          vm.linhVucSelected = null\n        }\n        // vm.doLoadingDataHoSo()\n      })\n    },\n    checkPemissionSpecialAction (form, currentUser, thongtinchitiet) {\n      var vm = this\n      var checkValue = true\n      // check theo người thực hiện\n      if (form !== 'PRINT_01' && form !== 'PRINT_02' && form !== 'PRINT_03' && form !== 'GUIDE' && form !== 'PREVIEW' && form !== 'BETIMES') {\n        let userArr = vm.$store.getters.getUsersNextAction\n        if (userArr.length > 0) {\n          let check = userArr.filter(function (item) {\n            if (item !== undefined && currentUser !== undefined) {\n              return item['userId'].toString() === currentUser['userId'].toString()\n            }\n          })\n          if (check.length > 0) {\n            checkValue = true\n          } else {\n            checkValue = false\n          }\n        } else {\n          checkValue = false\n        }\n      }\n      // check theo lastactionUser\n      if (form === 'ROLLBACK_01' || form === 'ROLLBACK_02' || form === 'ROLLBACK_03') {\n        // if (currentUser.userId === thongtinchitiet.lastActionUserId) {\n        //   checkValue = true\n        // } else {\n        checkValue = false\n        // }\n      }\n      return checkValue\n    },\n    paggingData (config) {\n      let vm = this\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      newQuery['page'] = ''\n      for (let key in newQuery) {\n        if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined) {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      // console.log('queryString=====', queryString)\n      queryString += 'page=' + config.page\n      vm.$router.push({\n        path: current.path + queryString\n      })\n    },\n    doLoadingDataHoSo () {\n      let vm = this\n      vm.selected = []\n      let currentQuery = vm.$router.history.current.query\n      console.log('currentQuery======', currentQuery)\n      if (currentQuery.hasOwnProperty('q')) {\n        let querySet\n        if (currentQuery.q.indexOf('step') > 0) {\n          querySet = currentQuery.q\n          // console.log('querySet------', querySet)\n        } else {\n          querySet = currentQuery['step'] ? currentQuery.q + '&step=' + currentQuery['step'] : currentQuery.q\n        }\n        var filter = null\n        if (vm.menuType !== 3) {\n          filter = {\n            queryParams: querySet,\n            /*  test local */\n            // queryParams: 'http://127.0.0.1:8081' + querySet,\n            page: vm.hosoDatasPage,\n            agency: currentQuery.hasOwnProperty('agency') ? currentQuery.agency : vm.govAgencyCode,\n            service: currentQuery.hasOwnProperty('service') ? currentQuery.service : vm.serviceCode,\n            template: currentQuery.hasOwnProperty('template') ? currentQuery.template : vm.templateNo,\n            domain: currentQuery.hasOwnProperty('domain') ? currentQuery.domain : vm.domainCode,\n            status: currentQuery.hasOwnProperty('status') ? currentQuery.status : '',\n            substatus: currentQuery.hasOwnProperty('substatus') ? currentQuery.substatus : '',\n            year: currentQuery.hasOwnProperty('year') ? currentQuery.year : 0,\n            month: currentQuery.hasOwnProperty('month') ? currentQuery.month : 0,\n            top: currentQuery.hasOwnProperty('top') ? currentQuery.top : '',\n            keyword: currentQuery.hasOwnProperty('keyword') && currentQuery.keyword ? currentQuery.keyword : vm.searchKey,\n            register: currentQuery.hasOwnProperty('register') ? currentQuery.register : '',\n            dossierNo: vm.dossierNoKey ? vm.dossierNoKey : ''\n          }\n        } else {\n          let originalityDossierDeleted = currentQuery.hasOwnProperty('status') && currentQuery['status'] === 'deleted' ? -1 : ''\n          filter = {\n            queryParams: querySet,\n            /*  test local */\n            // queryParams: 'http://127.0.0.1:8081' + querySet,\n            page: vm.hosoDatasPage,\n            agency: currentQuery.hasOwnProperty('agency') ? currentQuery.agency : vm.govAgencyCode,\n            service: currentQuery.hasOwnProperty('service') ? currentQuery.service : vm.serviceCode,\n            template: currentQuery.hasOwnProperty('template') ? currentQuery.template : vm.templateNo,\n            domain: currentQuery.hasOwnProperty('domain') ? currentQuery.domain : vm.domainCode,\n            status: currentQuery.hasOwnProperty('status') && currentQuery['status'] && currentQuery['status'] !== 'deleted' ? currentQuery.status : '',\n            substatus: currentQuery.hasOwnProperty('substatus') ? currentQuery.substatus : '',\n            year: currentQuery.hasOwnProperty('year') ? currentQuery.year : 0,\n            month: currentQuery.hasOwnProperty('month') ? currentQuery.month : 0,\n            top: currentQuery.hasOwnProperty('top') ? currentQuery.top : '',\n            keyword: currentQuery.hasOwnProperty('keyword') && currentQuery.keyword ? currentQuery.keyword : '',\n            register: currentQuery.hasOwnProperty('register') ? currentQuery.register : '',\n            originality: currentQuery.hasOwnProperty('originality') && currentQuery['originality'] ? currentQuery.originality : originalityDossierDeleted,\n            dossierNo: vm.dossierNoKey ? vm.dossierNoKey : ''\n          }\n        }\n        vm.$store.dispatch('loadingDataHoSo', filter).then(function (result) {\n          vm.hosoDatas = result.data\n          vm.hosoDatasTotal = result.total\n          vm.hosoTotalPage = Math.ceil(vm.hosoDatasTotal / 15)\n          /*\n          if (window.themeDisplay !== null && window.themeDisplay !== undefined && String(window.themeDisplay.getUserId()) === '20139') {\n            vm.isAdminSuper = true\n          }\n          */\n          if (vm.hosoTotalPage > 0 && vm.selectMultiplePage.length === 0) {\n            for (let key = 0; key < vm.hosoTotalPage; key++) {\n              let item = {\n                selected: [],\n                page: key + 1\n              }\n              vm.selectMultiplePage.push(item)\n            }\n            console.log('selectMultiplePage', vm.selectMultiplePage)\n          }\n          vm.selected = vm.selectMultiplePage[vm.hosoDatasPage - 1]['selected']\n        }).catch(reject => {\n          vm.hosoDatas = []\n          vm.hosoDatasTotal = 0\n        })\n      }\n      if (vm.menuType === 3 || String(vm.menuType) === '3') {\n        setTimeout(() => {\n          vm.$store.dispatch('loadingDossierCounting').then(function (result) {\n            if (result !== null && result !== undefined) {\n              vm.dossierCounting = result\n              // add search dossierDeleted\n              if (vm.getUser('Administrator_data')) {\n                let dossierDelete = {key: 'deleted', title: 'Hồ sơ đã xóa', count: 0}\n                vm.dossierCounting.push(dossierDelete)\n              }\n            } else {\n              vm.dossierCounting = []\n            }\n            vm.dossierCountingShow = true\n          })\n        }, 200)\n      } else {\n        vm.dossierCountingShow = false\n      }\n    },\n    changeServiceConfigs (item) {\n      let vm = this\n      vm.selectMultiplePage = []\n      if (item !== null && item !== 'null' && item.hasOwnProperty('options')) {\n        this.listDichVu = item.options\n      } else {\n        this.listDichVu = []\n      }\n      if (this.listDichVu !== null && this.listDichVu !== undefined && this.listDichVu !== 'undefined' && this.listDichVu.length > 0) {\n        this.dichVuSelected = this.listDichVu[0]\n        this.templateNo = this.dichVuSelected.templateNo\n      } else {\n        this.dichVuSelected = null\n      }\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      newQuery['service_config'] = ''\n      newQuery['template_no'] = ''\n      for (let key in newQuery) {\n        if (key === 'page') {\n          queryString += key + '=1&'\n        } else if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined && key !== 'step') {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      if (String(newQuery['q']).indexOf('&step') === -1 && vm.menuType !== 3) {\n        queryString += 'step=' + newQuery['step'] + '&'\n      }\n      if (this.listDichVu !== null && this.listDichVu !== undefined && this.listDichVu !== 'undefined' && this.listDichVu.length > 0) {\n        queryString += 'service_config=' + item.serviceConfigId\n        queryString += '&template_no=' + this.dichVuSelected.templateNo\n        vm.govAgencyCode = item.govAgencyCode\n        vm.serviceCode = item.serviceCode\n      } else {\n        vm.templateNo = ''\n        vm.govAgencyCode = ''\n        vm.serviceCode = ''\n      }\n      vm.$router.push({\n        path: current.path + queryString\n      })\n    },\n    changeServiceConfigsGuide (item) {\n      let vm = this\n      if (item !== null && item !== 'null' && item.hasOwnProperty('options')) {\n        this.listDichVuGuide = item.options\n      } else {\n        this.listDichVuGuide = []\n      }\n      if (this.listDichVuGuide !== null && this.listDichVuGuide !== undefined && this.listDichVuGuide !== 'undefined' && this.listDichVuGuide.length > 0) {\n        this.dichVuSelectedGuide = this.listDichVuGuide[0]\n        this.templateNoGuide = this.dichVuSelectedGuide.templateNo\n      } else {\n        this.dichVuSelectedGuide = null\n      }\n    },\n    changeDomain (item) {\n      // console.log('change Domain')\n      let vm = this\n      vm.selectMultiplePage = []\n      vm.linhVucSelected = item\n      if (item) {\n        setTimeout(function () {\n          let domain = {\n            domain: vm.linhVucSelected.domainCode\n          }\n          vm.$store.dispatch('getServiceinfoFilter', domain).then(result => {\n            vm.listThuTucHanhChinh = result.map(thuTuc => {\n              thuTuc['displayName'] = thuTuc['serviceCode'] + ' - ' + thuTuc['serviceName']\n              return thuTuc\n            })\n          })\n          // vm.listThuTucHanhChinh = vm.listThuTuc.filter(function (itemThuTuc) {\n          //   return (itemThuTuc.serviceCode.split(itemThuTuc.serviceCode.match(/\\d+/g)[0])[0] === item.domainCode)\n          // })\n        }, 100)\n      } else {\n        vm.listThuTucHanhChinh = vm.listThuTuc\n      }\n      if (item !== null) {\n        vm.domainCode = vm.linhVucSelected['domainCode']\n      } else {\n        vm.domainCode = ''\n      }\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      newQuery['domain'] = ''\n      for (let key in newQuery) {\n        if (key === 'page') {\n          queryString += key + '=1&'\n        } else if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined && key !== 'step') {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      if (String(newQuery['q']).indexOf('&step') === -1 && vm.menuType !== 3) {\n        queryString += 'step=' + newQuery['step'] + '&'\n      }\n      queryString += 'domain=' + vm.domainCode\n      // console.log('change Domain queryString', queryString)\n      vm.$router.push({\n        path: current.path + queryString,\n        query: {\n          renew: Math.floor(Math.random() * (100 - 1 + 1)) + 1\n        }\n      })\n    },\n    changeDossierNoKey () {\n      var vm = this\n      vm.selectMultiplePage = []\n      // console.log('run log ...')\n      setTimeout(function () {\n        if (vm.dossierNoKey) {\n          if (vm.dossierNoKey.length > 3 || vm.dossierNoKey === '') {\n            vm.doLoadingDataHoSo()\n          }\n        } else {\n          vm.doLoadingDataHoSo()\n        }\n      }, 200)\n    },\n    clearDossierNoKey () {\n      this.dossierNoKey = ''\n      this.changeDossierNoKey()\n    },\n    changeDichVuConfigs (item) {\n      let vm = this\n      vm.selectMultiplePage = []\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      newQuery['template_no'] = ''\n      for (let key in newQuery) {\n        if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined) {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      queryString += 'template_no=' + item.templateNo\n      vm.templateNo = item.templateNo\n      vm.$router.push({\n        path: current.path + queryString\n      })\n    },\n    btnActionEvent (dossierItem, item, index, isGroup) {\n      let vm = this\n      // set info buttonConfig\n      vm.buttonConfigItem = {}\n      vm.buttonConfigItem = item\n      //\n      vm.itemAction = item\n      // console.log('itemAction++++++++++++', item)\n      vm.indexAction = index\n      if (String(item.form) === 'NEW') {\n        let isOpenDialog = true\n        if (vm.dichVuSelected !== null && vm.dichVuSelected !== undefined && vm.dichVuSelected !== 'undefined' && vm.listDichVu !== null && vm.listDichVu !== undefined && vm.listDichVu.length === 1) {\n          isOpenDialog = false\n        }\n        if (isOpenDialog) {\n          // vm.thuTucHanhChinhSelected = null\n          vm.dialogAction = true\n        } else {\n          vm.doCreateDossier()\n        }\n        // console.log('isOpenDialog++++++++', isOpenDialog)\n      } else if (String(item.form) === 'UPDATE') {\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + dossierItem.dossierId + '/' + vm.itemAction.form,\n          query: vm.$router.history.current.query\n        })\n      } else if (String(item.form) === 'ADD') {\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/bo-sung-ho-so/' + dossierItem.dossierId,\n          query: vm.$router.history.current.query\n        })\n      } else if (String(item.form) === 'COPY') {\n        vm.doCopy(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'CANCEL') {\n        vm.doCancel(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'PRINT_01') {\n        // Xem trước phiếu của một hồ sơ\n        vm.doPrint01(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'PRINT_02') {\n        // Xem trước phiếu gộp của nhiều hồ sơ\n        vm.doPrint02(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'PRINT_03') {\n        // In văn bản mới nhất đã phê duyệt\n        vm.doPrint03(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'GUIDING') {\n        vm.dialog_printGuide = true\n        // vm.doGuiding(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'PREVIEW') {\n        vm.doPreview(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'ACTIONS') {\n        vm.doActions(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'DELETE') {\n        vm.doDeleteDossier(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'ROLLBACK_01') {\n        let result = {\n          actionCode: 9000\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      } else if (String(item.form) === 'ROLLBACK_02') {\n        let result = {\n          actionCode: 9000\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      } else if (String(item.form) === 'OVERDUE') {\n        let result = {\n          actionCode: 8500,\n          dossierId: dossierItem.dossierId,\n          overdue: dossierItem['extendDate']\n        }\n        vm.processPullBtnDetailRouter(dossierItem, null, result, null, 8500)\n      } else if (String(item.form) === 'PREOVERDUE') {\n        let result = {\n          actionCode: 8501,\n          dossierId: dossierItem.dossierId,\n          preoverdue: dossierItem['extendDate']\n        }\n        vm.processPullBtnDetailRouter(dossierItem, null, result, null, 8501)\n      } else if (String(item.form) === 'BETIMES') {\n        let result = {\n          actionCode: 8400,\n          dossierId: dossierItem.dossierId,\n          betimes: dossierItem['extendDate']\n        }\n        vm.processPullBtnDetailRouter(dossierItem, null, result, null, 8400)\n      } else if (String(item.form) === 'CHANGE_DATA_DOSSIER') {\n        vm.doChangeDossier(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'UNDO_DOSSIER') {\n        vm.doUndoDossier(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'RESTORE_DOSSIER') {\n        vm.doRestoreDossier(dossierItem, item, index, isGroup)\n      } else if (String(item.form) === 'GOTO_DONE') {\n        if (!dossierItem) {\n          alert('Chọn hồ sơ để thực hiện')\n          return\n        }\n        let result = {\n          actionCode: 4000\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      } else if (String(item.form) === 'GOTO_CANCEL') {\n        if (!dossierItem) {\n          alert('Chọn hồ sơ để thực hiện')\n          return\n        }\n        let result = {\n          actionCode: 4100\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      } else if (String(item.form) === 'GOTO_DENY') {\n        if (!dossierItem) {\n          alert('Chọn hồ sơ để thực hiện')\n          return\n        }\n        let result = {\n          actionCode: 4200\n        }\n        vm.processAction(dossierItem, item, result, index, true)\n      }\n    },\n    doPrint01 (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.dialogPDFLoading = true\n      vm.dialogPDF = true\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        document: item.document\n      }\n      vm.$store.dispatch('doPrint01', filter).then(function (result) {\n        vm.dialogPDFLoading = false\n        document.getElementById('dialogPDFPreview').src = result\n      })\n    },\n    doPrint02 (dossierItem, item, index, isGroup) {\n      let vm = this\n      console.log('vm.selectedDoAction', vm.selectedDoAction)\n      if (vm.thuTucHanhChinhSelected === null || vm.thuTucHanhChinhSelected === undefined || vm.thuTucHanhChinhSelected === 'undefined') {\n        alert('Loại thủ tục bắt buộc phải chọn')\n      } else {\n        let filter = {\n          document: item.document,\n          'serviceCode': vm.thuTucHanhChinhSelected.serviceCode,\n          'govAgencyCode': vm.thuTucHanhChinhSelected.govAgencyCode,\n          dossiers: JSON.stringify(vm.selectedDoAction)\n        }\n        vm.dialogPDFLoading = true\n        vm.dialogPDF = true\n        vm.$store.dispatch('doPrint02', filter).then(function (result) {\n          vm.dialogPDFLoading = false\n          document.getElementById('dialogPDFPreview').src = result\n        })\n      }\n    },\n    doPrint03 (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.dialogPDFLoading = true\n      vm.dialogPDF = true\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        document: item.document\n      }\n      vm.$store.dispatch('doPrint03', filter).then(function (result) {\n        vm.dialogPDFLoading = false\n        document.getElementById('dialogPDFPreview').src = result\n      })\n    },\n    doGuiding () {\n      let vm = this\n      if (vm.$refs.formGuide.validate()) {\n        vm.loadingAction = true\n        let filter = {\n          serviceConfigId: vm.thuTucHanhChinhSelectedGuide.serviceConfigId,\n          serviceCode: vm.thuTucHanhChinhSelectedGuide.serviceCode,\n          serviceName: vm.thuTucHanhChinhSelectedGuide.serviceName,\n          templateNo: vm.templateNoGuide,\n          applicantName: vm.applicantNameGuide,\n          applicantAddress: vm.applicantAddressGuide,\n          applicantEmail: vm.applicantEmailGuide,\n          applicantTelNo: vm.applicantTelNoGuide,\n          employeeName: window.themeDisplay.getUserName() ? window.themeDisplay.getUserName() : '',\n          typeCode: 'DOC_03'\n        }\n        vm.dialogPDFLoading = true\n        vm.dialogPDF = true\n        vm.$store.dispatch('doGuiding', filter).then(function (result) {\n          vm.loadingAction = false\n          vm.dialog_printGuide = false\n          vm.dialogPDFLoading = false\n          document.getElementById('dialogPDFPreview').src = result\n        }).catch(function () {\n          vm.loadingAction = false\n        })\n      }\n    },\n    doPreview (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.dialogPDFLoading = true\n      vm.dialogPDF = true\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        document: item.document\n      }\n      vm.$store.dispatch('doPrint03', filter).then(function (result) {\n        vm.dialogPDFLoading = false\n        document.getElementById('dialogPDFPreview').src = result\n      })\n    },\n    doActions (dossierItem, item, index, isGroup) {\n      let vm = this\n      let currentQuery = vm.$router.history.current.query\n      let result = {\n        actionCode: item.action\n      }\n      if (isGroup) {\n        vm.countSelected = 0\n        if (vm.selectedDoAction.length === 1) {\n          for (let key in vm.selectedDoAction) {\n            let actionDossierItem = vm.selectedDoAction[key]\n            vm.$router.push({\n              path: '/danh-sach-ho-so/' + vm.index + '/chi-tiet-ho-so/' + actionDossierItem['dossierId'],\n              query: {\n                activeTab: 'tabs-1',\n                btnIndex: null\n              }\n            })\n            // vm.processAction(actionDossierItem, item, result, key, false)\n          }\n        } else if (vm.selectedDoAction.length > 1) {\n          // console.log('run doActions Landing')\n          vm.$store.dispatch('loadActionActive', item).then(function () {\n            vm.$store.dispatch('loadDossierSelected', vm.selectedDoAction).then(function () {\n              let dossiersSelect = vm.selectedDoAction.map(select => {\n                return select.dossierId\n              }).join(',')\n              let query = vm.$router.history.current.query\n              query['dossiers'] = dossiersSelect\n              query['actionActive'] = JSON.stringify(item)\n              vm.$router.push({\n                path: '/danh-sach-ho-so/' + vm.index + '/xu-ly-ho-so',\n                query: query\n              })\n            })\n          })\n        } else {\n          alert('Chọn hồ sơ để thao tác')\n        }\n      }\n    },\n    doCopy (dossierItem, item, index, isGroup) {\n      let vm = this\n      let filter = {\n        dossierId: dossierItem.dossierId\n      }\n      vm.loadingAction = true\n      vm.$store.dispatch('doCopy', filter).then(function (result) {\n        vm.loadingAction = false\n        vm.indexAction = -1\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n          query: vm.$router.history.current.query\n        })\n      }).catch(reject => {\n        vm.loadingAction = false\n      })\n    },\n    doCancel (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.loadingAction = true\n      if (isGroup) {\n        // console.log(vm.selected)\n      } else {\n        let filter = {\n          dossierId: dossierItem.dossierId\n        }\n        vm.$store.dispatch('doCancel', filter).then(function (result) {\n          vm.loadingAction = false\n          vm.indexAction = -1\n          vm.$router.push({\n            path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n            query: vm.$router.history.current.query\n          })\n        }).catch(reject => {\n          vm.loadingAction = false\n        })\n      }\n    },\n    doChangeDossier (dossierItem, item, index, isGroup) {\n      let vm = this\n      let currentQuery = vm.$router.history.current.query\n      if (isGroup) {\n        if (vm.selectedDoAction.length > 0) {\n          let countSelectedDoAction = vm.selectedDoAction.length\n          vm.actionId = 9100\n          vm.dossierIdSelected = vm.selectedDoAction[countSelectedDoAction - 1].dossierId\n          // console.log('selectExtraForm', vm.dossierIdSelected, vm.actionId)\n          vm.dialog_extraForm = true\n        } else {\n          alert('Chọn hồ sơ để thực hiện')\n        }\n      }\n    },\n    doUndoDossier (dossierItem, item, index, isGroup) {\n      let vm = this\n      let currentQuery = vm.$router.history.current.query\n      if (vm.selectedDoAction.length > 0) {\n        let countSelectedDoAction = vm.selectedDoAction.length\n        let x = confirm('Xác thực Undo hồ sơ với mã: ' + vm.selectedDoAction[countSelectedDoAction - 1].dossierNo)\n        if (x) {\n          let fiter = {\n            dossierId: vm.selectedDoAction[countSelectedDoAction - 1].dossierId\n          }\n          vm.$store.dispatch('rollBack', fiter).then(function (result) {\n            setTimeout(function () {\n              vm.doLoadingDataHoSo()\n            }, 300)\n          }).catch(function () {\n            setTimeout(function () {\n              vm.doLoadingDataHoSo()\n            }, 300)\n          })\n        }\n      } else {\n        alert('Chọn hồ sơ để thực hiện')\n      }\n    },\n    doChangeDossierExtraForm () {\n      let vm = this\n      let validation = vm.$refs.formBoSungThongTinNgan.checkValid()\n      if (validation) {\n        let payloadExtraForm = vm.$refs.formBoSungThongTinNgan.formSubmitData()\n        let x = confirm('Bạn có chắc chắn thực hiện hành động điều chỉnh dữ liệu?')\n        if (x) {\n          let countSelectedDoAction = vm.selectedDoAction.length\n          let fiter = {\n            dossierId: vm.selectedDoAction[countSelectedDoAction - 1].dossierId,\n            actionCode: vm.actionId,\n            payload: payloadExtraForm\n          }\n          vm.$store.dispatch('processDossierRouter', fiter).then(function (result) {\n            vm.doLoadingDataHoSo()\n            vm.dialog_extraForm = false\n          }).catch(function () {\n            vm.dialog_extraForm = false\n            vm.doLoadingDataHoSo()\n          })\n        }\n      }\n    },\n    doRestoreDossier () {\n      let vm = this\n      let x = confirm('Bạn có chắc chắn thực hiện hành động khôi phục hồ sơ?')\n      if (x) {\n        if (vm.selectedDoAction.length > 0) {\n          let restoreCounter = 0\n          let lengthDossier = vm.selectedDoAction.length\n          for (let key in vm.selectedDoAction) {\n            let filter = {\n              dossierId: vm.selectedDoAction[key]['dossierId']\n            }\n            console.log('filter Restore', filter)\n            if (vm.selectedDoAction[key]['originality']) {\n              vm.$store.dispatch('restoreDossier', filter).then(function (result) {\n                restoreCounter += 1\n                if (restoreCounter === lengthDossier) {\n                  vm.doLoadingDataHoSo()\n                }\n              }).catch(function () {\n                restoreCounter += 1\n                if (restoreCounter === lengthDossier) {\n                  vm.doLoadingDataHoSo()\n                }\n              })\n            }\n          }\n        } else {\n          alert('Chọn hồ sơ để thực hiện')\n        }\n      }\n    },\n    doDeleteDossier (dossierItem, item, index, isGroup) {\n      let vm = this\n      let x = confirm('Bạn có chắc chắn thực hiện hành động xóa hồ sơ?')\n      if (x) {\n        let currentQuery = vm.$router.history.current.query\n        //\n        if (isGroup) {\n          let filter = {\n            dossierId: 0\n          }\n          // console.log(vm.selected)\n          if (vm.selectedDoAction.length > 0) {\n            let deleteIds = []\n            for (let key in vm.selectedDoAction) {\n              deleteIds.push(vm.selectedDoAction[key]['dossierId'])\n            }\n            filter['dossierId'] = deleteIds\n            vm.$store.dispatch('deleteDossierPatch', filter).then(function (result) {\n            })\n          } else {\n            alert('Chọn hồ sơ để thực hiện')\n          }\n        } else {\n          let filter = {\n            dossierId: dossierItem.dossierId\n          }\n          vm.$store.dispatch('deleteDossier', filter).then(function (result) {\n            vm.dialogActionProcess = false\n            vm.loadingActionProcess = false\n            vm.$router.push({\n              path: vm.$router.history.current.path,\n              query: {\n                recount: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                renew: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                q: currentQuery['q']\n              }\n            })\n          })\n        }\n      } else {\n        return false\n      }\n    },\n    doCreateDossier () {\n      let vm = this\n      let data = {\n        serviceCode: vm.serviceCode,\n        govAgencyCode: vm.govAgencyCode,\n        templateNo: vm.templateNo,\n        originality: vm.getOriginality()\n      }\n      vm.$store.commit('setDataCreateDossier', data)\n      vm.loadingAction = true\n      vm.$store.dispatch('postDossier', data).then(function (result) {\n        vm.loadingAction = false\n        vm.indexAction = -1\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n          query: vm.$router.history.current.query\n        })\n      }).catch(reject => {\n        vm.loadingAction = false\n      })\n    },\n    doSubmitDialogAction (item) {\n      let vm = this\n      if (vm.$refs.form.validate()) {\n        // console.log('yes-----')\n        // console.log('item++++++++', item)\n        vm.doCreateDossier()\n      }\n    },\n    processPullBtnDynamics (item) {\n      let vm = this\n      vm.btnDossierDynamics = []\n      let filter = {\n        dossierId: item.dossierId,\n        dossierStatus: item.dossierStatus,\n        dossierSubStatus: item.dossierSubStatus\n      }\n      vm.dossierId = item.dossierId\n      // if (vm.$router.history.current.query.hasOwnProperty('step')) {\n      //   vm.$store.dispatch('pullNextactions', filter).then(result => {\n      //     vm.btnDossierDynamics = result\n      //   })\n      // } else {\n      if (item.dossierStatus === '' || item.dossierSubStatus === '') {\n        vm.$store.dispatch('pullNextactions', filter).then(result => {\n          vm.btnDossierDynamics = result\n        })\n      } else {\n        vm.btnStepsDynamics = []\n        var getbuttonAction = [vm.$store.dispatch('pullNextactions', filter), vm.$store.dispatch('pullBtnConfigStep', filter)]\n        Promise.all(getbuttonAction).then(result => {\n          vm.btnDossierDynamics = result[0]\n          vm.btnStepsDynamics = result[1]\n        }).catch(reject => {\n          vm.$store.dispatch('pullNextactions', filter).then(result => {\n            vm.btnDossierDynamics = result\n          })\n        })\n      }\n      // }\n    },\n    processAction (dossierItem, item, result, index, isConfirm) {\n      let vm = this\n      var paymentsOut = null\n      if (vm.payments) {\n        paymentsOut = {\n          requestPayment: vm.payments['requestPayment'],\n          advanceAmount: Number(vm.payments['advanceAmount'].toString().replace(/\\./g, '')),\n          feeAmount: Number(vm.payments['feeAmount'].toString().replace(/\\./g, '')),\n          serviceAmount: Number(vm.payments['serviceAmount'].toString().replace(/\\./g, '')),\n          shipAmount: Number(vm.payments['shipAmount'].toString().replace(/\\./g, ''))\n        }\n      }\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        actionCode: result.actionCode,\n        toUsers: vm.assign_items,\n        payment: paymentsOut,\n        userNote: vm.textNote ? vm.textNote : ''\n      }\n      vm.dossierId = dossierItem.dossierId\n      let currentQuery = vm.$router.history.current.query\n      let queryString = '?'\n      currentQuery['recount'] = Math.floor(Math.random() * (100 - 1 + 1)) + 1\n      currentQuery['renew'] = Math.floor(Math.random() * (100 - 1 + 1)) + 1\n      for (let key in currentQuery) {\n        if (currentQuery[key] !== '' && currentQuery[key] !== 'undefined' && currentQuery[key] !== undefined) {\n          queryString += key + '=' + currentQuery[key] + '&'\n        }\n      }\n      vm.loadingActionProcess = true\n      if (isConfirm) {\n        let x = confirm('Bạn có muốn thực hiện hành động này?')\n        if (x) {\n          vm.$store.dispatch('processDossierRouter', filter).then(function (result) {\n            vm.dialogActionProcess = false\n            vm.loadingActionProcess = false\n            vm.$router.push({\n              path: vm.$router.history.current.path + queryString\n            })\n          })\n        } else {\n          return false\n        }\n      } else {\n        if (!dossierItem.statusAction) {\n          vm.$store.dispatch('processCheckNextActions', filter).then(function (newFilter) {\n            vm.$store.dispatch('processDossierRouter', newFilter).then(function (result) {\n              vm.dialogActionProcess = false\n              vm.loadingActionProcess = false\n              //\n              if (String(item.form) === 'ACTIONS') {\n                // get dossier submit fail and show on dialog\n                vm.hosoDatas.splice(index, 1)\n                vm.selectedDoAction[index].statusAction = true\n                vm.countSelected += 1\n                if (vm.countSelected === vm.selectedDoAction.length && vm.statusFailed > 0 && vm.selectedDoAction.length > 1) {\n                  vm.dialog_statusAction = true\n                } else if (vm.countSelected === vm.selectedDoAction.length && vm.statusFailed === 0) {\n                  vm.$router.push({\n                    path: vm.$router.history.current.path,\n                    query: {\n                      recount: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                      renew: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                      q: currentQuery['q']\n                    }\n                  })\n                }\n              } else {\n                vm.$router.push({\n                  path: vm.$router.history.current.path,\n                  query: {\n                    recount: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                    renew: Math.floor(Math.random() * (100 - 1 + 1)) + 1,\n                    q: currentQuery['q']\n                  }\n                })\n              }\n            }).catch(function () {\n              vm.loadingActionProcess = false\n              //\n              if (String(item.form) === 'ACTIONS') {\n                vm.countSelected += 1\n                vm.statusFailed += 1\n                vm.selectedDoAction[index].statusAction = false\n                if (vm.countSelected === vm.selectedDoAction.length && vm.statusFailed > 0 && vm.selectedDoAction.length > 1) {\n                  vm.dialog_statusAction = true\n                }\n              } else {}\n            })\n          })\n        }\n      }\n    },\n    processPullBtnDetailRouter (dossierItem, item, result, index, btnIndex) {\n      let vm = this\n      let isPopup = false\n      vm.dossierId = dossierItem.dossierId\n      vm.showYkienCanBoThucHien = false\n      vm.showFormBoSungThongTinNgan = false\n      vm.showPhanCongNguoiThucHien = false\n      vm.showTaoTaiLieuKetQua = false\n      vm.showKyPheDuyetTaiLieu = false\n      vm.showTraKetQua = false\n      vm.showXacNhanThuPhi = false\n      vm.showThuPhi = false\n      vm.showThucHienThanhToanDienTu = false\n      vm.dossierItemDialogPick = dossierItem\n      vm.itemDialogPick = item\n      vm.resultDialogPick = result\n      vm.indexDialogPick = index\n      vm.userNote = 0\n      if (result !== null && result !== undefined && result !== 'undefined' &&\n        (result.hasOwnProperty('userNote') || result.hasOwnProperty('extraForm') || result.hasOwnProperty('allowAssignUser') ||\n        result.hasOwnProperty('createFiles') || result.hasOwnProperty('eSignature') || result.hasOwnProperty('returnFiles') ||\n        result.hasOwnProperty('payment') || result.hasOwnProperty('overdue') || result.hasOwnProperty('betimes'))) {\n        if (result.hasOwnProperty('userNote') && (result.userNote === 1 || result.userNote === '1' || result.userNote === 2 || result.userNote === '2')) {\n          isPopup = true\n          vm.showYkienCanBoThucHien = true\n          vm.userNote = result.userNote\n        }\n        if (result.hasOwnProperty('extraForm') && result.extraForm) {\n          isPopup = true\n          vm.showFormBoSungThongTinNgan = true\n        }\n        if (result.hasOwnProperty('allowAssignUser') && result.allowAssignUser !== 0) {\n          vm.assign_items = result.toUsers\n          vm.type_assign = result.allowAssignUser\n          isPopup = true\n          vm.showPhanCongNguoiThucHien = true\n        }\n        if (result.hasOwnProperty('returnFiles') && result.createFiles !== null && result.createFiles !== undefined && result.createFiles !== 'undefined' && result.createFiles.length > 0) {\n          isPopup = true\n          vm.showTaoTaiLieuKetQua = true\n        }\n        if (result.hasOwnProperty('eSignature') && result.eSignature) {\n          isPopup = true\n          vm.showKyPheDuyetTaiLieu = true\n        }\n        if (result.hasOwnProperty('returnFiles') && result.returnFiles !== null && result.returnFiles !== undefined && result.returnFiles !== 'undefined' && result.returnFiles.length > 0) {\n          isPopup = true\n          vm.showTraKetQua = true\n          vm.returnFiles = result.returnFiles\n        }\n        // if (result.hasOwnProperty('payment') && result.payment !== null && result.payment !== undefined && result.payment !== 'undefined' && result.payment !== '') {\n        //   isPopup = true\n        //   vm.showThuPhi = true\n        //   vm.payments = result.payment\n        //   vm.viaPortalDetail = dossierItem.viaPostal\n        // }\n        // add thanh toán điện tử\n        if (result.hasOwnProperty('payment') && result.payment !== null && result.payment !== undefined && result.payment !== 'undefined' && result.payment.requestPayment > 0) {\n          if (result.payment.requestPayment === 2 || result.payment.requestPayment === '2') {\n            isPopup = true\n            let filter = {\n              dossierId: vm.dossierId\n            }\n            vm.$store.dispatch('loadDossierPayments', filter).then(result => {\n              vm.paymentProfile = result\n              // vm.showThanhToanDienTu = true\n            }).catch(reject => {\n            })\n          } else {\n            isPopup = true\n            vm.showThuPhi = true\n            vm.payments = result.payment\n            vm.viaPortalDetail = dossierItem.viaPostal\n          }\n        }\n        //\n        if (result.hasOwnProperty('overdue')) {\n          isPopup = true\n        }\n        if (result.hasOwnProperty('betimes')) {\n          isPopup = true\n        }\n      }\n      if (isPopup) {\n        /*\n        vm.dialogActionProcess = true\n        vm.loadingActionProcess = false\n        */\n        let query = {\n          activeTab: 'tabs-1',\n          btnIndex: btnIndex\n        }\n        // if (item['autoEvent']) {\n        //   if (item['autoEvent'] === 'special') {\n        //     query['actionSpecial'] = true\n        //   }\n        // }\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/chi-tiet-ho-so/' + dossierItem['dossierId'],\n          query: query\n        })\n      } else {\n        vm.processAction(dossierItem, item, result, index, true)\n      }\n    },\n    processPullBtnDetail (dossierItem, item, index, btnIndex) {\n      let vm = this\n      if (item['enable'] === 1 || item['autoEvent'] === 'special') {\n        vm.itemAction = item\n        let filter = {\n          dossierId: dossierItem.dossierId,\n          actionId: item.processActionId\n        }\n        vm.dossierId = dossierItem.dossierId\n        vm.loadingActionProcess = true\n        vm.$store.dispatch('processPullBtnDetail', filter).then(function (result) {\n          vm.processPullBtnDetailRouter(dossierItem, item, result, index, btnIndex)\n        })\n      }\n    },\n    goBack () {\n      window.history.back()\n    },\n    viewDetail (item, indexItem) {\n      console.log('permission: ', item.permission)\n      if (item.permission !== null && item.permission !== '') {\n        vm.$router.push('/danh-sach-ho-so/' + this.index + '/chi-tiet-ho-so/' + item['dossierId'])\n      }\n    },\n    keywordEventChange (data) {\n      let vm = this\n      vm.selectMultiplePage = []\n      console.log('keywordEventChange', data)\n      vm.advObjectSearch = {}\n      for (let key in data) {\n        if (typeof data[key] === 'string' && data[key] !== null && data[key] !== undefined && data[key] !== 'undefined') {\n          if (!data[key].startsWith('keyword:') && !data[key].startsWith('year_month:') && !data[key].startsWith('top:') &&\n            !data[key].startsWith('status:') && !data[key].startsWith('substatus:') && !data[key].startsWith('agency:') &&\n            !data[key].startsWith('service:') && !data[key].startsWith('domain:') && !data[key].startsWith('register:')) {\n            vm.advObjectSearch['keyword'] = data[key]\n          }\n          if (data[key].startsWith('keyword:')) {\n            vm.advObjectSearch['keyword'] = data[key].replace('keyword:', '')\n          } else {\n            for (let keyTool in vm.advSearchItems) {\n              if (data[key].startsWith(vm.advSearchItems[keyTool].spec + ':')) {\n                vm.advObjectSearch[vm.advSearchItems[keyTool].spec] = data[key].replace(vm.advSearchItems[keyTool].spec + ':', '')\n              }\n            }\n          }\n        } else {\n          let newText = data[key].value\n          vm.advObjectSearch[data[key].spec] = newText.replace(data[key].spec + ':', '')\n        }\n      }\n      vm.advSearchItems = []\n      for (let key in vm.advObjectSearch) {\n        if (!vm.advObjectSearch.hasOwnProperty(key)) continue\n        let value = vm.advObjectSearch[key]\n        if (typeof value === 'string' && value !== null && value !== undefined && value !== '') {\n          if (key === 'keyword') {\n            vm.advSearchItems.push({\n              spec: key,\n              value: key + ':' + value,\n              text: key + ':' + value,\n              index: -1\n            })\n          } else {\n            let toolIndex = -2\n            for (let keyTool in vm.advSearchTools) {\n              if (vm.advSearchTools[keyTool].spec === key) {\n                toolIndex = vm.advSearchTools[keyTool].index\n                break\n              }\n            }\n            vm.advSearchItems.push({\n              spec: key,\n              value: key + ':' + value,\n              text: key + ':' + value,\n              index: toolIndex\n            })\n          }\n        } else if (typeof value !== 'string' && value !== null && value !== undefined && value !== '') {\n          vm.advSearchItems.push({\n            spec: key,\n            value: key + ':' + value.value,\n            text: key + ':' + value.value,\n            index: key + ':' + value.index\n          })\n        }\n      }\n      for (let keyTool in vm.advSearchTools) {\n        vm.advSearchTools[keyTool].display = false\n        vm.advSearchTools[keyTool].disabled = false\n        if (vm.advObjectSearch[vm.advSearchTools[keyTool].spec] !== null && vm.advObjectSearch[vm.advSearchTools[keyTool].spec] !== undefined &&\n          vm.advObjectSearch[vm.advSearchTools[keyTool].spec] !== '') {\n          vm.advSearchTools[keyTool].display = true\n          vm.advSearchTools[keyTool].disabled = true\n        }\n      }\n      console.log('vm.advSearchItems', vm.advSearchItems)\n      vm.doRedirectFilter()\n    },\n    selectedAdvFilter (item) {\n      let vm = this\n      vm.advSearchTools[item.index].display = true\n      vm.advSearchTools[item.index].disabled = true\n      let hasKey = false\n      for (let key in vm.advSearchItems) {\n        if (vm.advSearchItems[key].index === item.index) {\n          hasKey = true\n          break\n        }\n      }\n      if (!hasKey) {\n        vm.advSearchItems.push({\n          spec: vm.advSearchTools[item.index].spec,\n          value: vm.advSearchTools[item.index].spec + ':' + '__',\n          text: vm.advSearchTools[item.index].spec + ':' + '__',\n          index: item.index\n        })\n      }\n    },\n    showAdvFilter () {\n      let vm = this\n      vm.menusss = !vm.menusss\n      vm.$store.dispatch('getStatusLists').then(function (result) {\n        vm.itemFilterSupport.statusLists = result\n        let statusDeleted = {\n          itemCode: 'deleted',\n          itemName: 'Đã xóa'\n        }\n        if (vm.getUser('Administrator_data')) {\n          vm.itemFilterSupport.statusLists.push(statusDeleted)\n        }\n      })\n      let filter = {\n        itemCode: ''\n      }\n      vm.$store.dispatch('getSubstatusLists', filter).then(function (result) {\n        vm.itemFilterSupport.substatusLists = result\n      })\n      vm.$store.dispatch('getAgencyLists').then(function (result) {\n        vm.itemFilterSupport.agencyLists = result\n      })\n      vm.$store.dispatch('getServiceLists').then(function (result) {\n        vm.itemFilterSupport.serviceLists = result\n      })\n      vm.$store.dispatch('getDomainLists').then(function (result) {\n        vm.itemFilterSupport.domainLists = result\n      })\n    },\n    changeAdvFilterData (data, spec, index) {\n      let vm = this\n      console.log('data change advSearch', data, spec, index)\n      if (spec === 'status') {\n        let filter = {\n          itemCode: data\n        }\n        vm.$store.dispatch('getSubstatusLists', filter).then(function (result) {\n          vm.itemFilterSupport.substatusLists = result\n        })\n      }\n      let valueFilter = data\n      if (spec === 'year') {\n        vm.itemFilterSupport.year = data\n        valueFilter = vm.itemFilterSupport.year + '_' + vm.itemFilterSupport.month\n        spec = 'year_month'\n      } else if (spec === 'month') {\n        vm.itemFilterSupport.month = data\n        valueFilter = vm.itemFilterSupport.year + '_' + vm.itemFilterSupport.month\n        spec = 'year_month'\n      } else {\n        /* set State advSearch */\n        vm.itemFilterSupport[spec] = data\n      }\n      for (let key in vm.advSearchItems) {\n        console.log('adv Search index', vm.advSearchItems[key].index)\n        if (vm.advSearchItems[key].index === index) {\n          console.log('vm.itemFilterSupport2', vm.itemFilterSupport)\n          vm.advSearchItems[key].value = spec + ':' + valueFilter\n          vm.advSearchItems[key].text = spec + ':' + valueFilter\n          break\n        }\n      }\n      vm.doRedirectFilter()\n    },\n    doRedirectFilter () {\n      let vm = this\n      vm.selectMultiplePage = []\n      let current = vm.$router.history.current\n      let newQuery = current.query\n      let queryString = '?'\n      for (let key in newQuery) {\n        if (newQuery[key] !== '' && newQuery[key] !== 'undefined' && newQuery[key] !== undefined &&\n          key !== 'top' && key !== 'status' && key !== 'substatus' && key !== 'agency' && key !== 'service' && key !== 'domain' &&\n          key !== 'register' && key !== 'year' && key !== 'month' && key !== 'adv_renew' && key !== 'keyword') {\n          queryString += key + '=' + newQuery[key] + '&'\n        }\n      }\n      for (let key in vm.advSearchItems) {\n        let currentItemFilter = vm.advSearchItems[key]\n        if (currentItemFilter.spec === 'year_month') {\n          let currentYearMonth = currentItemFilter.text.replace(currentItemFilter.spec + ':', '')\n          const [year, month] = currentYearMonth.split('_')\n          queryString += 'year' + '=' + year + '&' + 'month' + '=' + month + '&'\n        } else {\n          console.log('currentItemFilter.spec', currentItemFilter.text.replace(currentItemFilter.spec + ':', ''))\n          queryString += currentItemFilter.spec + '=' + currentItemFilter.text.replace(currentItemFilter.spec + ':', '') + '&'\n        }\n      }\n      queryString += 'adv_renew=' + Math.floor(Math.random() * (100 - 1 + 1)) + 1\n      queryString = queryString.replace(/=__/g, '=')\n      vm.$router.push({\n        path: current.path + queryString\n      })\n    },\n    changeAdvFilterDataChips (item) {\n      let vm = this\n      // console.log('changeAdvFilterDataChips', vm.advSearchItems)\n      let indexPush = -2\n      for (let key in vm.advSearchTools) {\n        if (item.key === 'delay' || item.key === 'overdue' || item.key === 'coming') {\n          if (vm.advSearchTools[key]['spec'] === 'top') {\n            indexPush = vm.advSearchTools[key]['index']\n            vm.advSearchTools[key].display = true\n            vm.advSearchTools[key].disabled = true\n          }\n        } else {\n          if (vm.advSearchTools[key]['spec'] === 'status') {\n            indexPush = vm.advSearchTools[key]['index']\n            vm.advSearchTools[key].display = true\n            vm.advSearchTools[key].disabled = true\n          }\n        }\n      }\n      let typeSearch = ''\n      if (item.key === 'delay' || item.key === 'overdue' || item.key === 'coming') {\n        typeSearch = 'top'\n      } else {\n        typeSearch = 'status'\n      }\n      let noFilterData = true\n      for (let key in vm.advSearchItems) {\n        if (vm.advSearchItems[key]['spec'] === 'status') {\n          if (item.key !== 'delay' && item.key !== 'overdue' && item.key !== 'coming') {\n            vm.advSearchItems[key].value = 'status' + ':' + item.key\n            vm.advSearchItems[key].text = 'status' + ':' + item.key\n            noFilterData = false\n            break\n          }\n        } else if (vm.advSearchItems[key]['spec'] === 'top') {\n          if (item.key === 'delay' || item.key === 'overdue' || item.key === 'coming') {\n            vm.advSearchItems[key].value = 'top' + ':' + item.key\n            vm.advSearchItems[key].text = 'top' + ':' + item.key\n            noFilterData = false\n            break\n          }\n        }\n      }\n      if (noFilterData) {\n        vm.advSearchItems.push({\n          spec: typeSearch,\n          value: typeSearch + ':' + item.key,\n          text: typeSearch + ':' + item.key,\n          index: indexPush\n        })\n      }\n      vm.doRedirectFilter()\n    },\n    validate () {\n      // validate your form , if you don't have validate prop , default validate pass .\n      return true\n    },\n    callback (token) {\n      // google recaptcha token , then you can pass to backend with your form data .\n      if (token) {\n        alert(token)\n      } else {\n        // if you use data-size show reCAPTCHA , maybe you will get empty token. 6LfuMm4UAAAAAIeNgZHhWHR-aVaqXqNUSsurnzm2\n        alert('please check you are not robot')\n      }\n    }\n  }\n}\n</script>\n"]}]}