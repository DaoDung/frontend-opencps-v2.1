{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/TiepNhan/TiepNhanHoSo_ThanhPhanHoSo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/TiepNhan/TiepNhanHoSo_ThanhPhanHoSo.vue","mtime":1548065606916},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport $ from 'jquery'\nimport toastr from 'toastr'\ntoastr.options = {\n  'closeButton': true,\n  'timeOut': '20000'\n}\nexport default {\n  props: {\n    onlyView: {\n      type: Boolean,\n      default: () => false\n    },\n    id: {\n      type: String,\n      default: () => 'nm'\n    },\n    partTypes: {\n      type: Array,\n      default: () => [1, 3]\n    },\n    checkInput: {\n      type: Number,\n      default: () => 0\n    }\n  },\n  data: () => ({\n    dossierTemplateItems: [],\n    dossierMarksItems: [],\n    dossierFilesItems: [],\n    thongTinHoSo: {},\n    valid: true,\n    stateView: false,\n    dialogAddOtherTemp: false,\n    loadingAddOther: false,\n    otherDossierTemplate: '',\n    sheet: false,\n    partView: '',\n    dossierFileIdView: '',\n    stateEdit: false,\n    progressUploadPart: '',\n    dialogPDF: false,\n    dialogPDFLoading: true,\n    stateAddFileOther: false,\n    dossierTemplatesItemSelect: {},\n    fileViews: [],\n    pdfEform: false,\n    sampleCount: 0,\n    serviceInfoId: 0,\n    fileMarkItems: [{\n      text: 'Không có',\n      value: 0\n    }, {\n      text: 'Bản chụp',\n      value: 1\n    }, {\n      text: 'Bản sao',\n      value: 2\n    }, {\n      text: 'Bản gốc',\n      value: 3\n    }],\n    fileCheckItems: [{\n      text: 'Chưa kiểm tra',\n      value: 0\n    }, {\n      text: 'Đạt',\n      value: 1\n    }, {\n      text: 'Không đạt',\n      value: 2\n    }],\n    fileTemplateItems: [],\n    fileTemplateNoString: '',\n    dossierFilesApplicant: [],\n    stateViewResult: true,\n    currentFormView: '',\n    pstFixed: 0,\n    pstEl: 0,\n    endEl: 0,\n    applicantNoteDossier: ''\n  }),\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    },\n    originality () {\n      var vm = this\n      return vm.getOriginality()\n    },\n    initDataResource () {\n      return this.$store.getters.loadingInitData\n    },\n    dossierTemplateItemsFilter () {\n      let vm = this\n      let dossierTemplate = vm.dossierTemplateItems\n      if (dossierTemplate.length > 0) {\n        let filter = dossierTemplate.filter(function (item) {\n          return vm.partTypes.includes(item.partType) && vm.checkVisibleTemp(item, 0)\n        })\n        return filter\n      }\n    },\n    applicantBussinessExit () {\n      return this.$store.getters.getApplicantBussinessExit\n    },\n    applicantId () {\n      return this.$store.getters.getApplicantIdNo\n    },\n    applicantNote () {\n      return this.$store.getters.getApplicantNote\n    }\n  },\n  mounted () {\n    var vm = this\n    vm.page = 1\n    vm.$nextTick(function () {\n    })\n  },\n  watch: {\n    applicantBussinessExit (val) {\n      let vm = this\n      if (val && vm.fileTemplateNoString) {\n        vm.getDossierFileApplicants(val, vm.fileTemplateNoString)\n      }\n    },\n    applicantId (val) {\n      let vm = this\n      if (val && vm.fileTemplateNoString) {\n        vm.getDossierFileApplicants(val, vm.fileTemplateNoString)\n      }\n    }\n  },\n  methods: {\n    resetCounterTemplate ({commit, state}, data) {\n      var vm = this\n      vm.dossierTemplateItems.forEach(val => {\n        if (val.partNo === data.partNo) {\n          if (val.hasForm) {\n            val.count = 1\n          } else {\n            val.count = 0\n          }\n        }\n      })\n    },\n    recountFileTemplates () {\n      var vm = this\n      vm.dossierTemplateItems.forEach(itemTemplate => {\n        itemTemplate.count = 0\n        vm.dossierFilesItems.forEach(itemFile => {\n          if (itemTemplate.partNo === itemFile.dossierPartNo && !itemFile.eForm) {\n            itemTemplate.count ++\n          }\n        })\n      })\n    },\n    initData (data) {\n      var vm = this\n      vm.thongTinHoSo = data\n      vm.applicantNoteDossier = data['applicantNote']\n      var arrTemp = []\n      if (data['sampleCount'] !== null && data['sampleCount'] !== undefined && data['sampleCount'] !== 'undefined') {\n        vm.sampleCount = data['sampleCount']\n      }\n      arrTemp.push(vm.$store.dispatch('loadDossierTemplates', data))\n      arrTemp.push(vm.$store.dispatch('loadDossierMark', data))\n      arrTemp.push(vm.$store.dispatch('loadDossierFiles', data.dossierId))\n      arrTemp.push(vm.$store.dispatch('getServiceInfo', {\n        serviceInfoId: data.serviceCode\n      }))\n      Promise.all(arrTemp).then(values => {\n        var dossierTemplates = values[0]\n        var dossierMarks = values[1]\n        var dossierFiles = values[2]\n        var fileTemplates = []\n        if (values[3].hasOwnProperty('serviceInfoId')) {\n          vm.serviceInfoId = values[3].serviceInfoId\n        }\n        if (values[3].fileTemplates) {\n          if (Array.isArray(values[3].fileTemplates)) {\n            fileTemplates = values[3].fileTemplates\n          } else {\n            fileTemplates.push(values[3].fileTemplates)\n          }\n        }\n        // console.log('dossierTemplates++++++', dossierTemplates)\n        // console.log('dossierMarks++++++', dossierMarks)\n        // console.log('dossierFiles++++++', dossierFiles)\n        var dossierTemplateItems = vm.mergeDossierTemplateVsDossierFiles(dossierTemplates, dossierFiles)\n        // console.log('dossierTemplateItems++++++MERGER++++file', dossierTemplateItems)\n        dossierTemplateItems = vm.mergeDossierTemplateVsDossierMark(dossierTemplateItems, dossierMarks)\n        dossierTemplateItems = vm.mergeDossierTemplateVsFileTemplates(dossierTemplateItems, fileTemplates)\n        // console.log('dossierTemplateItems++++++MERGE++++mark', dossierTemplateItems)\n        vm.dossierFilesItems = dossierFiles\n        vm.dossierMarksItems = dossierMarks\n        vm.fileTemplateItems = fileTemplates\n        vm.dossierTemplateItems = dossierTemplateItems\n        if (vm.partTypes.includes(2) && vm.dossierTemplateItems.length > 0) {\n          let dossierTemplateKQ = []\n          vm.dossierTemplateItems.forEach(item => {\n            let hasKQ = vm.dossierFilesItems.find(file => {\n              return (item.partNo === file.dossierPartNo && item.partType === 2)\n            })\n            if (hasKQ) {\n              dossierTemplateKQ.push(item)\n            }\n          })\n          vm.dossierTemplateItems = dossierTemplateKQ\n          console.log('dossierTemplateItems555', vm.dossierTemplateItems)\n        }\n        vm.changeStateViewResult()\n        setTimeout(function (argument) {\n          vm.genAllAlpacaForm(dossierFiles, dossierTemplateItems)\n          vm.recountFileTemplates()\n        }, 500)\n        console.log('dossierTemplateItems', vm.dossierTemplateItems)\n        let fileTemplateNoArr = []\n        for (let key in vm.dossierTemplateItems) {\n          if (vm.dossierTemplateItems[key]['fileTemplateNo']) {\n            fileTemplateNoArr.push(vm.dossierTemplateItems[key]['fileTemplateNo'])\n          }\n        }\n        if (fileTemplateNoArr.length > 0) {\n          vm.fileTemplateNoString = fileTemplateNoArr.toString()\n          console.log('fileTemplateNoString', vm.fileTemplateNoString)\n          if (vm.applicantId && !vm.onlyView) {\n            vm.getDossierFileApplicants(vm.applicantId, vm.fileTemplateNoString)\n          }\n        }\n      }).catch(reject => {\n      })\n    },\n    genAllAlpacaForm (dossierFiles, dossierTemplateItems) {\n      var vm = this\n      if (dossierFiles.length > 0) {\n        var dossierFilesEform = dossierFiles.filter(file => {\n          return file.eForm\n        })\n        var dossierTemplatesHasForm = dossierTemplateItems.filter(template => {\n          return template.hasForm && vm.partTypes.includes(template.partType)\n        })\n        if (dossierFilesEform.length > 0) {\n          dossierFilesEform.forEach(itemFiles => {\n            if (itemFiles.eForm) {\n              vm.$store.dispatch('loadAlpcaForm', itemFiles)\n            }\n          })\n        } else {\n          dossierTemplateItems.forEach(val => {\n            if (val.hasForm && vm.partTypes.includes(val.partType)) {\n              val['templateFileNo'] = vm.thongTinHoSo.dossierTemplateNo\n              vm.showAlpacaJSFORM(val)\n            }\n          })\n        }\n        if (dossierTemplatesHasForm.length !== dossierFilesEform.length) {\n          dossierTemplatesHasForm.forEach(template => {\n            let indexFromFile = dossierFilesEform.findIndex(item => {\n              return template.partNo === item.dossierPartNo\n            })\n            if (indexFromFile === -1) {\n              template['templateFileNo'] = vm.thongTinHoSo.dossierTemplateNo\n              vm.showAlpacaJSFORM(template)\n            }\n          })\n        }\n      } else {\n        dossierTemplateItems.forEach(val => {\n          if (val.hasForm && vm.partTypes.includes(val.partType)) {\n            val['templateFileNo'] = vm.thongTinHoSo.dossierTemplateNo\n            vm.showAlpacaJSFORM(val)\n          }\n        })\n      }\n    },\n    postDossierMark (item, index) {\n      var vm = this\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      vm.$store.dispatch('postDossierMark', item).then(resultMark => {\n      }).catch(reject => {\n      })\n      //   dossierTemplates.forEach(function (val, index) {\n        //     if (val.partType === 1) {\n        //       val['dossierId'] = vm.dossierId\n        //       listDossierMark.push(vm.$store.dispatch('postDossierMark', val))\n        //     }\n        //   })\n    },\n    mergeDossierTemplateVsDossierFiles (dossierTemplates, dossierFiles) {\n      var vm = this\n      if (dossierFiles.length !== 0) {\n        dossierTemplates.forEach(template => {\n          template['daKhai'] = false\n          template['passRequired'] = false\n          var itemFind = dossierFiles.find(file => {\n            return template.partNo === file.dossierPartNo && vm.partTypes.includes(template.partType) && file.eForm && !file.removed\n          })\n          if (itemFind) {\n            template['daKhai'] = true\n            template['hasForm'] = true\n            template['referenceUid'] = itemFind['referenceUid']\n          }\n          dossierFiles.forEach(dossierFile => {\n            if (template.partNo === dossierFile.dossierPartNo) {\n              template['passRequired'] = true\n            }\n          })\n        })\n      } else {\n        dossierTemplates.forEach(template => {\n          if (template.hasForm) {\n            template['daKhai'] = false\n            template['passRequired'] = false\n          }\n        })\n      }\n      return dossierTemplates\n    },\n    mergeDossierTemplateVsDossierMark (dossierTemplates, dossierMarks) {\n      if (dossierMarks.length !== 0) {\n        dossierTemplates.map(itemTemplate => {\n          itemTemplate['count'] = 0\n          itemTemplate['stateEditFileCheck'] = false\n          let fileMarkFind = dossierMarks.find(fileMark => {\n            return fileMark.dossierPartNo === itemTemplate.partNo\n          })\n          if (fileMarkFind !== null && fileMarkFind !== undefined) {\n            itemTemplate['fileMark'] = fileMarkFind.fileMark\n            itemTemplate['fileComment'] = fileMarkFind.fileComment\n            itemTemplate['fileCheck'] = fileMarkFind.fileCheck\n          } else {\n            itemTemplate['fileMark'] = 0\n            itemTemplate['fileComment'] = ''\n            itemTemplate['fileCheck'] = 0\n          }\n          return itemTemplate\n        })\n      } else {\n        if (dossierTemplates) {\n          dossierTemplates.forEach(itemTemplate => {\n            itemTemplate['stateEditFileCheck'] = false\n            itemTemplate['count'] = 0\n            itemTemplate['fileMark'] = 0\n            itemTemplate['fileComment'] = ''\n            itemTemplate['fileCheck'] = 0\n            itemTemplate['stateEditFileCheck'] = false\n          })\n        }\n      }\n      return dossierTemplates\n    },\n    mergeDossierTemplateVsFileTemplates (dossierTemplates, fileTemplates) {\n      if (fileTemplates.length !== 0) {\n        dossierTemplates.map(itemTemplate => {\n          let fileTemp = fileTemplates.find(fileTemplate => {\n            return fileTemplate.fileTemplateNo === itemTemplate.fileTemplateNo\n          })\n          if (fileTemp !== null && fileTemp !== undefined) {\n            itemTemplate['hasFileTemp'] = fileTemp.fileTemplateNo\n          } else {\n            itemTemplate['hasFileTemp'] = ''\n          }\n          return itemTemplate\n        })\n      } else {\n        if (dossierTemplates) {\n          dossierTemplates.forEach(itemTemplate => {\n            itemTemplate['hasFileTemp'] = ''\n          })\n        }\n      }\n      return dossierTemplates\n    },\n    showAlpacaJSFORM (item) {\n      var vm = this\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      vm.$store.dispatch('loadFormScript', item).then(resScript => {\n        vm.$store.dispatch('loadFormData', item).then(resData => {\n          window.$('#formAlpaca' + item.partNo + vm.id).empty()\n          var formScript, formData\n          /* eslint-disable */\n          if (resScript) {\n            formScript = eval('(' + resScript + ')')\n          } else {\n            formScript = {}\n          }\n          if (resData) {\n            formData = eval('(' + resData + ')')\n          } else {\n            formData = {}\n          }\n          /* eslint-disable */\n          formScript.data = formData\n          window.$('#formAlpaca' + item.partNo + vm.id).alpaca(formScript)\n        })\n      })\n    },\n    saveAlpacaForm (item, index) {\n      var vm = this\n      var fileFind = vm.dossierFilesItems.find(itemFile => {\n        return itemFile.dossierPartNo === item.partNo && itemFile.eForm\n      })\n      if (fileFind) {\n        fileFind['dossierId'] = vm.thongTinHoSo.dossierId\n        fileFind['id'] = vm.id\n        vm.$store.dispatch('putAlpacaForm', fileFind).then(resData => {\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(resFiles => {\n            vm.dossierFilesItems = resFiles\n          }).catch(reject => {\n          })\n          vm.dossierTemplateItems[index]['passRequired'] = true\n          // toastr.success('Yêu cầu của bạn được thực hiện thành công.')\n        }).catch(reject => {\n          toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n        })\n      } else {\n        item['dossierId'] = vm.thongTinHoSo.dossierId\n        item['id'] = vm.id\n        vm.$store.dispatch('postEform', item).then(resPostEform => {\n          // toastr.success('Yêu cầu của bạn được thực hiện thành công.')\n          vm.dossierTemplateItems[index].daKhai = true\n          vm.dossierTemplateItems[index]['passRequired'] = true\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(resFiles => {\n            vm.dossierFilesItems = resFiles\n          }).catch(reject => {\n            toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n          })\n        }).catch(reject => {\n          toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n        })\n      }\n    },\n    onDeleteAttackFiles (item) {\n      var vm = this\n      console.log('delete')\n      let x = confirm('Bạn có muốn xóa toàn bộ file trong thành phần hồ sơ này?')\n      if (x) {\n        vm.dossierFilesItems.forEach(val => {\n          if (val.dossierPartNo === item.partNo) {\n            val['dossierId'] = vm.thongTinHoSo.dossierId\n            vm.$store.dispatch('deleteAttackFiles', val).then(function (result) {\n              vm.resetCounterTemplate(item)\n              vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId)\n            }).catch(function (xhr) {\n            })\n          }\n        })\n      }\n    },\n    changeApplicantNote () {\n      let vm = this\n      console.log('applicantNoteEdit', vm.applicantNoteDossier)\n      vm.$store.commit('setApplicantNote', vm.applicantNoteDossier)\n    },\n    pickFile (item) {\n      var vm = this\n      vm.stateAddFileOther = false\n      document.getElementById('file' + item.partNo).value = ''\n      document.getElementById('file' + item.partNo).click()\n    },\n    onUploadSingleFile (e, data, index) {\n      var vm = this\n      console.log('vm.dossierTemplateItems[index]', vm.dossierTemplateItems[index])\n      vm.dossierTemplatesItemSelect = data\n      vm.progressUploadPart = data.partNo\n      data['dossierId'] = vm.thongTinHoSo.dossierId\n      data['dossierTemplateNo'] = vm.thongTinHoSo.dossierTemplateNo\n      if (data.partType !== 3) {\n        vm.$store.dispatch('uploadSingleFile', data).then(function (result) {\n          vm.dossierTemplateItems[index]['passRequired'] = true\n          vm.progressUploadPart = ''\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result => {\n            vm.dossierFilesItems = result\n            vm.recountFileTemplates()\n            // var fileViewsTemp = vm.dossierFilesItems.filter(file => {\n            //   return file.dossierPartNo === vm.dossierTemplatesItemSelect.partNo && !file.eForm\n            // })\n            // if (fileViewsTemp) {\n            //   vm.fileViews = fileViewsTemp\n            // }\n          })\n        }).catch(function (xhr) {\n          vm.progressUploadPart = ''\n        })\n      } else {\n        if (window.$('#file' + data.partNo)[0].files.length === 0) {\n          vm.progressUploadPart = ''\n          return\n        }\n        vm.partView = data.partNo\n        vm.stateView = true\n        vm.dialogAddOtherTemp = true\n      }\n    },\n    loadAlpcaForm (data) {\n      var vm = this\n      //\n      vm.currentFormView = 'formAlpaca' + data.partNo + vm.id\n      vm.pstEl = vm.endEl = 0\n      setTimeout(function () {\n        if ($('#formAlpaca' + data.partNo + vm.id).height() > 200) {\n          vm.pstEl = $('#wrapForm' + data.partNo + vm.id).offset().top\n          vm.endEl = $('#formAlpaca' + data.partNo + vm.id).height()\n          $(window).scroll(function () {\n            vm.pstFixed = $(window).scrollTop()\n          })\n        }\n      }, 500)\n      //\n      var fileFind = vm.dossierFilesItems.find(itemFile => {\n        return itemFile.dossierPartNo === data.partNo && itemFile.eForm\n      })\n      if (fileFind) {\n        fileFind['id'] = vm.id\n        vm.$store.dispatch('loadAlpcaForm', fileFind)\n      } else {\n        vm.dossierTemplateItems.forEach(val => {\n          if (val.hasForm && data.partNo === val.partNo) {\n            val['templateFileNo'] = vm.thongTinHoSo.dossierTemplateNo\n            vm.showAlpacaJSFORM(val)\n          }\n        })\n      }\n    },\n    deleteSingleFileEform (item, index) {\n      var vm = this\n      let x = confirm('Bạn có chắc chắn xóa file?')\n      if (x) {\n        vm.dossierFilesItems.forEach(file => {\n          if (file.dossierPartNo === item.partNo && file.eForm) {\n            file['dossierId'] = vm.thongTinHoSo.dossierId\n            vm.$store.dispatch('deleteDossierFile', file).then(resFile => {\n              console.log('success!')\n              vm.dossierTemplateItems[index].daKhai = false\n              vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result => {\n                vm.dossierFilesItems = result\n                vm.recountFileTemplates()\n                if (vm.dossierFilesItems.length !== 0) {\n                  var fileViewsTemp = vm.dossierFilesItems.filter(file => {\n                    return file.dossierPartNo === item.partNo\n                  })\n                  if (fileViewsTemp) {\n                    vm.dossierTemplateItems[index]['passRequired'] = true\n                  } else {\n                    vm.dossierTemplateItems[index]['passRequired'] = false\n                  }\n                } else {\n                  vm.dossierTemplateItems[index]['passRequired'] = false\n                }\n              })\n            })\n          }\n        })\n      }\n    },\n    previewFileEfom (item, index) {\n      var vm = this\n      vm.dossierFilesItems.forEach(file => {\n        if (file.dossierPartNo === item.partNo && file.eForm && !file.removed) {\n          file['dossierId'] = vm.thongTinHoSo.dossierId\n          vm.dialogPDFLoading = true\n          vm.dialogPDF = true\n          if (!vm.onlyView) {\n            file['id'] = vm.id\n            vm.$store.dispatch('putAlpacaForm', file).then(resData => {\n              setTimeout(function () {\n                vm.$store.dispatch('viewFile', file).then(result => {\n                  vm.dialogPDFLoading = false\n                  document.getElementById('dialogPDFPreview' + vm.id).src = result\n                })\n              }, 1000)\n            }).catch(reject => {\n              toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n            })\n          } else {\n            vm.$store.dispatch('viewFile', file).then(result => {\n              vm.dialogPDFLoading = false\n              document.getElementById('dialogPDFPreview' + vm.id).src = result\n            })\n          }\n        }\n      })\n    },\n    deleteSingleFile (item, index) {\n      var vm = this\n      let x = confirm('Bạn có chắc chắn xóa file đính kèm ?')\n      if (x) {\n        item['dossierId'] = vm.thongTinHoSo.dossierId\n        vm.$store.dispatch('deleteDossierFile', item).then(resFile => {\n          // toastr.success('Yêu cầu của bạn được thực hiện thành công.')\n          vm.fileViews.splice(index, 1)\n          vm.stateView = true\n          vm.partView = item.dossierPartNo\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result => {\n            vm.dossierFilesItems = result\n            // vm.recountFileTemplates()\n            vm.setDaKhai(item)\n          })\n        }).catch(reject => {\n          toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n        })\n      }\n    },\n    viewFile (data) {\n      var vm = this\n      vm.dossierFilesItems.forEach(val => {\n        val['dossierId'] = vm.thongTinHoSo.dossierId\n        if (val.dossierPartNo === data.partNo) {\n          this.$store.dispatch('viewFile', val)\n        }\n      })\n    },\n    setDaKhai (itemFile) {\n      var vm = this\n      let indexFile = vm.dossierFilesItems.findIndex(file => {\n        return file.dossierPartNo === itemFile.dossierPartNo\n      })\n      if (indexFile === -1) {\n        for (var i = 0; i < vm.dossierTemplateItems.length; i++) {\n          if (vm.dossierTemplateItems[i].partNo === itemFile.dossierPartNo) {\n            vm.dossierTemplateItems[i]['passRequired'] = false\n            break\n          }\n        }\n      } else {\n        for (var i = 0; i < vm.dossierTemplateItems.length; i++) {\n          if (vm.dossierTemplateItems[i].partNo === itemFile.dossierPartNo) {\n            vm.dossierTemplateItems[i]['passRequired'] = true\n            break\n          }\n        }\n      }\n    },\n    checkPartType3 () {\n      var vm = this\n      if (vm.dossierTemplateItems.length !== 0) {\n        for (var i = 0; i < vm.dossierTemplateItems.length; i++) {\n          if (vm.dossierTemplateItems[i].partType === 3) {\n            return true\n          }\n        }\n      }\n      return false\n    },\n    viewFile2 (data) {\n      var vm = this\n      if (data.fileSize === 0) {\n        return\n      }\n      if (data['hasForm']) {\n        vm.pdfEform = true\n      } else {\n        vm.pdfEform = false\n      }\n      if (data.fileType === 'doc' || data.fileType === 'docx' || data.fileType === 'xlsx' || data.fileType === 'xls' || data.fileType === 'zip' || data.fileType === 'rar' || data.fileType === 'txt' || data.fileType === 'mp3' || data.fileType === 'mp4') {\n        var url = vm.initDataResource.dossierApi + '/' + vm.thongTinHoSo.dossierId + '/files/' + data.referenceUid\n        window.open(url)\n      } else {\n        data['dossierId'] = vm.thongTinHoSo.dossierId\n        if (data.referenceUid) {\n          vm.dialogPDFLoading = true\n          vm.dialogPDF = true\n          vm.$store.dispatch('viewFile', data).then(result => {\n            vm.dialogPDFLoading = false\n            document.getElementById('dialogPDFPreview' + vm.id).src = result\n          })\n        } else {\n          toastr.error('File dữ liệu không tồn tại')\n        }\n      }\n    },\n    viewGiayToDaNop (data) {\n      var vm = this\n      if (data.fileSize === 0) {\n        return\n      }\n      if (data['hasForm']) {\n        vm.pdfEform = true\n      } else {\n        vm.pdfEform = false\n      }\n      if (data.fileType === 'doc' || data.fileType === 'docx' || data.fileType === 'xlsx' || data.fileType === 'xls' || data.fileType === 'zip' || data.fileType === 'rar' || data.fileType === 'txt' || data.fileType === 'mp3' || data.fileType === 'mp4') {\n        var url = vm.initDataResource.dossierApi + '/' + data.dossierId + '/files/' + data.referenceUid\n        window.open(url)\n      } else {\n        if (data.referenceUid) {\n          vm.dialogPDFLoading = true\n          vm.dialogPDF = true\n          vm.$store.dispatch('viewFile', data).then(result => {\n            vm.dialogPDFLoading = false\n            document.getElementById('dialogPDFPreview' + vm.id).src = result\n          })\n        } else {\n          toastr.error('File dữ liệu không tồn tại')\n        }\n      }\n    },\n    viewFileWithPartNo (item) {\n      var vm = this\n      if (vm.dossierFilesItems) {\n        var fileViewsTemp = vm.dossierFilesItems.filter(file => {\n          return file.dossierPartNo === item.partNo && !file.eForm\n        })\n        if (fileViewsTemp) {\n          vm.fileViews = fileViewsTemp\n          // vm.sheet = true\n          if (vm.partView !== item.partNo) {\n            vm.stateView = true\n            vm.partView = item.partNo\n          } else {\n            vm.stateView = !vm.stateView\n            vm.partView = item.partNo\n          }\n        } else {\n          return\n        }\n      }\n      return\n    },\n    saveMark () {\n      var vm = this\n      if (vm.dossierTemplateItems) {\n        vm.dossierTemplateItems.forEach(function (value, index) {\n          if (value.partType === 1) {\n            value['dossierId'] = vm.thongTinHoSo.dossierId\n            vm.$store.dispatch('postDossierMark', value)\n          }\n        })\n      }\n    },\n    changeFileMark (event, index) {\n      var vm = this\n      let item = vm.dossierTemplateItems[index]\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      item['fileMark'] = event\n      item['checkInput'] = vm.checkInput\n      vm.$store.dispatch('postDossierMark', item)\n      vm.dossierTemplateItems[index].fileMark = event\n    },\n    changeFileCheck (event, index) {\n      var vm = this\n      // console.log('event=====', event)\n      let item = vm.dossierTemplateItems[index]\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      item['fileCheck'] = event\n      item['checkInput'] = vm.checkInput\n      if (event === 2) {\n        item['stateEditFileCheck'] = true\n        return\n      } else {\n        item['fileComment'] = ''\n      }\n      // console.log('item-check-------', item)\n      vm.$store.dispatch('postDossierMark', item)\n      vm.dossierTemplateItems[index].fileCheck = event\n    },\n    changeFileComment (item, index) {\n      var vm = this\n      // console.log('item-------', item)\n      if (item.fileComment === null || item.fileComment === undefined || item.fileComment === '') {\n        return\n      }\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      item['fileComment'] = item.fileComment\n      item['checkInput'] = vm.checkInput\n      item['stateEditFileCheck'] = !item['stateEditFileCheck']\n      // console.log('item-comment-------', item)\n      vm.$store.dispatch('postDossierMark', item)\n      vm.dossierTemplateItems[index].fileComment = item.fileComment\n    },\n    checkStyle (item) {\n      var vm = this\n      if (vm.checkInput === 1) {\n        return 'calc(100% - 140px)'\n      } else {\n        let divPx = 0\n        if (vm.originality !== 1 && item.partType === 1 && !vm.thongTinHoSo.online && vm.checkInput !== 1) {\n          divPx += 140\n        }\n        if (item.fileCheck > 0 && !vm.thongTinHoSo.online) {\n          divPx += 20\n        }\n        if (item.fileCheck > 0 && vm.thongTinHoSo.online) {\n          divPx += 40\n        }\n        if (!vm.onlyView) {\n          divPx += 90\n        }\n        return 'calc(100% - ' + divPx + 'px)'\n      }\n    },\n    checkVisibleTemp (item, index) {\n      var vm = this\n      if (!vm.onlyView) {\n        return true\n      }\n      if (item.partType === 3) {\n        if (vm.dossierFilesItems.length > 0) {\n          let indexFile = vm.dossierFilesItems.findIndex(file => {\n            return file.dossierPartNo === item.partNo\n          })\n          if (indexFile === -1) {\n            return false\n          } else {\n            return true\n          }\n        } else {\n          return false\n        }\n      } else {\n        return true\n      }\n    },\n    changeStateViewResult () {\n      var vm = this\n      if (vm.dossierFilesItems.length > 0) {\n        let index = vm.dossierFilesItems.findIndex(file => {\n          return file.dossierPartType === 2\n        })\n        if (index !== -1) {\n          vm.$emit('tp:change-state-view-result', true)\n        } else {\n          vm.$emit('tp:change-state-view-result', false)\n        }\n      } else {\n        if (vm.partTypes.includes(2)) {\n          vm.$emit('tp:change-state-view-result', false)\n        }\n      }\n    },\n    changeOtherDossierTemp (data) {\n      var vm = this\n      if (vm.originality === 3 && vm.stateAddFileOther) {\n        vm.loadingAddOther = true\n        vm.$store.dispatch('uploadSingleOtherFile', {\n          dossierId: vm.thongTinHoSo.dossierId,\n          displayName: data,\n          partNo: vm.dossierTemplatesItemSelect.partNo\n        }).then(resFile => {\n          vm.loadingAddOther = false\n          vm.dialogAddOtherTemp = false\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result2 => {\n            vm.dossierFilesItems = result2\n          })\n        }).catch(reject => {\n          vm.loadingAddOther = false\n        })\n      } else {\n        // console.log('dossierTemplatesItemSelect ', vm.dossierTemplatesItemSelect)\n        let params = vm.dossierTemplatesItemSelect\n        params['dossierId'] = vm.thongTinHoSo.dossierId\n        params['displayName'] = data\n        params['dossierTemplateNo'] = vm.thongTinHoSo.dossierTemplateNo\n        vm.$store.dispatch('uploadSingleFile', params).then(function (result1) {\n          vm.progressUploadPart = ''\n          vm.dialogAddOtherTemp = false\n          // console.log('success!!!!!!!!!!!!!!')\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result2 => {\n            vm.dossierFilesItems = result2\n            vm.recountFileTemplates()\n            if (vm.stateView && vm.dossierFilesItems) {\n              var fileViewsTemp = vm.dossierFilesItems.filter(file => {\n                return file.dossierPartNo === vm.dossierTemplatesItemSelect.partNo && !file.eForm\n              })\n              if (fileViewsTemp) {\n                vm.fileViews = fileViewsTemp\n              }\n            }\n          })\n        }).catch(function (xhr) {\n          vm.progressUploadPart = ''\n        })\n      }\n    },\n    downloadFileTemplate (item, index) {\n      var vm = this\n      if (vm.fileTemplateItems.length > 0) {\n        let fileFind = vm.fileTemplateItems.find(file => {\n          return item.fileTemplateNo === file.fileTemplateNo\n        })\n        if (fileFind) {\n          let url = vm.initDataResource.serviceInfoApi + '/' + vm.serviceInfoId + '/filetemplates/' + fileFind.fileTemplateNo\n          window.open(url)\n        } else {\n          console.log('ko thay file')\n        }\n      }\n    },\n    addOtherTemplate () {\n      var vm = this\n      if (vm.$refs.form.validate()) {\n        // console.log('add')\n        vm.changeOtherDossierTemp(vm.otherDossierTemplate)\n      }\n    },\n    editDisplayName (item, index) {\n      var vm = this\n      if (vm.dossierFileIdView !== item.dossierFileId) {\n        vm.dossierFileIdView = item.dossierFileId\n        vm.stateEdit = true\n      } else {\n        vm.dossierFileIdView = item.dossierFileId\n        vm.stateEdit = !vm.stateEdit\n      }\n    },\n    cancelDialog () {\n      var vm = this\n      vm.dialogAddOtherTemp = false\n      vm.progressUploadPart = ''\n    },\n    addFileOther (item) {\n      var vm = this\n      vm.dialogAddOtherTemp = true\n      vm.stateAddFileOther = true\n      vm.dossierTemplatesItemSelect = item\n    },\n    validDossierTemplate () {\n      var vm = this\n      if (vm.dossierTemplateItems.length > 0) {\n        for (var i = 0; i < vm.dossierTemplateItems.length; i++) {\n          if (vm.dossierTemplateItems[i]['required'] && !vm.dossierTemplateItems[i]['passRequired'] && vm.partTypes.includes(vm.dossierTemplateItems[i].partType)) {\n            let message = 'Chú ý :' + vm.dossierTemplateItems[i].partName + ' là thành phần bắt buộc!'\n            toastr.error(message)\n            return false\n          }\n        }\n        return true\n      } else {\n        return true\n      }\n    },\n    changeDisplayName (item, index) {\n      var vm = this\n      let params = {\n        dossierId: vm.thongTinHoSo.dossierId,\n        value: value\n      }\n      vm.$store.dispatch('changeDisplayNameFile', params).then(result => {\n        vm.fileViews[index].displayName = result.displayName\n        vm.stateEdit = false\n      }).catch(reject => {\n        console.log('error')\n      })\n    },\n    getDossierFileApplicants (applicantIdNo, fileTemplateNo) {\n      var vm = this\n      let filter = {\n        dossierId: vm.thongTinHoSo.dossierId,\n        applicantIdNo: applicantIdNo,\n        fileTemplateNo: fileTemplateNo\n      }\n      vm.$store.dispatch('getDossierFilesApplicants', filter).then(result => {\n        vm.dossierFilesApplicant = result\n      }).catch(reject => {\n        console.log('error')\n      })\n    },\n    showFilesApplicant (partNo) {\n      let vm = this\n      console.log($('#fileApplicant-' + partNo).is(':visible'))\n      if ($('#fileApplicant-' + partNo).is(':visible')) {\n        $('#fileApplicant-' + partNo).hide()\n      } else {\n        $('#fileApplicant-' + partNo).show()\n      }\n    },\n    checkKQhasFile (item) {\n      var vm = this\n      if (vm.partTypes.includes(2)) {\n        var hasFile = vm.dossierFilesItems.find(file => {\n          return item.partNo === file.dossierPartNo\n        })\n        if (hasFile) {\n          return true\n        } else {\n          return false\n        }\n      } else {\n        return true\n      }\n    },\n    partNoApplicantHasFile (partNo) {\n      let vm = this\n      let hasFile = vm.dossierFilesApplicant.find(file => {\n        return (file.dossierTemplateNo === vm.thongTinHoSo['dossierTemplateNo'] && file.dossierPartNo === partNo)\n      })\n      if (hasFile) {\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n}\n",{"version":3,"sources":["TiepNhanHoSo_ThanhPhanHoSo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"TiepNhanHoSo_ThanhPhanHoSo.vue","sourceRoot":"src/components/TiepNhan","sourcesContent":["<template>\n  <div>\n    <v-card>\n      <div class=\"form_alpaca\" style=\"position: relative;\" v-for=\"(item, index) in dossierTemplateItems\" v-if=\"partTypes.includes(item.partType) && checkVisibleTemp(item, index)\" v-bind:key=\"item.partNo\">\n        <v-expansion-panel :value=\"[currentFormView === 'formAlpaca' + item.partNo + id ? true : false]\" class=\"expaned__list__data\">\n          <v-expansion-panel-content hide-actions>\n            <div slot=\"header\" @click=\"stateView = false\" style=\"background-color:#fff\">\n              <div style=\"align-items: center;background: #fff; padding-left: 25px;\" :style=\"{width: checkStyle(item)}\">\n                <div class=\"mr-2\" @click=\"onlyView && item.hasForm ? viewFile2(item) : loadAlpcaForm(item)\" style=\"min-width: 18px; display: flex;\">\n                  <div class=\"header__tphs\"><span class=\"text-bold\">{{index + 1}}.</span> &nbsp;</div>\n                  <div class=\"header__tphs\">\n                    <v-tooltip top style=\"max-width: 100% !important;\">\n                      <span slot=\"activator\">\n                        {{item.partName}}&nbsp; \n                        <span v-if=\"item.required\" style=\"color: red\"> (*) </span>\n                        &nbsp;&nbsp;\n                      </span>\n                      <span v-if=\"item.partTip['tip']\">{{item.partTip['tip']}}</span>\n                    </v-tooltip>\n                    <v-tooltip top v-if=\"item.hasForm && item.daKhai && ((originality === 1 && item.partType !==2) || originality !== 1)\">\n                      <i slot=\"activator\" style=\"color: #0d71bb; font-size: 13px;\" class=\"fa fa-file-text-o\" aria-hidden=\"true\"></i>\n                      <span>Biểu mẫu trực tuyến (Đã khai)</span>\n                    </v-tooltip>\n                    <v-tooltip top v-if=\"item.hasForm && !item.daKhai && ((originality === 1 && item.partType !==2) || originality !== 1)\">\n                      <i slot=\"activator\" style=\"color: #0d71bb; font-size: 13px;\" class=\"fa fa-file-o\"></i>\n                      <span>Biểu mẫu trực tuyến (Chưa khai)</span>\n                    </v-tooltip>\n                    &nbsp;&nbsp;\n                    <v-tooltip top v-if=\"!item.hasForm && item.hasFileTemp\">\n                      <v-icon v-on:click.stop=\"downloadFileTemplate(item, index)\" slot=\"activator\" style=\"color: #0d71bb;\" size=\"16\" color=\"primary\">save_alt</v-icon>\n                      <span>Biểu mẫu điền thủ công</span>\n                    </v-tooltip>\n                  </div>\n                </div>\n                <!-- <i v-if=\"item.hasForm\" style=\"font-size: 10px; color: #0d71bb; margin-left: 10px;\">(Form trực tuyến)</i> \n                <span v-if=\"item.hasForm\">&nbsp;-&nbsp;</span> \n                <i v-if=\"item.hasForm\" style=\"font-size: 10px;color: #0d71bb;\">({{item.daKhai ? 'Đã khai' : 'Chưa khai '}})</i> -->\n                <div style=\"display: flex\">\n                  <v-text-field\n                  v-model=\"item.fileComment\"\n                  placeholder=\"Nhập lý do\"\n                  v-if=\"checkInput === 1 && item.fileCheck === 2 && item.stateEditFileCheck\"\n                  :rules=\"[v => !!v || 'Bạn phải nhập lý do trước khi gửi']\"\n                  required\n                  @keyup.enter=\"changeFileComment(item, index)\"\n                  ></v-text-field>\n                  <v-tooltip top v-if=\"checkInput === 1 && item.fileCheck === 2 && item.stateEditFileCheck\">\n                    <v-btn slot=\"activator\" v-on:click.stop=\"changeFileComment(item, index)\" icon class=\"mx-0 my-0\">\n                      <v-icon size=\"16\" class=\"mx-0\" color=\"primary\">send</v-icon>\n                    </v-btn>\n                    <span>Gửi</span>\n                  </v-tooltip>\n                </div>\n                <i v-if=\"item.fileComment && !item.stateEditFileCheck\" style=\"font-size: 12px; color: #0d71bb; margin-left: 10px;\">{{item.fileComment}}</i>\n                <v-tooltip top v-if=\"item.fileComment && !item.stateEditFileCheck && checkInput === 1\">\n                  <v-icon slot=\"activator\" v-on:click.stop=\"item.stateEditFileCheck = !item.stateEditFileCheck\" style=\"font-size: 13px; color: #0d71bb; margin-left: 10px; cursor: pointer;\">edit</v-icon>\n                  <span>Chỉnh sửa ý kiến</span>\n                </v-tooltip>\n                <div v-for=\"(itemFileView, index) in dossierFilesItems\" :key=\"index\" v-if=\"item.partNo === itemFileView.dossierPartNo && !itemFileView.eForm\">\n                  <div :style=\"{width: 'calc(100% - 370px)', 'display': 'flex', 'align-items': 'center', 'background': '#fff', 'padding-left': '15px', 'font-size': '12px', 'margin-bottom': onlyView ? '5px' : '0px'}\">\n                    <span v-on:click.stop=\"viewFile2(itemFileView)\" class=\"ml-3\" style=\"cursor: pointer;\">\n                      <v-icon v-if=\"itemFileView.fileSize !== 0\">attach_file</v-icon>\n                      {{itemFileView.displayName}} - \n                      <i>{{itemFileView.modifiedDate}}</i>\n                    </span>\n                    <v-btn icon ripple v-on:click.stop=\"deleteSingleFile(itemFileView, index)\" class=\"mx-0 my-0\" v-if=\"!onlyView && checkInput !== 1\">\n                      <v-icon style=\"color: red\">delete_outline</v-icon>\n                    </v-btn>\n                  </div>\n                </div>\n                <div class=\"mr-3 my-1 py-2\" :id=\"'fileApplicant-'+item.partNo\" style=\"display:none;border:1px solid #f3ae75\">\n                  <div v-for=\"(itemFileView, index) in dossierFilesApplicant\" :key=\"index\" v-if=\"itemFileView.dossierTemplateNo === thongTinHoSo['dossierTemplateNo'] && item.partNo === itemFileView.dossierPartNo\" >\n                    <div v-if=\"itemFileView.eForm\" :style=\"{width: 'calc(100% - 0px)', 'display': 'flex', 'align-items': 'center', 'background': '#fff', 'padding-left': '15px', 'font-size': '12px', 'margin-bottom': onlyView ? '5px' : '0px'}\">\n                      <v-tooltip top style=\"max-width:100%\">\n                        <span slot=\"activator\" v-on:click.stop=\"viewGiayToDaNop(itemFileView)\" class=\"ml-3\" style=\"cursor: pointer;\">\n                          <i style=\"color: #0d71bb; font-size: 13px;\" class=\"ml-1 fa fa-file-o\"></i> &nbsp;\n                          {{itemFileView.referenceUid}}.{{itemFileView.fileType}} - \n                          <i>{{itemFileView.modifiedDate}}</i>\n                        </span>\n                        <span>Bản khai trực tuyến</span>\n                      </v-tooltip>\n                    </div>\n                    <div v-else :style=\"{width: 'calc(100% - 0px)', 'display': 'flex', 'align-items': 'center', 'background': '#fff', 'padding-left': '15px', 'font-size': '12px', 'margin-bottom': onlyView ? '5px' : '0px'}\">\n                      <v-tooltip top style=\"max-width:100%\">\n                        <span slot=\"activator\" v-on:click.stop=\"viewGiayToDaNop(itemFileView)\" class=\"ml-3\" style=\"cursor: pointer;\">\n                          <v-icon style=\"color: #0d71bb\" v-if=\"itemFileView.fileSize !== 0\">attach_file</v-icon>\n                          {{itemFileView.displayName}} - \n                          <i>{{itemFileView.modifiedDate}}</i>\n                        </span>\n                        <span>Đính kèm</span>\n                      </v-tooltip>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <v-card v-if=\"item.hasForm && !onlyView\">\n              <v-card-text style=\"background-color: rgba(244, 247, 213, 0.19)\">\n                <v-layout wrap>\n                  <v-flex xs12 class=\"text-xs-right\" v-if=\"!stateView\">\n                    <div :id=\"'wrapForm' + item.partNo + id\" :style=\"pstFixed > pstEl && pstFixed < endEl + pstEl ? 'position:fixed;top:5px;z-index:101' : ''\">\n                      <v-btn color=\"primary\" @click=\"saveAlpacaForm(item, index)\" \n                      v-if=\"item.hasForm && !onlyView && checkInput !== 1\">Lưu lại</v-btn>\n                      <v-btn color=\"primary\" @click=\"deleteSingleFileEform(item, index)\" v-if=\"item.daKhai && item.hasForm && !onlyView && checkInput !== 1\">Xóa</v-btn>\n                      <v-btn color=\"primary\" @click=\"previewFileEfom(item, index)\" v-if=\"item.daKhai && item.hasForm\">In</v-btn>\n                    </div>\n                    <div :id=\"'formAlpaca' + item.partNo + id\" :class='{\"no_acction__event\": onlyView}' v-if=\"!onlyView || item.daKhai\">\n                    </div>\n                  </v-flex>\n                </v-layout>\n              </v-card-text>\n            </v-card>\n          </v-expansion-panel-content>\n        </v-expansion-panel>\n        <div class=\"absolute__btn group__thanh_phan mr-1\">\n          <content-placeholders class=\"mt-1\" v-if=\"loading\">\n            <content-placeholders-text :lines=\"1\" />\n          </content-placeholders>\n          <v-layout row wrap v-else>\n            <v-flex style=\"width: 110px;\" class=\"layout wrap\" v-if=\"originality !== 1 && item.partType === 1 && !thongTinHoSo.online && checkInput !== 1\">\n              <!-- <v-radio-group v-model=\"dossierTemplateItems[index].fileMark\" row>\n                <v-radio :value=\"0\"></v-radio>\n                <v-radio :value=\"1\"></v-radio>\n                <v-radio :value=\"2\"></v-radio>\n                <v-radio :value=\"3\"></v-radio>\n              </v-radio-group> -->\n              <v-select\n                :items=\"fileMarkItems\"\n                v-model=\"dossierTemplateItems[index].fileMark\"\n                :disabled=\"onlyView\"\n                @change=\"changeFileMark($event, index)\"\n              ></v-select>\n            </v-flex>\n            <v-flex style=\"width: 120px;\" class=\"layout wrap\" v-if=\"checkInput === 1\">\n              <v-select\n                :items=\"fileCheckItems\"\n                item-text=\"text\"\n                item-value=\"value\"\n                v-model=\"dossierTemplateItems[index].fileCheck\"\n                @change=\"changeFileCheck($event, index)\"\n              ></v-select>\n            </v-flex>\n            <v-flex :style=\"{width: '20px', 'align-items': 'center', 'margin-left': '10px', 'margin-top': thongTinHoSo.online ? '10px' : '0px'}\" class=\"layout wrap\" v-else-if=\"item.fileCheck > 0\">\n              <v-tooltip top v-if=\"item.fileCheck === 1\">\n                <v-icon slot=\"activator\" size=\"16\" class=\"mx-0\" color=\"primary\">done</v-icon>\n                <span>Đạt</span>\n              </v-tooltip>\n              <v-tooltip top v-else-if=\"item.fileCheck === 2\">\n                <v-icon slot=\"activator\" size=\"16\" class=\"mx-0\" color=\"primary\">close</v-icon>\n                <span>Không đạt</span>\n              </v-tooltip>\n            </v-flex>\n            <v-flex :style=\"{width: !onlyView ? '90px' : 'auto'}\" :class=\"{'text-xs-right' : onlyView}\" v-if=\"checkInput !== 1\">\n              <input\n              type=\"file\"\n              style=\"display: none\"\n              :id=\"'file' + item.partNo\"\n              @change=\"onUploadSingleFile($event, item, index)\"\n              >\n              <v-tooltip top v-if=\"item.partType === 3 && originality === 3 && !onlyView\">\n                <v-btn slot=\"activator\" @click=\"addFileOther(item)\" icon class=\"mx-0 my-0\">\n                  <v-icon size=\"16\" class=\"mx-0\" color=\"primary\">add</v-icon>\n                </v-btn>\n                <span>Thêm giấy tờ khác</span>\n              </v-tooltip>\n              <v-progress-circular\n              :width=\"2\"\n              :size=\"25\"\n              color=\"green\"\n              indeterminate\n              v-if=\"progressUploadPart === item.partNo\"\n              ></v-progress-circular>\n              <v-tooltip left v-else-if=\"progressUploadPart !== item.partNo && !onlyView\">\n                <v-btn slot=\"activator\" icon class=\"mx-0 my-0\" @click=\"pickFile(item)\">\n                  <v-badge>\n                    <v-icon size=\"16\" color=\"primary\">cloud_upload</v-icon>\n                  </v-badge>\n                </v-btn>\n                <span v-if=\"!item.partTip['extensions'] && !item.partTip['maxSize']\">Tải file lên</span>\n                <span v-else>Chấp nhận tải lên các định dạng: {{item.partTip['extensions']}}. Tối đa {{item.partTip['maxSize']}} MB </span>\n              </v-tooltip>\n              <v-tooltip top v-if=\"partNoApplicantHasFile(item.partNo) && !onlyView\">\n                <v-btn slot=\"activator\" icon class=\"mx-0 my-0\" @click=\"showFilesApplicant(item.partNo)\">\n                  <v-badge>\n                    <v-icon size=\"16\" color=\"orange darken-3\">warning</v-icon>\n                  </v-badge>\n                </v-btn>\n                <span>Giấy tờ đã nộp</span>\n              </v-tooltip>\n              <!-- <v-tooltip top>\n                <v-btn slot=\"activator\" class=\"mx-0\" fab dark small color=\"primary\" @click=\"viewFileWithPartNo(item)\" style=\"height:20px;width:20px\">\n                  {{item.count}}\n                </v-btn>\n                <span>Xem</span>\n              </v-tooltip> -->\n            </v-flex>\n          </v-layout>\n        </div>\n        <!-- <div v-if=\"item.partNo === partView && stateView\">\n          <v-layout row wrap>\n            <v-flex xs12 sm12>\n              <div v-for=\"(itemFileView, index) in fileViews\" :key=\"index\">\n                <div style=\"width: calc(100% - 370px);display: flex;align-items: center;background: #fff;padding-left: 15px;\">\n                  <span @click=\"viewFile2(itemFileView)\" class=\"ml-3\" style=\"cursor: pointer;\" v-if=\"!stateEdit\">\n                    <v-icon v-if=\"itemFileView.eForm\">border_color</v-icon>\n                    <v-icon v-else>attach_file</v-icon>\n                    {{itemFileView.displayName}}\n                  </span>\n                  <v-text-field\n                    v-model=\"itemFileView.displayName\"\n                    v-if=\"itemFileView.dossierFileId === dossierFileIdView && stateEdit\"\n                    @change=\"changeDisplayName(itemFileView, index)\"\n                  ></v-text-field>\n                  <v-btn icon ripple @click=\"deleteSingleFile(itemFileView, index)\" class=\"mx-0 my-0\" v-if=\"!onlyView\">\n                    <v-icon style=\"color: red\">delete_outline</v-icon>\n                  </v-btn>\n                </div>\n              </div>\n            </v-flex>\n          </v-layout>\n        </div> -->\n      </div>\n      <div v-if=\"!partTypes.includes(2)\">\n        <v-layout class=\"mx-4\" wrap>\n          <v-flex style=\"width:60px\" class=\"my-0 py-2 text-bold\" v-if=\"!onlyView || (onlyView && applicantNoteDossier)\">Ghi chú:</v-flex>\n          <v-flex style=\"width:calc(100% - 80px)\">\n            <div v-if=\"!onlyView\" class=\"pl-2\">\n              <v-text-field class=\"py-0\"\n              v-model=\"applicantNoteDossier\"\n              multi-line\n              rows=\"3\"\n              @input=\"changeApplicantNote\"\n              ></v-text-field>\n            </div>\n            <p class=\"my-0 py-2\" v-if=\"onlyView && applicantNoteDossier\">\n              {{applicantNoteDossier}} \n            </p>\n          </v-flex>\n        </v-layout>\n      </div>\n      <v-dialog v-model=\"dialogAddOtherTemp\" max-width=\"400\" transition=\"fade-transition\" persistent>\n        <v-card>\n          <v-form ref=\"form\" v-model=\"valid\" lazy-validation>\n            <v-card-title class=\"headline\">Tên giấy tờ</v-card-title>\n            <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"cancelDialog\">\n              <v-icon>clear</v-icon>\n            </v-btn>\n            <v-progress-linear v-if=\"loadingAddOther\" class=\"my-0\" :indeterminate=\"true\"></v-progress-linear>\n            <v-card-text class=\"pb-0 pt-4\">\n              <v-layout wrap>\n                <v-flex xs12 class=\"px-2 pb-3 fix__label\">\n                  <v-text-field\n                  label=\"Tên giấy tờ:\"\n                  v-model=\"otherDossierTemplate\"\n                  :rules=\"[v => !!v || 'Bạn phải điền tên giấy tờ.']\"\n                  required\n                  ></v-text-field>\n                </v-flex>\n              </v-layout>\n            </v-card-text>\n            <v-card-actions>\n              <v-spacer></v-spacer>\n              <v-btn color=\"red darken-3\" flat=\"flat\" @click.native=\"cancelDialog\">\n                Quay lại\n              </v-btn>\n              <v-btn color=\"primary\" flat=\"flat\" @click.native=\"addOtherTemplate\" :loading=\"loadingAddOther\">\n                Đồng ý\n                <span slot=\"loader\">Loading...</span>\n              </v-btn>\n            </v-card-actions>\n          </v-form>\n        </v-card>\n      </v-dialog>\n    </v-card>\n    <!-- <div class=\"absolute-lable\" style=\"font-size: 12px\" v-if=\"originality !== 1 && !onlyView\">\n      <span>Không chọn</span>\n      <span>Bản chính</span>\n      <span>Bản chụp</span>\n      <span>Công chứng</span>\n    </div> -->\n    <v-dialog v-model=\"dialogPDF\" max-width=\"900\" transition=\"fade-transition\" style=\"overflow: hidden;\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          <span v-if=\"pdfEform\">Bản khai trực tuyến</span>\n          <span v-else>File đính kèm</span>\n        </v-card-title>\n        <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"dialogPDF = false\">\n          <v-icon>clear</v-icon>\n        </v-btn>\n        <div v-if=\"dialogPDFLoading\" style=\"\n            min-height: 600px;\n            text-align: center;\n            margin: auto;\n            padding: 25%;\n        \">\n          <v-progress-circular\n            :size=\"100\"\n            :width=\"1\"\n            color=\"primary\"\n            indeterminate\n          ></v-progress-circular>\n        </div>\n        <iframe v-show=\"!dialogPDFLoading\" :id=\"'dialogPDFPreview' + id\" src=\"\" type=\"application/pdf\" width=\"100%\" height=\"100%\" style=\"overflow: auto;min-height: 600px;\" frameborder=\"0\">\n        </iframe>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport $ from 'jquery'\nimport toastr from 'toastr'\ntoastr.options = {\n  'closeButton': true,\n  'timeOut': '20000'\n}\nexport default {\n  props: {\n    onlyView: {\n      type: Boolean,\n      default: () => false\n    },\n    id: {\n      type: String,\n      default: () => 'nm'\n    },\n    partTypes: {\n      type: Array,\n      default: () => [1, 3]\n    },\n    checkInput: {\n      type: Number,\n      default: () => 0\n    }\n  },\n  data: () => ({\n    dossierTemplateItems: [],\n    dossierMarksItems: [],\n    dossierFilesItems: [],\n    thongTinHoSo: {},\n    valid: true,\n    stateView: false,\n    dialogAddOtherTemp: false,\n    loadingAddOther: false,\n    otherDossierTemplate: '',\n    sheet: false,\n    partView: '',\n    dossierFileIdView: '',\n    stateEdit: false,\n    progressUploadPart: '',\n    dialogPDF: false,\n    dialogPDFLoading: true,\n    stateAddFileOther: false,\n    dossierTemplatesItemSelect: {},\n    fileViews: [],\n    pdfEform: false,\n    sampleCount: 0,\n    serviceInfoId: 0,\n    fileMarkItems: [{\n      text: 'Không có',\n      value: 0\n    }, {\n      text: 'Bản chụp',\n      value: 1\n    }, {\n      text: 'Bản sao',\n      value: 2\n    }, {\n      text: 'Bản gốc',\n      value: 3\n    }],\n    fileCheckItems: [{\n      text: 'Chưa kiểm tra',\n      value: 0\n    }, {\n      text: 'Đạt',\n      value: 1\n    }, {\n      text: 'Không đạt',\n      value: 2\n    }],\n    fileTemplateItems: [],\n    fileTemplateNoString: '',\n    dossierFilesApplicant: [],\n    stateViewResult: true,\n    currentFormView: '',\n    pstFixed: 0,\n    pstEl: 0,\n    endEl: 0,\n    applicantNoteDossier: ''\n  }),\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    },\n    originality () {\n      var vm = this\n      return vm.getOriginality()\n    },\n    initDataResource () {\n      return this.$store.getters.loadingInitData\n    },\n    dossierTemplateItemsFilter () {\n      let vm = this\n      let dossierTemplate = vm.dossierTemplateItems\n      if (dossierTemplate.length > 0) {\n        let filter = dossierTemplate.filter(function (item) {\n          return vm.partTypes.includes(item.partType) && vm.checkVisibleTemp(item, 0)\n        })\n        return filter\n      }\n    },\n    applicantBussinessExit () {\n      return this.$store.getters.getApplicantBussinessExit\n    },\n    applicantId () {\n      return this.$store.getters.getApplicantIdNo\n    },\n    applicantNote () {\n      return this.$store.getters.getApplicantNote\n    }\n  },\n  mounted () {\n    var vm = this\n    vm.page = 1\n    vm.$nextTick(function () {\n    })\n  },\n  watch: {\n    applicantBussinessExit (val) {\n      let vm = this\n      if (val && vm.fileTemplateNoString) {\n        vm.getDossierFileApplicants(val, vm.fileTemplateNoString)\n      }\n    },\n    applicantId (val) {\n      let vm = this\n      if (val && vm.fileTemplateNoString) {\n        vm.getDossierFileApplicants(val, vm.fileTemplateNoString)\n      }\n    }\n  },\n  methods: {\n    resetCounterTemplate ({commit, state}, data) {\n      var vm = this\n      vm.dossierTemplateItems.forEach(val => {\n        if (val.partNo === data.partNo) {\n          if (val.hasForm) {\n            val.count = 1\n          } else {\n            val.count = 0\n          }\n        }\n      })\n    },\n    recountFileTemplates () {\n      var vm = this\n      vm.dossierTemplateItems.forEach(itemTemplate => {\n        itemTemplate.count = 0\n        vm.dossierFilesItems.forEach(itemFile => {\n          if (itemTemplate.partNo === itemFile.dossierPartNo && !itemFile.eForm) {\n            itemTemplate.count ++\n          }\n        })\n      })\n    },\n    initData (data) {\n      var vm = this\n      vm.thongTinHoSo = data\n      vm.applicantNoteDossier = data['applicantNote']\n      var arrTemp = []\n      if (data['sampleCount'] !== null && data['sampleCount'] !== undefined && data['sampleCount'] !== 'undefined') {\n        vm.sampleCount = data['sampleCount']\n      }\n      arrTemp.push(vm.$store.dispatch('loadDossierTemplates', data))\n      arrTemp.push(vm.$store.dispatch('loadDossierMark', data))\n      arrTemp.push(vm.$store.dispatch('loadDossierFiles', data.dossierId))\n      arrTemp.push(vm.$store.dispatch('getServiceInfo', {\n        serviceInfoId: data.serviceCode\n      }))\n      Promise.all(arrTemp).then(values => {\n        var dossierTemplates = values[0]\n        var dossierMarks = values[1]\n        var dossierFiles = values[2]\n        var fileTemplates = []\n        if (values[3].hasOwnProperty('serviceInfoId')) {\n          vm.serviceInfoId = values[3].serviceInfoId\n        }\n        if (values[3].fileTemplates) {\n          if (Array.isArray(values[3].fileTemplates)) {\n            fileTemplates = values[3].fileTemplates\n          } else {\n            fileTemplates.push(values[3].fileTemplates)\n          }\n        }\n        // console.log('dossierTemplates++++++', dossierTemplates)\n        // console.log('dossierMarks++++++', dossierMarks)\n        // console.log('dossierFiles++++++', dossierFiles)\n        var dossierTemplateItems = vm.mergeDossierTemplateVsDossierFiles(dossierTemplates, dossierFiles)\n        // console.log('dossierTemplateItems++++++MERGER++++file', dossierTemplateItems)\n        dossierTemplateItems = vm.mergeDossierTemplateVsDossierMark(dossierTemplateItems, dossierMarks)\n        dossierTemplateItems = vm.mergeDossierTemplateVsFileTemplates(dossierTemplateItems, fileTemplates)\n        // console.log('dossierTemplateItems++++++MERGE++++mark', dossierTemplateItems)\n        vm.dossierFilesItems = dossierFiles\n        vm.dossierMarksItems = dossierMarks\n        vm.fileTemplateItems = fileTemplates\n        vm.dossierTemplateItems = dossierTemplateItems\n        if (vm.partTypes.includes(2) && vm.dossierTemplateItems.length > 0) {\n          let dossierTemplateKQ = []\n          vm.dossierTemplateItems.forEach(item => {\n            let hasKQ = vm.dossierFilesItems.find(file => {\n              return (item.partNo === file.dossierPartNo && item.partType === 2)\n            })\n            if (hasKQ) {\n              dossierTemplateKQ.push(item)\n            }\n          })\n          vm.dossierTemplateItems = dossierTemplateKQ\n          console.log('dossierTemplateItems555', vm.dossierTemplateItems)\n        }\n        vm.changeStateViewResult()\n        setTimeout(function (argument) {\n          vm.genAllAlpacaForm(dossierFiles, dossierTemplateItems)\n          vm.recountFileTemplates()\n        }, 500)\n        console.log('dossierTemplateItems', vm.dossierTemplateItems)\n        let fileTemplateNoArr = []\n        for (let key in vm.dossierTemplateItems) {\n          if (vm.dossierTemplateItems[key]['fileTemplateNo']) {\n            fileTemplateNoArr.push(vm.dossierTemplateItems[key]['fileTemplateNo'])\n          }\n        }\n        if (fileTemplateNoArr.length > 0) {\n          vm.fileTemplateNoString = fileTemplateNoArr.toString()\n          console.log('fileTemplateNoString', vm.fileTemplateNoString)\n          if (vm.applicantId && !vm.onlyView) {\n            vm.getDossierFileApplicants(vm.applicantId, vm.fileTemplateNoString)\n          }\n        }\n      }).catch(reject => {\n      })\n    },\n    genAllAlpacaForm (dossierFiles, dossierTemplateItems) {\n      var vm = this\n      if (dossierFiles.length > 0) {\n        var dossierFilesEform = dossierFiles.filter(file => {\n          return file.eForm\n        })\n        var dossierTemplatesHasForm = dossierTemplateItems.filter(template => {\n          return template.hasForm && vm.partTypes.includes(template.partType)\n        })\n        if (dossierFilesEform.length > 0) {\n          dossierFilesEform.forEach(itemFiles => {\n            if (itemFiles.eForm) {\n              vm.$store.dispatch('loadAlpcaForm', itemFiles)\n            }\n          })\n        } else {\n          dossierTemplateItems.forEach(val => {\n            if (val.hasForm && vm.partTypes.includes(val.partType)) {\n              val['templateFileNo'] = vm.thongTinHoSo.dossierTemplateNo\n              vm.showAlpacaJSFORM(val)\n            }\n          })\n        }\n        if (dossierTemplatesHasForm.length !== dossierFilesEform.length) {\n          dossierTemplatesHasForm.forEach(template => {\n            let indexFromFile = dossierFilesEform.findIndex(item => {\n              return template.partNo === item.dossierPartNo\n            })\n            if (indexFromFile === -1) {\n              template['templateFileNo'] = vm.thongTinHoSo.dossierTemplateNo\n              vm.showAlpacaJSFORM(template)\n            }\n          })\n        }\n      } else {\n        dossierTemplateItems.forEach(val => {\n          if (val.hasForm && vm.partTypes.includes(val.partType)) {\n            val['templateFileNo'] = vm.thongTinHoSo.dossierTemplateNo\n            vm.showAlpacaJSFORM(val)\n          }\n        })\n      }\n    },\n    postDossierMark (item, index) {\n      var vm = this\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      vm.$store.dispatch('postDossierMark', item).then(resultMark => {\n      }).catch(reject => {\n      })\n      //   dossierTemplates.forEach(function (val, index) {\n        //     if (val.partType === 1) {\n        //       val['dossierId'] = vm.dossierId\n        //       listDossierMark.push(vm.$store.dispatch('postDossierMark', val))\n        //     }\n        //   })\n    },\n    mergeDossierTemplateVsDossierFiles (dossierTemplates, dossierFiles) {\n      var vm = this\n      if (dossierFiles.length !== 0) {\n        dossierTemplates.forEach(template => {\n          template['daKhai'] = false\n          template['passRequired'] = false\n          var itemFind = dossierFiles.find(file => {\n            return template.partNo === file.dossierPartNo && vm.partTypes.includes(template.partType) && file.eForm && !file.removed\n          })\n          if (itemFind) {\n            template['daKhai'] = true\n            template['hasForm'] = true\n            template['referenceUid'] = itemFind['referenceUid']\n          }\n          dossierFiles.forEach(dossierFile => {\n            if (template.partNo === dossierFile.dossierPartNo) {\n              template['passRequired'] = true\n            }\n          })\n        })\n      } else {\n        dossierTemplates.forEach(template => {\n          if (template.hasForm) {\n            template['daKhai'] = false\n            template['passRequired'] = false\n          }\n        })\n      }\n      return dossierTemplates\n    },\n    mergeDossierTemplateVsDossierMark (dossierTemplates, dossierMarks) {\n      if (dossierMarks.length !== 0) {\n        dossierTemplates.map(itemTemplate => {\n          itemTemplate['count'] = 0\n          itemTemplate['stateEditFileCheck'] = false\n          let fileMarkFind = dossierMarks.find(fileMark => {\n            return fileMark.dossierPartNo === itemTemplate.partNo\n          })\n          if (fileMarkFind !== null && fileMarkFind !== undefined) {\n            itemTemplate['fileMark'] = fileMarkFind.fileMark\n            itemTemplate['fileComment'] = fileMarkFind.fileComment\n            itemTemplate['fileCheck'] = fileMarkFind.fileCheck\n          } else {\n            itemTemplate['fileMark'] = 0\n            itemTemplate['fileComment'] = ''\n            itemTemplate['fileCheck'] = 0\n          }\n          return itemTemplate\n        })\n      } else {\n        if (dossierTemplates) {\n          dossierTemplates.forEach(itemTemplate => {\n            itemTemplate['stateEditFileCheck'] = false\n            itemTemplate['count'] = 0\n            itemTemplate['fileMark'] = 0\n            itemTemplate['fileComment'] = ''\n            itemTemplate['fileCheck'] = 0\n            itemTemplate['stateEditFileCheck'] = false\n          })\n        }\n      }\n      return dossierTemplates\n    },\n    mergeDossierTemplateVsFileTemplates (dossierTemplates, fileTemplates) {\n      if (fileTemplates.length !== 0) {\n        dossierTemplates.map(itemTemplate => {\n          let fileTemp = fileTemplates.find(fileTemplate => {\n            return fileTemplate.fileTemplateNo === itemTemplate.fileTemplateNo\n          })\n          if (fileTemp !== null && fileTemp !== undefined) {\n            itemTemplate['hasFileTemp'] = fileTemp.fileTemplateNo\n          } else {\n            itemTemplate['hasFileTemp'] = ''\n          }\n          return itemTemplate\n        })\n      } else {\n        if (dossierTemplates) {\n          dossierTemplates.forEach(itemTemplate => {\n            itemTemplate['hasFileTemp'] = ''\n          })\n        }\n      }\n      return dossierTemplates\n    },\n    showAlpacaJSFORM (item) {\n      var vm = this\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      vm.$store.dispatch('loadFormScript', item).then(resScript => {\n        vm.$store.dispatch('loadFormData', item).then(resData => {\n          window.$('#formAlpaca' + item.partNo + vm.id).empty()\n          var formScript, formData\n          /* eslint-disable */\n          if (resScript) {\n            formScript = eval('(' + resScript + ')')\n          } else {\n            formScript = {}\n          }\n          if (resData) {\n            formData = eval('(' + resData + ')')\n          } else {\n            formData = {}\n          }\n          /* eslint-disable */\n          formScript.data = formData\n          window.$('#formAlpaca' + item.partNo + vm.id).alpaca(formScript)\n        })\n      })\n    },\n    saveAlpacaForm (item, index) {\n      var vm = this\n      var fileFind = vm.dossierFilesItems.find(itemFile => {\n        return itemFile.dossierPartNo === item.partNo && itemFile.eForm\n      })\n      if (fileFind) {\n        fileFind['dossierId'] = vm.thongTinHoSo.dossierId\n        fileFind['id'] = vm.id\n        vm.$store.dispatch('putAlpacaForm', fileFind).then(resData => {\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(resFiles => {\n            vm.dossierFilesItems = resFiles\n          }).catch(reject => {\n          })\n          vm.dossierTemplateItems[index]['passRequired'] = true\n          // toastr.success('Yêu cầu của bạn được thực hiện thành công.')\n        }).catch(reject => {\n          toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n        })\n      } else {\n        item['dossierId'] = vm.thongTinHoSo.dossierId\n        item['id'] = vm.id\n        vm.$store.dispatch('postEform', item).then(resPostEform => {\n          // toastr.success('Yêu cầu của bạn được thực hiện thành công.')\n          vm.dossierTemplateItems[index].daKhai = true\n          vm.dossierTemplateItems[index]['passRequired'] = true\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(resFiles => {\n            vm.dossierFilesItems = resFiles\n          }).catch(reject => {\n            toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n          })\n        }).catch(reject => {\n          toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n        })\n      }\n    },\n    onDeleteAttackFiles (item) {\n      var vm = this\n      console.log('delete')\n      let x = confirm('Bạn có muốn xóa toàn bộ file trong thành phần hồ sơ này?')\n      if (x) {\n        vm.dossierFilesItems.forEach(val => {\n          if (val.dossierPartNo === item.partNo) {\n            val['dossierId'] = vm.thongTinHoSo.dossierId\n            vm.$store.dispatch('deleteAttackFiles', val).then(function (result) {\n              vm.resetCounterTemplate(item)\n              vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId)\n            }).catch(function (xhr) {\n            })\n          }\n        })\n      }\n    },\n    changeApplicantNote () {\n      let vm = this\n      console.log('applicantNoteEdit', vm.applicantNoteDossier)\n      vm.$store.commit('setApplicantNote', vm.applicantNoteDossier)\n    },\n    pickFile (item) {\n      var vm = this\n      vm.stateAddFileOther = false\n      document.getElementById('file' + item.partNo).value = ''\n      document.getElementById('file' + item.partNo).click()\n    },\n    onUploadSingleFile (e, data, index) {\n      var vm = this\n      console.log('vm.dossierTemplateItems[index]', vm.dossierTemplateItems[index])\n      vm.dossierTemplatesItemSelect = data\n      vm.progressUploadPart = data.partNo\n      data['dossierId'] = vm.thongTinHoSo.dossierId\n      data['dossierTemplateNo'] = vm.thongTinHoSo.dossierTemplateNo\n      if (data.partType !== 3) {\n        vm.$store.dispatch('uploadSingleFile', data).then(function (result) {\n          vm.dossierTemplateItems[index]['passRequired'] = true\n          vm.progressUploadPart = ''\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result => {\n            vm.dossierFilesItems = result\n            vm.recountFileTemplates()\n            // var fileViewsTemp = vm.dossierFilesItems.filter(file => {\n            //   return file.dossierPartNo === vm.dossierTemplatesItemSelect.partNo && !file.eForm\n            // })\n            // if (fileViewsTemp) {\n            //   vm.fileViews = fileViewsTemp\n            // }\n          })\n        }).catch(function (xhr) {\n          vm.progressUploadPart = ''\n        })\n      } else {\n        if (window.$('#file' + data.partNo)[0].files.length === 0) {\n          vm.progressUploadPart = ''\n          return\n        }\n        vm.partView = data.partNo\n        vm.stateView = true\n        vm.dialogAddOtherTemp = true\n      }\n    },\n    loadAlpcaForm (data) {\n      var vm = this\n      //\n      vm.currentFormView = 'formAlpaca' + data.partNo + vm.id\n      vm.pstEl = vm.endEl = 0\n      setTimeout(function () {\n        if ($('#formAlpaca' + data.partNo + vm.id).height() > 200) {\n          vm.pstEl = $('#wrapForm' + data.partNo + vm.id).offset().top\n          vm.endEl = $('#formAlpaca' + data.partNo + vm.id).height()\n          $(window).scroll(function () {\n            vm.pstFixed = $(window).scrollTop()\n          })\n        }\n      }, 500)\n      //\n      var fileFind = vm.dossierFilesItems.find(itemFile => {\n        return itemFile.dossierPartNo === data.partNo && itemFile.eForm\n      })\n      if (fileFind) {\n        fileFind['id'] = vm.id\n        vm.$store.dispatch('loadAlpcaForm', fileFind)\n      } else {\n        vm.dossierTemplateItems.forEach(val => {\n          if (val.hasForm && data.partNo === val.partNo) {\n            val['templateFileNo'] = vm.thongTinHoSo.dossierTemplateNo\n            vm.showAlpacaJSFORM(val)\n          }\n        })\n      }\n    },\n    deleteSingleFileEform (item, index) {\n      var vm = this\n      let x = confirm('Bạn có chắc chắn xóa file?')\n      if (x) {\n        vm.dossierFilesItems.forEach(file => {\n          if (file.dossierPartNo === item.partNo && file.eForm) {\n            file['dossierId'] = vm.thongTinHoSo.dossierId\n            vm.$store.dispatch('deleteDossierFile', file).then(resFile => {\n              console.log('success!')\n              vm.dossierTemplateItems[index].daKhai = false\n              vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result => {\n                vm.dossierFilesItems = result\n                vm.recountFileTemplates()\n                if (vm.dossierFilesItems.length !== 0) {\n                  var fileViewsTemp = vm.dossierFilesItems.filter(file => {\n                    return file.dossierPartNo === item.partNo\n                  })\n                  if (fileViewsTemp) {\n                    vm.dossierTemplateItems[index]['passRequired'] = true\n                  } else {\n                    vm.dossierTemplateItems[index]['passRequired'] = false\n                  }\n                } else {\n                  vm.dossierTemplateItems[index]['passRequired'] = false\n                }\n              })\n            })\n          }\n        })\n      }\n    },\n    previewFileEfom (item, index) {\n      var vm = this\n      vm.dossierFilesItems.forEach(file => {\n        if (file.dossierPartNo === item.partNo && file.eForm && !file.removed) {\n          file['dossierId'] = vm.thongTinHoSo.dossierId\n          vm.dialogPDFLoading = true\n          vm.dialogPDF = true\n          if (!vm.onlyView) {\n            file['id'] = vm.id\n            vm.$store.dispatch('putAlpacaForm', file).then(resData => {\n              setTimeout(function () {\n                vm.$store.dispatch('viewFile', file).then(result => {\n                  vm.dialogPDFLoading = false\n                  document.getElementById('dialogPDFPreview' + vm.id).src = result\n                })\n              }, 1000)\n            }).catch(reject => {\n              toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n            })\n          } else {\n            vm.$store.dispatch('viewFile', file).then(result => {\n              vm.dialogPDFLoading = false\n              document.getElementById('dialogPDFPreview' + vm.id).src = result\n            })\n          }\n        }\n      })\n    },\n    deleteSingleFile (item, index) {\n      var vm = this\n      let x = confirm('Bạn có chắc chắn xóa file đính kèm ?')\n      if (x) {\n        item['dossierId'] = vm.thongTinHoSo.dossierId\n        vm.$store.dispatch('deleteDossierFile', item).then(resFile => {\n          // toastr.success('Yêu cầu của bạn được thực hiện thành công.')\n          vm.fileViews.splice(index, 1)\n          vm.stateView = true\n          vm.partView = item.dossierPartNo\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result => {\n            vm.dossierFilesItems = result\n            // vm.recountFileTemplates()\n            vm.setDaKhai(item)\n          })\n        }).catch(reject => {\n          toastr.error('Yêu cầu của bạn thực hiện thất bại.')\n        })\n      }\n    },\n    viewFile (data) {\n      var vm = this\n      vm.dossierFilesItems.forEach(val => {\n        val['dossierId'] = vm.thongTinHoSo.dossierId\n        if (val.dossierPartNo === data.partNo) {\n          this.$store.dispatch('viewFile', val)\n        }\n      })\n    },\n    setDaKhai (itemFile) {\n      var vm = this\n      let indexFile = vm.dossierFilesItems.findIndex(file => {\n        return file.dossierPartNo === itemFile.dossierPartNo\n      })\n      if (indexFile === -1) {\n        for (var i = 0; i < vm.dossierTemplateItems.length; i++) {\n          if (vm.dossierTemplateItems[i].partNo === itemFile.dossierPartNo) {\n            vm.dossierTemplateItems[i]['passRequired'] = false\n            break\n          }\n        }\n      } else {\n        for (var i = 0; i < vm.dossierTemplateItems.length; i++) {\n          if (vm.dossierTemplateItems[i].partNo === itemFile.dossierPartNo) {\n            vm.dossierTemplateItems[i]['passRequired'] = true\n            break\n          }\n        }\n      }\n    },\n    checkPartType3 () {\n      var vm = this\n      if (vm.dossierTemplateItems.length !== 0) {\n        for (var i = 0; i < vm.dossierTemplateItems.length; i++) {\n          if (vm.dossierTemplateItems[i].partType === 3) {\n            return true\n          }\n        }\n      }\n      return false\n    },\n    viewFile2 (data) {\n      var vm = this\n      if (data.fileSize === 0) {\n        return\n      }\n      if (data['hasForm']) {\n        vm.pdfEform = true\n      } else {\n        vm.pdfEform = false\n      }\n      if (data.fileType === 'doc' || data.fileType === 'docx' || data.fileType === 'xlsx' || data.fileType === 'xls' || data.fileType === 'zip' || data.fileType === 'rar' || data.fileType === 'txt' || data.fileType === 'mp3' || data.fileType === 'mp4') {\n        var url = vm.initDataResource.dossierApi + '/' + vm.thongTinHoSo.dossierId + '/files/' + data.referenceUid\n        window.open(url)\n      } else {\n        data['dossierId'] = vm.thongTinHoSo.dossierId\n        if (data.referenceUid) {\n          vm.dialogPDFLoading = true\n          vm.dialogPDF = true\n          vm.$store.dispatch('viewFile', data).then(result => {\n            vm.dialogPDFLoading = false\n            document.getElementById('dialogPDFPreview' + vm.id).src = result\n          })\n        } else {\n          toastr.error('File dữ liệu không tồn tại')\n        }\n      }\n    },\n    viewGiayToDaNop (data) {\n      var vm = this\n      if (data.fileSize === 0) {\n        return\n      }\n      if (data['hasForm']) {\n        vm.pdfEform = true\n      } else {\n        vm.pdfEform = false\n      }\n      if (data.fileType === 'doc' || data.fileType === 'docx' || data.fileType === 'xlsx' || data.fileType === 'xls' || data.fileType === 'zip' || data.fileType === 'rar' || data.fileType === 'txt' || data.fileType === 'mp3' || data.fileType === 'mp4') {\n        var url = vm.initDataResource.dossierApi + '/' + data.dossierId + '/files/' + data.referenceUid\n        window.open(url)\n      } else {\n        if (data.referenceUid) {\n          vm.dialogPDFLoading = true\n          vm.dialogPDF = true\n          vm.$store.dispatch('viewFile', data).then(result => {\n            vm.dialogPDFLoading = false\n            document.getElementById('dialogPDFPreview' + vm.id).src = result\n          })\n        } else {\n          toastr.error('File dữ liệu không tồn tại')\n        }\n      }\n    },\n    viewFileWithPartNo (item) {\n      var vm = this\n      if (vm.dossierFilesItems) {\n        var fileViewsTemp = vm.dossierFilesItems.filter(file => {\n          return file.dossierPartNo === item.partNo && !file.eForm\n        })\n        if (fileViewsTemp) {\n          vm.fileViews = fileViewsTemp\n          // vm.sheet = true\n          if (vm.partView !== item.partNo) {\n            vm.stateView = true\n            vm.partView = item.partNo\n          } else {\n            vm.stateView = !vm.stateView\n            vm.partView = item.partNo\n          }\n        } else {\n          return\n        }\n      }\n      return\n    },\n    saveMark () {\n      var vm = this\n      if (vm.dossierTemplateItems) {\n        vm.dossierTemplateItems.forEach(function (value, index) {\n          if (value.partType === 1) {\n            value['dossierId'] = vm.thongTinHoSo.dossierId\n            vm.$store.dispatch('postDossierMark', value)\n          }\n        })\n      }\n    },\n    changeFileMark (event, index) {\n      var vm = this\n      let item = vm.dossierTemplateItems[index]\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      item['fileMark'] = event\n      item['checkInput'] = vm.checkInput\n      vm.$store.dispatch('postDossierMark', item)\n      vm.dossierTemplateItems[index].fileMark = event\n    },\n    changeFileCheck (event, index) {\n      var vm = this\n      // console.log('event=====', event)\n      let item = vm.dossierTemplateItems[index]\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      item['fileCheck'] = event\n      item['checkInput'] = vm.checkInput\n      if (event === 2) {\n        item['stateEditFileCheck'] = true\n        return\n      } else {\n        item['fileComment'] = ''\n      }\n      // console.log('item-check-------', item)\n      vm.$store.dispatch('postDossierMark', item)\n      vm.dossierTemplateItems[index].fileCheck = event\n    },\n    changeFileComment (item, index) {\n      var vm = this\n      // console.log('item-------', item)\n      if (item.fileComment === null || item.fileComment === undefined || item.fileComment === '') {\n        return\n      }\n      item['dossierId'] = vm.thongTinHoSo.dossierId\n      item['fileComment'] = item.fileComment\n      item['checkInput'] = vm.checkInput\n      item['stateEditFileCheck'] = !item['stateEditFileCheck']\n      // console.log('item-comment-------', item)\n      vm.$store.dispatch('postDossierMark', item)\n      vm.dossierTemplateItems[index].fileComment = item.fileComment\n    },\n    checkStyle (item) {\n      var vm = this\n      if (vm.checkInput === 1) {\n        return 'calc(100% - 140px)'\n      } else {\n        let divPx = 0\n        if (vm.originality !== 1 && item.partType === 1 && !vm.thongTinHoSo.online && vm.checkInput !== 1) {\n          divPx += 140\n        }\n        if (item.fileCheck > 0 && !vm.thongTinHoSo.online) {\n          divPx += 20\n        }\n        if (item.fileCheck > 0 && vm.thongTinHoSo.online) {\n          divPx += 40\n        }\n        if (!vm.onlyView) {\n          divPx += 90\n        }\n        return 'calc(100% - ' + divPx + 'px)'\n      }\n    },\n    checkVisibleTemp (item, index) {\n      var vm = this\n      if (!vm.onlyView) {\n        return true\n      }\n      if (item.partType === 3) {\n        if (vm.dossierFilesItems.length > 0) {\n          let indexFile = vm.dossierFilesItems.findIndex(file => {\n            return file.dossierPartNo === item.partNo\n          })\n          if (indexFile === -1) {\n            return false\n          } else {\n            return true\n          }\n        } else {\n          return false\n        }\n      } else {\n        return true\n      }\n    },\n    changeStateViewResult () {\n      var vm = this\n      if (vm.dossierFilesItems.length > 0) {\n        let index = vm.dossierFilesItems.findIndex(file => {\n          return file.dossierPartType === 2\n        })\n        if (index !== -1) {\n          vm.$emit('tp:change-state-view-result', true)\n        } else {\n          vm.$emit('tp:change-state-view-result', false)\n        }\n      } else {\n        if (vm.partTypes.includes(2)) {\n          vm.$emit('tp:change-state-view-result', false)\n        }\n      }\n    },\n    changeOtherDossierTemp (data) {\n      var vm = this\n      if (vm.originality === 3 && vm.stateAddFileOther) {\n        vm.loadingAddOther = true\n        vm.$store.dispatch('uploadSingleOtherFile', {\n          dossierId: vm.thongTinHoSo.dossierId,\n          displayName: data,\n          partNo: vm.dossierTemplatesItemSelect.partNo\n        }).then(resFile => {\n          vm.loadingAddOther = false\n          vm.dialogAddOtherTemp = false\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result2 => {\n            vm.dossierFilesItems = result2\n          })\n        }).catch(reject => {\n          vm.loadingAddOther = false\n        })\n      } else {\n        // console.log('dossierTemplatesItemSelect ', vm.dossierTemplatesItemSelect)\n        let params = vm.dossierTemplatesItemSelect\n        params['dossierId'] = vm.thongTinHoSo.dossierId\n        params['displayName'] = data\n        params['dossierTemplateNo'] = vm.thongTinHoSo.dossierTemplateNo\n        vm.$store.dispatch('uploadSingleFile', params).then(function (result1) {\n          vm.progressUploadPart = ''\n          vm.dialogAddOtherTemp = false\n          // console.log('success!!!!!!!!!!!!!!')\n          vm.$store.dispatch('loadDossierFiles', vm.thongTinHoSo.dossierId).then(result2 => {\n            vm.dossierFilesItems = result2\n            vm.recountFileTemplates()\n            if (vm.stateView && vm.dossierFilesItems) {\n              var fileViewsTemp = vm.dossierFilesItems.filter(file => {\n                return file.dossierPartNo === vm.dossierTemplatesItemSelect.partNo && !file.eForm\n              })\n              if (fileViewsTemp) {\n                vm.fileViews = fileViewsTemp\n              }\n            }\n          })\n        }).catch(function (xhr) {\n          vm.progressUploadPart = ''\n        })\n      }\n    },\n    downloadFileTemplate (item, index) {\n      var vm = this\n      if (vm.fileTemplateItems.length > 0) {\n        let fileFind = vm.fileTemplateItems.find(file => {\n          return item.fileTemplateNo === file.fileTemplateNo\n        })\n        if (fileFind) {\n          let url = vm.initDataResource.serviceInfoApi + '/' + vm.serviceInfoId + '/filetemplates/' + fileFind.fileTemplateNo\n          window.open(url)\n        } else {\n          console.log('ko thay file')\n        }\n      }\n    },\n    addOtherTemplate () {\n      var vm = this\n      if (vm.$refs.form.validate()) {\n        // console.log('add')\n        vm.changeOtherDossierTemp(vm.otherDossierTemplate)\n      }\n    },\n    editDisplayName (item, index) {\n      var vm = this\n      if (vm.dossierFileIdView !== item.dossierFileId) {\n        vm.dossierFileIdView = item.dossierFileId\n        vm.stateEdit = true\n      } else {\n        vm.dossierFileIdView = item.dossierFileId\n        vm.stateEdit = !vm.stateEdit\n      }\n    },\n    cancelDialog () {\n      var vm = this\n      vm.dialogAddOtherTemp = false\n      vm.progressUploadPart = ''\n    },\n    addFileOther (item) {\n      var vm = this\n      vm.dialogAddOtherTemp = true\n      vm.stateAddFileOther = true\n      vm.dossierTemplatesItemSelect = item\n    },\n    validDossierTemplate () {\n      var vm = this\n      if (vm.dossierTemplateItems.length > 0) {\n        for (var i = 0; i < vm.dossierTemplateItems.length; i++) {\n          if (vm.dossierTemplateItems[i]['required'] && !vm.dossierTemplateItems[i]['passRequired'] && vm.partTypes.includes(vm.dossierTemplateItems[i].partType)) {\n            let message = 'Chú ý :' + vm.dossierTemplateItems[i].partName + ' là thành phần bắt buộc!'\n            toastr.error(message)\n            return false\n          }\n        }\n        return true\n      } else {\n        return true\n      }\n    },\n    changeDisplayName (item, index) {\n      var vm = this\n      let params = {\n        dossierId: vm.thongTinHoSo.dossierId,\n        value: value\n      }\n      vm.$store.dispatch('changeDisplayNameFile', params).then(result => {\n        vm.fileViews[index].displayName = result.displayName\n        vm.stateEdit = false\n      }).catch(reject => {\n        console.log('error')\n      })\n    },\n    getDossierFileApplicants (applicantIdNo, fileTemplateNo) {\n      var vm = this\n      let filter = {\n        dossierId: vm.thongTinHoSo.dossierId,\n        applicantIdNo: applicantIdNo,\n        fileTemplateNo: fileTemplateNo\n      }\n      vm.$store.dispatch('getDossierFilesApplicants', filter).then(result => {\n        vm.dossierFilesApplicant = result\n      }).catch(reject => {\n        console.log('error')\n      })\n    },\n    showFilesApplicant (partNo) {\n      let vm = this\n      console.log($('#fileApplicant-' + partNo).is(':visible'))\n      if ($('#fileApplicant-' + partNo).is(':visible')) {\n        $('#fileApplicant-' + partNo).hide()\n      } else {\n        $('#fileApplicant-' + partNo).show()\n      }\n    },\n    checkKQhasFile (item) {\n      var vm = this\n      if (vm.partTypes.includes(2)) {\n        var hasFile = vm.dossierFilesItems.find(file => {\n          return item.partNo === file.dossierPartNo\n        })\n        if (hasFile) {\n          return true\n        } else {\n          return false\n        }\n      } else {\n        return true\n      }\n    },\n    partNoApplicantHasFile (partNo) {\n      let vm = this\n      let hasFile = vm.dossierFilesApplicant.find(file => {\n        return (file.dossierTemplateNo === vm.thongTinHoSo['dossierTemplateNo'] && file.dossierPartNo === partNo)\n      })\n      if (hasFile) {\n        return true\n      } else {\n        return false\n      }\n    }\n  }\n}\n</script>\n"]}]}