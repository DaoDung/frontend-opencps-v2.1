{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/form_xu_ly/KyPheDuyetTaiLieu.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/form_xu_ly/KyPheDuyetTaiLieu.vue","mtime":1548065607135},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport $ from 'jquery'\nimport toastr from 'toastr'\nimport VueCaptcha from './Captcha.vue'\ntoastr.options = {\n  'closeButton': true,\n  'timeOut': '5000'\n}\nfunction plugin0 () {\n  return document.getElementById('plugin0')\n}\nvar plugin = plugin0\nexport default {\n  props: {\n    detailDossier: {},\n    dataEsign: {}\n  },\n  components: {\n    'v-captcha': VueCaptcha\n  },\n  data: () => ({\n    tabActive: 'tabs-1',\n    activeKS: false,\n    noteReason: '',\n    thongTinHoSo: {},\n    passWord: '',\n    e1: true\n  }),\n  created () {\n    if (this.esignType === '' || this.esignType === 'digital') {\n      this.activeKS = true\n    }\n  },\n  computed: {\n    kysoSuccess () {\n      return this.$store.getters.kysoSuccess\n    },\n    esignType () {\n      return this.dataEsign.signatureType\n    }\n  },\n  watch: {\n  },\n  mounted () {\n    if (this.esignType === '' || this.esignType === 'digital') {\n      this.activeKS = true\n    }\n  },\n  methods: {\n    changeActive () {\n      var vm = this\n      console.log('tabActive', vm.tabActive)\n    },\n    doExport () {\n      let vm = this\n      let exportData = {\n        textValue: vm.noteReason,\n        required: (vm.esignType === 'password') ? vm.passWord : (vm.esignType === 'digital' || vm.esignType === '' ? vm.activeKS : vm.$refs.captcha.checkValidCatcha())\n      }\n      console.log('exportData', exportData)\n      return exportData\n    },\n    checkCreateFile (item) {\n      var vm = this\n      var fileArr\n      if (Array.isArray(item.createFiles)) {\n        fileArr = item.createFiles\n      } else {\n        fileArr = [item.createFiles]\n      }\n      var idArr = []\n      var waitingFiles = false\n      if (fileArr.length > 0) {\n        var length = fileArr.length\n        for (var i = 0; i < length; i++) {\n          var fileDetail = fileArr[i]\n          if (fileDetail.counter === 0) {\n            waitingFiles = true\n          }\n        }\n      } else {\n        waitingFiles = true\n      }\n      return waitingFiles\n    },\n    kySo (item) {\n      console.log('run ky so data payload', item)\n      var vm = this\n      var fileArr\n      if (Array.isArray(item.createFiles)) {\n        fileArr = item.createFiles\n      } else {\n        fileArr = [item.createFiles]\n      }\n      var idArr = []\n      var waitingFiles = false\n      if (fileArr.length > 0) {\n        var length = fileArr.length\n        for (var i = 0; i < length; i++) {\n          var fileDetail = fileArr[i]\n          if (fileDetail.counter === 0) {\n            waitingFiles = true\n            break\n          }\n          var dossierFileId = fileDetail.dossierFileId\n          var dossierPartId = fileDetail.dossierPartId\n          if (dossierFileId && dossierPartId && vm.esignType === 'digital') {\n            let strId = dossierFileId + ',' + dossierPartId\n            idArr.push(strId)\n          } else if (dossierFileId && vm.esignType !== 'digital') {\n            let strId1 = dossierFileId\n            idArr.push(strId1)\n          }\n        }\n      } else {\n        alert('Không tồn tại tệp điện tử. Vui lòng kiểm tra lại')\n      }\n      console.log('idArr', idArr)\n      var isKyOk = item.eSignature\n      if (isKyOk) {\n        if (waitingFiles) {\n          alert('Tệp điện tử chưa sẵn sàng. Xin vui lòng chờ trong giây lát')\n          return\n        }\n        if (idArr) {\n          var paramObj = {}\n          paramObj.actionCode = item.actionCode\n          paramObj.actionUser = window.themeDisplay.getUserName() ? window.themeDisplay.getUserName() : ''\n          paramObj.actionNote = ''\n          paramObj.postStepCode = item.postStepCode ? item.postStepCode : ''\n          paramObj.payload = item.payload ? item.payload : ''\n          paramObj.assignUsers = item.assignUsers ? item.assignUsers : ''\n          paramObj.payment = item.payment ? item.payment : ''\n          paramObj.userNote = item.userNote ? item.userNote : ''\n          var strIdArr = idArr.join(';')\n          var actionName = item.actionName\n          console.log('strIdArr', strIdArr)\n          console.log('paramObj', paramObj)\n          if (vm.esignType === 'digital') {\n            if (!plugin().valid) {\n              isKyOk = false\n              alert('Plugin ký số không hoạt động')\n              return\n            }\n            vm.kyDuyetYCGiamDinh(strIdArr, paramObj, actionName)\n          } else if (vm.esignType === 'captcha' || vm.esignType === 'password' || vm.esignType === '') {\n            vm.completeKyDuyetCaptchaSignature(strIdArr, paramObj, actionName)\n          }\n        }\n      }\n    },\n    kyDuyetYCGiamDinh (strIdArr, paramObj, actionName) {\n      var vm = this\n      var url = '/o/rest/v2/defaultsignature/digitalSignature/' + vm.detailDossier.dossierId + '/hashComputed'\n      console.log(vm.detailDossier.dossierId)\n      $.ajax({\n        type: 'POST',\n        url: url,\n        async: false,\n        dataType: 'json',\n        headers: {\n          'groupId': window.themeDisplay.getScopeGroupId(),\n          'Token': window.Liferay.authToken\n        },\n        data: {\n          strIdArr: strIdArr,\n          actionCode: paramObj.actionCode,\n          postStepCode: paramObj.postStepCode\n        },\n        success: function (result) {\n          console.log(result)\n          var msgs = result.msg\n          if (msgs !== 'fileEntryId') {\n            var hashComputers = result.hashComputers\n            var signFieldNames = result.signFieldNames\n            var fileNames = result.fileNames\n            var fileEntryIds = result.fileEntryId\n            console.log('hashComputers: ' + hashComputers)\n            console.log('signFieldNames: ' + signFieldNames)\n            console.log('fileNames: ' + fileNames)\n            console.log('msgs: ' + msgs)\n            var signs = []\n            if (plugin().valid) {\n              for (var i = 0; i < hashComputers.length; i++) {\n                var hashComputer = hashComputers[i]\n                var code = plugin().Sign(hashComputer)\n                if (code === 0 || code === 7) {\n                  var sign = plugin().Signature\n                  var signFieldName = signFieldNames[i]\n                  var fileName = fileNames[i]\n                  console.log('sign: ' + sign)\n                  console.log('signFieldName: ' + signFieldName)\n                  console.log('fileName: ' + fileName)\n                  signs.push(sign)\n                } else {\n                  alert(plugin().ErrorMessage)\n                }\n              }\n              vm.completeKyDuyetManyYCGiamDinh(signs.join(','), signFieldNames.join(','), fileNames.join(','), fileEntryIds.join(','), paramObj, actionName)\n            } else {\n              alert('Plugin ký số không hoạt động')\n            }\n          } else {\n            alert('Không tìm thấy file bản thảo. Tạm dừng tiến trình ký số')\n          }\n        },\n        error: function (result) {\n        }\n      })\n    },\n    completeKyDuyetManyYCGiamDinh (signs, signFieldNames, fileNames, fileEntryIds, paramObj, actionName) {\n      var vm = this\n      var url = '/o/rest/v2/defaultsignature/digitalSignature/' + vm.detailDossier.dossierId + '/dossierFiles'\n      $.ajax({\n        type: 'PUT',\n        url: url,\n        async: false,\n        dataType: 'json',\n        headers: {\n          'groupId': window.themeDisplay.getScopeGroupId(),\n          'Token': window.Liferay.authToken\n        },\n        data: {\n          actionCode: paramObj['actionCode'],\n          actionUser: paramObj['actionUser'],\n          actionNote: paramObj['actionNote'],\n          assignUserId: paramObj['assignUserId'],\n          postStepCode: paramObj['postStepCode'],\n          subUsers: paramObj['subUsers'],\n          payload: paramObj['payload'] ? JSON.stringify(paramObj['payload']) : '',\n          assignUsers: paramObj['assignUsers'],\n          payment: paramObj['payment'] ? JSON.stringify(paramObj['payment']) : '',\n          userNote: paramObj['userNote'],\n          sign: signs,\n          signFieldName: signFieldNames,\n          fileName: fileNames,\n          fileEntryId: fileEntryIds\n        },\n        success: function (result) {\n          console.log(result)\n          var msg = result.msg\n          if (msg === 'success') {\n            vm.$store.commit('setKysoSuccess', true)\n            toastr.success('Thực hiện ký số thành công.')\n          } else if (msg === 'fileEntryId') {\n            alert('Cảnh báo: Không tìm thấy file bản thảo. Tạm dừng tiến trình đóng dấu số')\n          } else {\n            alert(msg)\n          }\n        },\n        error: function () {\n          alert('Thực hiện ký số thất bại')\n        }\n      })\n    },\n    completeKyDuyetCaptchaSignature (strIdArr, paramObj, actionName) {\n      var vm = this\n      var url = '/o/rest/v2/defaultsignature/' + vm.detailDossier.dossierId + '/dossierFiles'\n      $.ajax({\n        type: 'PUT',\n        url: url,\n        async: false,\n        dataType: 'json',\n        headers: {\n          'groupId': window.themeDisplay.getScopeGroupId() ? window.themeDisplay.getScopeGroupId() : '',\n          'Token': window.Liferay.authToken ? window.Liferay.authToken : ''\n        },\n        data: {\n          actionCode: paramObj['actionCode'],\n          actionUser: paramObj['actionUser'],\n          actionNote: paramObj['actionNote'],\n          assignUserId: paramObj['assignUserId'],\n          postStepCode: paramObj['postStepCode'],\n          subUsers: paramObj['subUsers'],\n          payload: paramObj['payload'] ? JSON.stringify(paramObj['payload']) : '',\n          assignUsers: paramObj['assignUsers'],\n          payment: paramObj['payment'] ? JSON.stringify(paramObj['payment']) : '',\n          userNote: paramObj['userNote'],\n          fileEntryId: strIdArr\n        },\n        success: function (result) {\n          vm.$store.commit('setKysoSuccess', true)\n          toastr.success('Thực hiện ký số thành công.')\n        },\n        error: function () {\n          toastr.error('Thực hiện ký số thất bại')\n        }\n      })\n    },\n    completeKyDuyetYCGiamDinh (sign, signFieldName, fileName, fileEntryId, paramObj, actionName) {\n      var vm = this\n      var url = '/o/rest/v2/defaultsignature/digitalSignature/' + vm.detailDossier.dossierId + '/dossierFile'\n      $.ajax({\n        type: 'PUT',\n        url: url,\n        async: false,\n        dataType: 'json',\n        headers: {\n          'groupId': window.themeDisplay.getScopeGroupId(),\n          'Token': window.Liferay ? window.Liferay.authToken : '',\n          'Cache-Control': 'no-cache'\n        },\n        data: {\n          actionCode: paramObj['actionCode'],\n          actionUser: paramObj['actionUser'],\n          actionNote: paramObj['actionNote'],\n          assignUserId: paramObj['assignUserId'],\n          postStepCode: paramObj['postStepCode'],\n          subUsers: paramObj['subUsers'],\n          sign: sign,\n          signFieldName: signFieldName,\n          fileName: fileName,\n          fileEntryId: fileEntryId\n        },\n        success: function (result) {\n          console.log(result)\n          var msg = result.msg\n          if (msg === 'success') {\n            toastr.success('Yêu cầu của bạn được thực hiện thành công.')\n          } else if (msg === 'fileEntryId') {\n            alert('Cảnh báo: Không tìm thấy file bản thảo. Tạm dừng tiến trình đóng dấu số')\n          } else {\n            alert(msg)\n          }\n        },\n        error: function () {\n          alert('ky so false')\n        }\n      })\n    }\n  }\n}\n",{"version":3,"sources":["KyPheDuyetTaiLieu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"KyPheDuyetTaiLieu.vue","sourceRoot":"src/components/form_xu_ly","sourcesContent":["<template>  \n  <div class='phancong' style='background-color: white;width:100%'>\n    <v-expansion-panel :value=\"[true]\" class='expansion-pl'>\n      <v-expansion-panel-content hide-actions value='1'>\n        <div slot='header' v-if=\"esignType !== '' && esignType !== 'digital'\">\n          <div class='background-triangle-small'> \n            <v-icon size='18' color='white'>star_rate</v-icon> \n          </div>Duyệt hồ sơ\n        </div>\n        <v-card >\n          <v-card-text class='px-0 py-0'>\n            <v-flex xs12 sm12 class=\"my-3\" v-if=\"esignType === 'captcha'\">\n              <span class=\"ml-3\" style=\"color:#ec0f0f\">(*) Xác thực ký duyệt hồ sơ</span>\n              <v-captcha ref=\"captcha\"></v-captcha>\n            </v-flex>\n            <v-flex xs12 sm4 class=\"my-3 pl-3\" v-if=\"esignType === 'password'\">\n              <span class=\"ml-3\" style=\"color:#ec0f0f\">(*) Xác thực ký duyệt hồ sơ</span>\n              <v-text-field\n                box\n                label=\"Nhập mật khẩu xác thực\"\n                :append-icon=\"e1 ? 'visibility' : 'visibility_off'\"\n                :append-icon-cb=\"() => (e1 = !e1)\"\n                :rules=\"[v => !!v || 'Yêu cầu nhập mật khẩu']\"\n                :type=\"e1 ? 'password' : 'text'\"\n                name=\"input-10-2\"\n                v-model=\"passWord\"\n                required\n              ></v-text-field>\n            </v-flex>\n          </v-card-text>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n  </div>\n</template>\n<script>\nimport $ from 'jquery'\nimport toastr from 'toastr'\nimport VueCaptcha from './Captcha.vue'\ntoastr.options = {\n  'closeButton': true,\n  'timeOut': '5000'\n}\nfunction plugin0 () {\n  return document.getElementById('plugin0')\n}\nvar plugin = plugin0\nexport default {\n  props: {\n    detailDossier: {},\n    dataEsign: {}\n  },\n  components: {\n    'v-captcha': VueCaptcha\n  },\n  data: () => ({\n    tabActive: 'tabs-1',\n    activeKS: false,\n    noteReason: '',\n    thongTinHoSo: {},\n    passWord: '',\n    e1: true\n  }),\n  created () {\n    if (this.esignType === '' || this.esignType === 'digital') {\n      this.activeKS = true\n    }\n  },\n  computed: {\n    kysoSuccess () {\n      return this.$store.getters.kysoSuccess\n    },\n    esignType () {\n      return this.dataEsign.signatureType\n    }\n  },\n  watch: {\n  },\n  mounted () {\n    if (this.esignType === '' || this.esignType === 'digital') {\n      this.activeKS = true\n    }\n  },\n  methods: {\n    changeActive () {\n      var vm = this\n      console.log('tabActive', vm.tabActive)\n    },\n    doExport () {\n      let vm = this\n      let exportData = {\n        textValue: vm.noteReason,\n        required: (vm.esignType === 'password') ? vm.passWord : (vm.esignType === 'digital' || vm.esignType === '' ? vm.activeKS : vm.$refs.captcha.checkValidCatcha())\n      }\n      console.log('exportData', exportData)\n      return exportData\n    },\n    checkCreateFile (item) {\n      var vm = this\n      var fileArr\n      if (Array.isArray(item.createFiles)) {\n        fileArr = item.createFiles\n      } else {\n        fileArr = [item.createFiles]\n      }\n      var idArr = []\n      var waitingFiles = false\n      if (fileArr.length > 0) {\n        var length = fileArr.length\n        for (var i = 0; i < length; i++) {\n          var fileDetail = fileArr[i]\n          if (fileDetail.counter === 0) {\n            waitingFiles = true\n          }\n        }\n      } else {\n        waitingFiles = true\n      }\n      return waitingFiles\n    },\n    kySo (item) {\n      console.log('run ky so data payload', item)\n      var vm = this\n      var fileArr\n      if (Array.isArray(item.createFiles)) {\n        fileArr = item.createFiles\n      } else {\n        fileArr = [item.createFiles]\n      }\n      var idArr = []\n      var waitingFiles = false\n      if (fileArr.length > 0) {\n        var length = fileArr.length\n        for (var i = 0; i < length; i++) {\n          var fileDetail = fileArr[i]\n          if (fileDetail.counter === 0) {\n            waitingFiles = true\n            break\n          }\n          var dossierFileId = fileDetail.dossierFileId\n          var dossierPartId = fileDetail.dossierPartId\n          if (dossierFileId && dossierPartId && vm.esignType === 'digital') {\n            let strId = dossierFileId + ',' + dossierPartId\n            idArr.push(strId)\n          } else if (dossierFileId && vm.esignType !== 'digital') {\n            let strId1 = dossierFileId\n            idArr.push(strId1)\n          }\n        }\n      } else {\n        alert('Không tồn tại tệp điện tử. Vui lòng kiểm tra lại')\n      }\n      console.log('idArr', idArr)\n      var isKyOk = item.eSignature\n      if (isKyOk) {\n        if (waitingFiles) {\n          alert('Tệp điện tử chưa sẵn sàng. Xin vui lòng chờ trong giây lát')\n          return\n        }\n        if (idArr) {\n          var paramObj = {}\n          paramObj.actionCode = item.actionCode\n          paramObj.actionUser = window.themeDisplay.getUserName() ? window.themeDisplay.getUserName() : ''\n          paramObj.actionNote = ''\n          paramObj.postStepCode = item.postStepCode ? item.postStepCode : ''\n          paramObj.payload = item.payload ? item.payload : ''\n          paramObj.assignUsers = item.assignUsers ? item.assignUsers : ''\n          paramObj.payment = item.payment ? item.payment : ''\n          paramObj.userNote = item.userNote ? item.userNote : ''\n          var strIdArr = idArr.join(';')\n          var actionName = item.actionName\n          console.log('strIdArr', strIdArr)\n          console.log('paramObj', paramObj)\n          if (vm.esignType === 'digital') {\n            if (!plugin().valid) {\n              isKyOk = false\n              alert('Plugin ký số không hoạt động')\n              return\n            }\n            vm.kyDuyetYCGiamDinh(strIdArr, paramObj, actionName)\n          } else if (vm.esignType === 'captcha' || vm.esignType === 'password' || vm.esignType === '') {\n            vm.completeKyDuyetCaptchaSignature(strIdArr, paramObj, actionName)\n          }\n        }\n      }\n    },\n    kyDuyetYCGiamDinh (strIdArr, paramObj, actionName) {\n      var vm = this\n      var url = '/o/rest/v2/defaultsignature/digitalSignature/' + vm.detailDossier.dossierId + '/hashComputed'\n      console.log(vm.detailDossier.dossierId)\n      $.ajax({\n        type: 'POST',\n        url: url,\n        async: false,\n        dataType: 'json',\n        headers: {\n          'groupId': window.themeDisplay.getScopeGroupId(),\n          'Token': window.Liferay.authToken\n        },\n        data: {\n          strIdArr: strIdArr,\n          actionCode: paramObj.actionCode,\n          postStepCode: paramObj.postStepCode\n        },\n        success: function (result) {\n          console.log(result)\n          var msgs = result.msg\n          if (msgs !== 'fileEntryId') {\n            var hashComputers = result.hashComputers\n            var signFieldNames = result.signFieldNames\n            var fileNames = result.fileNames\n            var fileEntryIds = result.fileEntryId\n            console.log('hashComputers: ' + hashComputers)\n            console.log('signFieldNames: ' + signFieldNames)\n            console.log('fileNames: ' + fileNames)\n            console.log('msgs: ' + msgs)\n            var signs = []\n            if (plugin().valid) {\n              for (var i = 0; i < hashComputers.length; i++) {\n                var hashComputer = hashComputers[i]\n                var code = plugin().Sign(hashComputer)\n                if (code === 0 || code === 7) {\n                  var sign = plugin().Signature\n                  var signFieldName = signFieldNames[i]\n                  var fileName = fileNames[i]\n                  console.log('sign: ' + sign)\n                  console.log('signFieldName: ' + signFieldName)\n                  console.log('fileName: ' + fileName)\n                  signs.push(sign)\n                } else {\n                  alert(plugin().ErrorMessage)\n                }\n              }\n              vm.completeKyDuyetManyYCGiamDinh(signs.join(','), signFieldNames.join(','), fileNames.join(','), fileEntryIds.join(','), paramObj, actionName)\n            } else {\n              alert('Plugin ký số không hoạt động')\n            }\n          } else {\n            alert('Không tìm thấy file bản thảo. Tạm dừng tiến trình ký số')\n          }\n        },\n        error: function (result) {\n        }\n      })\n    },\n    completeKyDuyetManyYCGiamDinh (signs, signFieldNames, fileNames, fileEntryIds, paramObj, actionName) {\n      var vm = this\n      var url = '/o/rest/v2/defaultsignature/digitalSignature/' + vm.detailDossier.dossierId + '/dossierFiles'\n      $.ajax({\n        type: 'PUT',\n        url: url,\n        async: false,\n        dataType: 'json',\n        headers: {\n          'groupId': window.themeDisplay.getScopeGroupId(),\n          'Token': window.Liferay.authToken\n        },\n        data: {\n          actionCode: paramObj['actionCode'],\n          actionUser: paramObj['actionUser'],\n          actionNote: paramObj['actionNote'],\n          assignUserId: paramObj['assignUserId'],\n          postStepCode: paramObj['postStepCode'],\n          subUsers: paramObj['subUsers'],\n          payload: paramObj['payload'] ? JSON.stringify(paramObj['payload']) : '',\n          assignUsers: paramObj['assignUsers'],\n          payment: paramObj['payment'] ? JSON.stringify(paramObj['payment']) : '',\n          userNote: paramObj['userNote'],\n          sign: signs,\n          signFieldName: signFieldNames,\n          fileName: fileNames,\n          fileEntryId: fileEntryIds\n        },\n        success: function (result) {\n          console.log(result)\n          var msg = result.msg\n          if (msg === 'success') {\n            vm.$store.commit('setKysoSuccess', true)\n            toastr.success('Thực hiện ký số thành công.')\n          } else if (msg === 'fileEntryId') {\n            alert('Cảnh báo: Không tìm thấy file bản thảo. Tạm dừng tiến trình đóng dấu số')\n          } else {\n            alert(msg)\n          }\n        },\n        error: function () {\n          alert('Thực hiện ký số thất bại')\n        }\n      })\n    },\n    completeKyDuyetCaptchaSignature (strIdArr, paramObj, actionName) {\n      var vm = this\n      var url = '/o/rest/v2/defaultsignature/' + vm.detailDossier.dossierId + '/dossierFiles'\n      $.ajax({\n        type: 'PUT',\n        url: url,\n        async: false,\n        dataType: 'json',\n        headers: {\n          'groupId': window.themeDisplay.getScopeGroupId() ? window.themeDisplay.getScopeGroupId() : '',\n          'Token': window.Liferay.authToken ? window.Liferay.authToken : ''\n        },\n        data: {\n          actionCode: paramObj['actionCode'],\n          actionUser: paramObj['actionUser'],\n          actionNote: paramObj['actionNote'],\n          assignUserId: paramObj['assignUserId'],\n          postStepCode: paramObj['postStepCode'],\n          subUsers: paramObj['subUsers'],\n          payload: paramObj['payload'] ? JSON.stringify(paramObj['payload']) : '',\n          assignUsers: paramObj['assignUsers'],\n          payment: paramObj['payment'] ? JSON.stringify(paramObj['payment']) : '',\n          userNote: paramObj['userNote'],\n          fileEntryId: strIdArr\n        },\n        success: function (result) {\n          vm.$store.commit('setKysoSuccess', true)\n          toastr.success('Thực hiện ký số thành công.')\n        },\n        error: function () {\n          toastr.error('Thực hiện ký số thất bại')\n        }\n      })\n    },\n    completeKyDuyetYCGiamDinh (sign, signFieldName, fileName, fileEntryId, paramObj, actionName) {\n      var vm = this\n      var url = '/o/rest/v2/defaultsignature/digitalSignature/' + vm.detailDossier.dossierId + '/dossierFile'\n      $.ajax({\n        type: 'PUT',\n        url: url,\n        async: false,\n        dataType: 'json',\n        headers: {\n          'groupId': window.themeDisplay.getScopeGroupId(),\n          'Token': window.Liferay ? window.Liferay.authToken : '',\n          'Cache-Control': 'no-cache'\n        },\n        data: {\n          actionCode: paramObj['actionCode'],\n          actionUser: paramObj['actionUser'],\n          actionNote: paramObj['actionNote'],\n          assignUserId: paramObj['assignUserId'],\n          postStepCode: paramObj['postStepCode'],\n          subUsers: paramObj['subUsers'],\n          sign: sign,\n          signFieldName: signFieldName,\n          fileName: fileName,\n          fileEntryId: fileEntryId\n        },\n        success: function (result) {\n          console.log(result)\n          var msg = result.msg\n          if (msg === 'success') {\n            toastr.success('Yêu cầu của bạn được thực hiện thành công.')\n          } else if (msg === 'fileEntryId') {\n            alert('Cảnh báo: Không tìm thấy file bản thảo. Tạm dừng tiến trình đóng dấu số')\n          } else {\n            alert(msg)\n          }\n        },\n        error: function () {\n          alert('ky so false')\n        }\n      })\n    }\n  }\n}\n</script>\n"]}]}