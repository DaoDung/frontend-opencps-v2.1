{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/form_xu_ly/ExtendDateEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/form_xu_ly/ExtendDateEdit.vue","mtime":1548065606787},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueCtkDateTimePicker from 'vue-ctk-date-time-picker'\nexport default {\n  components: {\n    'vue-ctk-date-time-picker': VueCtkDateTimePicker\n  },\n  props: ['extendDateEdit', 'type'],\n  data: () => ({\n    extendDateInput: '',\n    minDate: null,\n    delayNote: ''\n  }),\n  created () {\n    var vm = this\n    // vm.extendDateInput = vm.extendDateEdit ? vm.formatDateInput(vm.extendDateEdit) : vm.formatDateInput(new Date())\n    // vm.extendDateInput = vm.extendDateEdit ? (vm.parseCurrentDate(vm.extendDateEdit) + ' ' + vm.parseCurrentTime(vm.extendDateEdit)) : vm.formatDateInput(new Date())\n    // console.log('extendDateInput', vm.extendDateInput)\n  },\n  watch: {},\n  mounted () {\n    // this.extendDateInput = this.extendDateEdit ? this.formatDateInput(this.extendDateEdit) : this.formatDateInput(new Date())\n    this.extendDateInput = this.extendDateEdit ? this.parseCurrentDate(this.extendDateEdit) : this.formatDateInput(new Date())\n    console.log('extendDateInput', this.extendDateInput)\n    this.minDate = this.getCurentDateTime('date')\n  },\n  methods: {\n    doExport () {\n      let vm = this\n      let date = vm.extendDateInput ? (new Date(vm.extendDateInput)).getTime() : ''\n      var exportData\n      if (vm.type === 'overdue' || vm.type === 'preoverdue') {\n        exportData = {\n          text: vm.delayNote,\n          extendDate: date,\n          valid: vm.$refs.delayNoteForm.validate()\n        }\n      } else {\n        exportData = {\n          text: vm.delayNote,\n          extendDate: date,\n          valid: true\n        }\n      }\n      return exportData\n    },\n    // getDateInput () {\n    //   var vm = this\n    //   console.log('vm.extendDateInput', vm.extendDateInput)\n    //   let date = vm.extendDateInput ? (new Date(vm.extendDateInput)).getTime() : ''\n    //   return date\n    // },\n    getCurentDateTime (type) {\n      let date = new Date()\n      if (type === 'datetime') {\n        return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()} | ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n      } else if (type === 'date') {\n        return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n      }\n    },\n    formatDateInput (date) {\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n    },\n    showDatePicker () {\n      this.$refs.datepicker.showDatePicker()\n    },\n    parseCurrentDate (date) {\n      if (!date) {\n        return null\n      }\n      let [day1, time] = date.split(' ')\n      let [day2, month, year] = `${day1}`.split('/')\n      let [hh, mm, ss] = `${time}`.split(':')\n      return `${year}-${month.padStart(2, '0')}-${day2.padStart(2, '0')} ${hh}:${mm}`\n    }\n  }\n}\n",{"version":3,"sources":["ExtendDateEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ExtendDateEdit.vue","sourceRoot":"src/components/form_xu_ly","sourcesContent":["<template>  \n  <div style=\"background-color: white;width:100%\">\n    <v-expansion-panel :value=\"[true]\" v-if=\"type === 'overdue' || type === 'preoverdue'\" class=\"expansion-pl\">\n      <v-expansion-panel-content>\n        <div slot=\"header\"><div class=\"background-triangle-small\"> <v-icon size=\"18\" color=\"white\">star_rate</v-icon> </div>\n          <span>Lý do chậm hạn trả</span><span style=\"color:red\"> *</span>\n        </div>\n        <v-card>\n          <v-card-text class=\"py-2 px-2\">\n            <v-layout wrap>\n              <v-flex xs12>\n                <v-form v-model=\"valid\" ref=\"delayNoteForm\">\n                  <v-text-field\n                    v-model=\"delayNote\"\n                    multi-line\n                    :rows=\"3\"\n                    :rules=\"() => delayNote !== '' || 'Trường dữ liệu bắt buộc'\"\n                  ></v-text-field>\n                </v-form>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n    <v-expansion-panel :value=\"[true]\" class=\"expansion-pl\">\n      <v-expansion-panel-content>\n        <div slot=\"header\">\n          <div class=\"background-triangle-small\"> \n            <v-icon size=\"18\" color=\"white\">star_rate</v-icon> \n          </div>\n          <span v-if=\"type === 'overdue' || type === 'preoverdue'\">Ngày hẹn lại</span>\n          <span v-if=\"type === 'betimes'\">Ngày hẹn trả sớm</span>\n        </div>\n        <v-card >\n          <v-card-text>\n            <v-layout wrap class=\"pl-2\">\n              <v-icon color=\"blue\" class=\"hover-pointer ml-3\" @click=\"showDatePicker\">event</v-icon>\n              <vue-ctk-date-time-picker\n                ref=\"datepicker\" \n                style=\"width:auto!important\"\n                class=\"ml-2\"\n                v-model=\"extendDateInput\" \n                format=\"YYYY-MM-DDTHH:mm\"\n                time-format=\"HH:mm\"\n                :without-header=\"true\"\n                formatted=\"DD/MM/YYYY HH:mm\"\n                :label=\"extendDateInput ? '' : 'Chọn ngày'\"\n                :min-date=\"minDate\"\n              ></vue-ctk-date-time-picker>\n            </v-layout>\n          </v-card-text>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n    \n  </div>\n</template>\n<script>\nimport VueCtkDateTimePicker from 'vue-ctk-date-time-picker'\nexport default {\n  components: {\n    'vue-ctk-date-time-picker': VueCtkDateTimePicker\n  },\n  props: ['extendDateEdit', 'type'],\n  data: () => ({\n    extendDateInput: '',\n    minDate: null,\n    delayNote: ''\n  }),\n  created () {\n    var vm = this\n    // vm.extendDateInput = vm.extendDateEdit ? vm.formatDateInput(vm.extendDateEdit) : vm.formatDateInput(new Date())\n    // vm.extendDateInput = vm.extendDateEdit ? (vm.parseCurrentDate(vm.extendDateEdit) + ' ' + vm.parseCurrentTime(vm.extendDateEdit)) : vm.formatDateInput(new Date())\n    // console.log('extendDateInput', vm.extendDateInput)\n  },\n  watch: {},\n  mounted () {\n    // this.extendDateInput = this.extendDateEdit ? this.formatDateInput(this.extendDateEdit) : this.formatDateInput(new Date())\n    this.extendDateInput = this.extendDateEdit ? this.parseCurrentDate(this.extendDateEdit) : this.formatDateInput(new Date())\n    console.log('extendDateInput', this.extendDateInput)\n    this.minDate = this.getCurentDateTime('date')\n  },\n  methods: {\n    doExport () {\n      let vm = this\n      let date = vm.extendDateInput ? (new Date(vm.extendDateInput)).getTime() : ''\n      var exportData\n      if (vm.type === 'overdue' || vm.type === 'preoverdue') {\n        exportData = {\n          text: vm.delayNote,\n          extendDate: date,\n          valid: vm.$refs.delayNoteForm.validate()\n        }\n      } else {\n        exportData = {\n          text: vm.delayNote,\n          extendDate: date,\n          valid: true\n        }\n      }\n      return exportData\n    },\n    // getDateInput () {\n    //   var vm = this\n    //   console.log('vm.extendDateInput', vm.extendDateInput)\n    //   let date = vm.extendDateInput ? (new Date(vm.extendDateInput)).getTime() : ''\n    //   return date\n    // },\n    getCurentDateTime (type) {\n      let date = new Date()\n      if (type === 'datetime') {\n        return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()} | ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n      } else if (type === 'date') {\n        return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}`\n      }\n    },\n    formatDateInput (date) {\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n    },\n    showDatePicker () {\n      this.$refs.datepicker.showDatePicker()\n    },\n    parseCurrentDate (date) {\n      if (!date) {\n        return null\n      }\n      let [day1, time] = date.split(' ')\n      let [day2, month, year] = `${day1}`.split('/')\n      let [hh, mm, ss] = `${time}`.split(':')\n      return `${year}-${month.padStart(2, '0')}-${day2.padStart(2, '0')} ${hh}:${mm}`\n    }\n  }\n}\n</script>\n"]}]}