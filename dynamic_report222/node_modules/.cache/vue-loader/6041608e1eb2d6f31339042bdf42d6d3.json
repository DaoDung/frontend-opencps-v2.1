{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/DanhSachThuTuc.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/DanhSachThuTuc.vue","mtime":1548058113284},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  props: ['serviceCode'],\n  data: () => ({\n    govAgencies: [],\n    serviceOptions: [],\n    serviceConfigSelect: '',\n    serviceInfoIdSelect: '',\n    serviceOptionsProcess: [],\n    selectOption: false,\n    govAgencyCodeSelect: '',\n    loadingMutiple: true\n  }),\n  computed: {\n    currentIndex () {\n      return this.$store.getters.index\n    }\n  },\n  created () {\n    var vm = this\n    console.log('create------')\n    vm.$store.dispatch('loadServiceConfigsGov', {}).then(result => {\n      vm.govAgencies = result\n      if (String(vm.serviceCode) !== '0') {\n        for (let key in vm.govAgencies) {\n          let govAgencyCode = vm.govAgencies[key].govAgencyCode\n          for (let keyDomain in vm.govAgencies[key].domains) {\n            for (let keyConfig in vm.govAgencies[key].domains[keyDomain].serviceConfigs) {\n              let serviceConfig = vm.govAgencies[key].domains[keyDomain].serviceConfigs[keyConfig]\n              let serviceConfigId = serviceConfig.serviceConfigId\n              if (String(vm.serviceCode) === String(serviceConfigId)) {\n                vm.govAgencyCodeSelect = govAgencyCode\n                vm.serviceInfoIdSelect = serviceConfig.serviceInfoId\n                vm.pullServiceOptions(serviceConfig, govAgencyCode)\n                break\n              }\n            }\n          }\n        }\n      }\n    })\n  },\n  updated () {\n  },\n  watch: {\n  },\n  methods: {\n    pullServiceOptions (item, govAgencyCode) {\n      console.log('govAgencyCode++++++++++', govAgencyCode)\n      var vm = this\n      vm.serviceConfigSelect = item\n      vm.govAgencyCodeSelect = govAgencyCode\n      vm.serviceInfoIdSelect = item.serviceInfoId\n      vm.$store.dispatch('getServiceOpionByProcess', item).then(result => {\n        if (result.length === 1) {\n          vm.selectOption = false\n          vm.$store.dispatch('getServiceInfo', {\n            serviceInfoId: item.serviceInfoId\n          }).then(resServiceInfo => {\n            console.log('resServiceInfo+++++++++++', resServiceInfo)\n            let data = {\n              serviceCode: resServiceInfo.serviceCode,\n              govAgencyCode: govAgencyCode,\n              templateNo: result[0].templateNo,\n              originality: vm.getOriginality()\n            }\n            vm.$store.dispatch('postDossier', data).then(function (result) {\n              vm.loadingAction = false\n              vm.indexAction = -1\n              vm.$router.push({\n                path: '/danh-sach-ho-so/' + 0 + '/ho-so/' + result.dossierId + '/NEW',\n                query: vm.$router.history.current.query\n              })\n            })\n          })\n        } else {\n          vm.serviceOptions = result\n          vm.serviceOptionsProcess = result\n          vm.selectOption = true\n        }\n      })\n    },\n    selectServiceOption (item, govAgencyCode, itemServiceConfig) {\n      var vm = this\n      vm.serviceConfigSelect = itemServiceConfig\n      vm.govAgencyCodeSelect = govAgencyCode\n      vm.serviceInfoIdSelect = itemServiceConfig.serviceInfoId\n      vm.loadingMutiple = true\n      console.log('govAgencyCode+++++++++++', govAgencyCode)\n      vm.$store.dispatch('getServiceInfo', {\n        serviceInfoId: vm.serviceConfigSelect.serviceInfoId\n      }).then(resServiceInfo => {\n        console.log('resServiceInfo+++++++++++', resServiceInfo)\n        let data = {\n          serviceCode: resServiceInfo.serviceCode,\n          govAgencyCode: govAgencyCode,\n          templateNo: item.templateNo,\n          originality: vm.getOriginality()\n        }\n        vm.$store.dispatch('postDossier', data).then(function (result) {\n          vm.loadingAction = false\n          vm.indexAction = -1\n          vm.$router.push({\n            path: '/danh-sach-ho-so/' + 0 + '/ho-so/' + result.dossierId + '/NEW',\n            query: vm.$router.history.current.query\n          })\n        })\n      })\n    },\n    selectServiceOptionCRD (item, govAgencyCode) {\n      var vm = this\n      console.log('govAgencyCode+++++++++++', govAgencyCode)\n      vm.$store.dispatch('getServiceInfo', {\n        serviceInfoId: vm.serviceInfoIdSelect\n      }).then(resServiceInfo => {\n        console.log('resServiceInfo+++++++++++', resServiceInfo)\n        let data = {\n          serviceCode: resServiceInfo.serviceCode,\n          govAgencyCode: govAgencyCode,\n          templateNo: item.templateNo,\n          originality: vm.getOriginality()\n        }\n        vm.$store.dispatch('postDossier', data).then(function (result) {\n          vm.loadingAction = false\n          vm.indexAction = -1\n          vm.$router.push({\n            path: '/danh-sach-ho-so/' + 0 + '/ho-so/' + result.dossierId + '/NEW',\n            query: vm.$router.history.current.query\n          })\n        })\n      })\n    },\n    getColor (level) {\n      if (level === 2) {\n        return 'green'\n      } else if (level === 3) {\n        return 'orange'\n      } else if (level === 4) {\n        return 'red'\n      }\n    },\n    // goBack () {\n    //   let vm = this\n    //   let currentParams = vm.$router.history.current.params\n    //   let currentQuery = vm.$router.history.current.query\n    //   vm.$router.push({\n    //     path: '/add-dvc/0'\n    //   })\n    // },\n    goBack () {\n      window.history.back()\n    }\n  }\n}\n",{"version":3,"sources":["DanhSachThuTuc.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"DanhSachThuTuc.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <div class=\"text-center mt-4\" v-if=\"String(serviceCode) !== '0' && !selectOption\">\n      <v-progress-circular\n        :size=\"100\"\n        :width=\"1\"\n        color=\"primary\"\n        indeterminate\n      ></v-progress-circular>\n      <p class=\"mt-4\">đang tạo hồ sơ ...</p>\n    </div>\n    <v-expansion-panel :value=\"[true]\" v-if=\"String(serviceCode) === '0' && !selectOption\" expand class=\"expand__select__gov\">\n      <v-expansion-panel-content v-for='(itemGov, index) in govAgencies' :key='index'>\n        <div slot='header' class=\"ml-3\">\n          <v-icon style=\"\n            font-size: 14px;\n            margin-top: -4px;\n            padding-right: 5px;\n          \">account_balance</v-icon>\n          {{itemGov.govAgencyName}}\n        </div>\n        <v-card>\n          <v-card-text class='grey lighten-3 px-0 py-0'>\n            <!-- Cap 2 -->\n            <v-expansion-panel :value=\"[true]\" expand class=\"expand__select__domain\">\n              <v-expansion-panel-content v-for='(itemDomain, index2) in itemGov.domains' :key='index2' v-if='itemGov.domains' :value=\"true\">\n                <div slot='header' style=\"margin-left: 14px;\">\n                   <v-icon class=\"pr-2 theme--dark\">navigate_next</v-icon> \n                   <span style=\"position: absolute;margin-top: 1px;\">{{itemDomain.domainName}}</span>\n                </div>\n                <v-card>\n                  <v-card-text class=\"card__text__gov\" v-for='(itemServiceConfig, index3) in itemDomain.serviceConfigs' v-if='itemDomain.serviceConfigs' :key='index3'>\n                    <!-- Cap 3 -->\n                    <v-layout row wrap>\n                      <v-flex xs12 sm9 class=\"pt-1\">\n                        <span style=\"font-weight: bold\">{{index3 + 1}}.</span> &nbsp;\n                        <span>{{itemServiceConfig.serviceInfoName}}</span>\n                      </v-flex>\n                      <v-flex xs12 sm1 class=\"text-xs-center pt-1\">\n                        <span>Mức {{itemServiceConfig.level}}</span>\n                      </v-flex>\n                      <v-flex xs12 sm2 class=\"text-xs-center\">\n                        <v-menu left>\n                        <v-btn flat class=\"mx-0 my-0\" slot=\"activator\" small @click=\"pullServiceOptions(itemServiceConfig, itemGov.govAgencyCode)\">\n                            Chọn\n                          </v-btn>\n                          <v-list v-if=\"serviceOptions.length > 1\">\n                            <v-list-tile v-for=\"(itemOption, i) in serviceOptions\" :key=\"i\" \n                            @click=\"selectServiceOption(itemOption, itemGov.govAgencyCode, itemServiceConfig)\">\n                            <v-list-tile-title>{{ itemOption.optionName }}</v-list-tile-title>\n                          </v-list-tile>\n                        </v-list>\n                      </v-menu>\n                      </v-flex>\n                    </v-layout>\n                  </v-card-text>\n                </v-card>\n              </v-expansion-panel-content>\n            </v-expansion-panel>\n          </v-card-text>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n    <!-- Chọn processOption -->\n    <div v-if=\"selectOption\">\n      <div class=\"row-header\">\n        <div class=\"background-triangle-big\"> <span>THÊM MỚI HỒ SƠ</span> </div>\n        <!-- <div class=\"flex xs8 sm10 pl-3 text-ellipsis text-bold\" :title=\"serviceOptionsProcess[0].serviceName\">\n          {{thongTinChiTietHoSo.serviceName}}\n        </div> -->\n        <div class=\"layout row wrap header_tools row-blue\">\n          <div class=\"flex xs4 sm2 text-right\" style=\"margin-left: auto;\">\n            <v-btn flat class=\"my-0 mx-0 btn-border-left\" @click=\"goBack\" active-class=\"temp_active\">\n              Quay lại &nbsp;\n              <v-icon size=\"16\">undo</v-icon>\n            </v-btn>\n          </div>\n        </div> \n      </div>\n      <v-list class=\"py-0\">\n        <template v-for=\"(item, index) in serviceOptionsProcess\" >\n          <v-list-tile class=\"px-2 py-1\" :key=\"index\" style=\"border-bottom: 1px solid #dede;\">\n            <v-list-tile-content>\n              <v-list-tile-title v-html=\"item.optionName\"></v-list-tile-title>\n            </v-list-tile-content>\n            <v-list-tile-action>\n              <v-btn color=\"primary\" @click=\"selectServiceOptionCRD(item, govAgencyCodeSelect)\">\n                Chọn\n              </v-btn>\n            </v-list-tile-action>\n          </v-list-tile>\n        </template>\n      </v-list>\n    </div>\n  </div>\n</template>\n\n<script>\n  \n  export default {\n    props: ['serviceCode'],\n    data: () => ({\n      govAgencies: [],\n      serviceOptions: [],\n      serviceConfigSelect: '',\n      serviceInfoIdSelect: '',\n      serviceOptionsProcess: [],\n      selectOption: false,\n      govAgencyCodeSelect: '',\n      loadingMutiple: true\n    }),\n    computed: {\n      currentIndex () {\n        return this.$store.getters.index\n      }\n    },\n    created () {\n      var vm = this\n      console.log('create------')\n      vm.$store.dispatch('loadServiceConfigsGov', {}).then(result => {\n        vm.govAgencies = result\n        if (String(vm.serviceCode) !== '0') {\n          for (let key in vm.govAgencies) {\n            let govAgencyCode = vm.govAgencies[key].govAgencyCode\n            for (let keyDomain in vm.govAgencies[key].domains) {\n              for (let keyConfig in vm.govAgencies[key].domains[keyDomain].serviceConfigs) {\n                let serviceConfig = vm.govAgencies[key].domains[keyDomain].serviceConfigs[keyConfig]\n                let serviceConfigId = serviceConfig.serviceConfigId\n                if (String(vm.serviceCode) === String(serviceConfigId)) {\n                  vm.govAgencyCodeSelect = govAgencyCode\n                  vm.serviceInfoIdSelect = serviceConfig.serviceInfoId\n                  vm.pullServiceOptions(serviceConfig, govAgencyCode)\n                  break\n                }\n              }\n            }\n          }\n        }\n      })\n    },\n    updated () {\n    },\n    watch: {\n    },\n    methods: {\n      pullServiceOptions (item, govAgencyCode) {\n        console.log('govAgencyCode++++++++++', govAgencyCode)\n        var vm = this\n        vm.serviceConfigSelect = item\n        vm.govAgencyCodeSelect = govAgencyCode\n        vm.serviceInfoIdSelect = item.serviceInfoId\n        vm.$store.dispatch('getServiceOpionByProcess', item).then(result => {\n          if (result.length === 1) {\n            vm.selectOption = false\n            vm.$store.dispatch('getServiceInfo', {\n              serviceInfoId: item.serviceInfoId\n            }).then(resServiceInfo => {\n              console.log('resServiceInfo+++++++++++', resServiceInfo)\n              let data = {\n                serviceCode: resServiceInfo.serviceCode,\n                govAgencyCode: govAgencyCode,\n                templateNo: result[0].templateNo,\n                originality: vm.getOriginality()\n              }\n              vm.$store.dispatch('postDossier', data).then(function (result) {\n                vm.loadingAction = false\n                vm.indexAction = -1\n                vm.$router.push({\n                  path: '/danh-sach-ho-so/' + 0 + '/ho-so/' + result.dossierId + '/NEW',\n                  query: vm.$router.history.current.query\n                })\n              })\n            })\n          } else {\n            vm.serviceOptions = result\n            vm.serviceOptionsProcess = result\n            vm.selectOption = true\n          }\n        })\n      },\n      selectServiceOption (item, govAgencyCode, itemServiceConfig) {\n        var vm = this\n        vm.serviceConfigSelect = itemServiceConfig\n        vm.govAgencyCodeSelect = govAgencyCode\n        vm.serviceInfoIdSelect = itemServiceConfig.serviceInfoId\n        vm.loadingMutiple = true\n        console.log('govAgencyCode+++++++++++', govAgencyCode)\n        vm.$store.dispatch('getServiceInfo', {\n          serviceInfoId: vm.serviceConfigSelect.serviceInfoId\n        }).then(resServiceInfo => {\n          console.log('resServiceInfo+++++++++++', resServiceInfo)\n          let data = {\n            serviceCode: resServiceInfo.serviceCode,\n            govAgencyCode: govAgencyCode,\n            templateNo: item.templateNo,\n            originality: vm.getOriginality()\n          }\n          vm.$store.dispatch('postDossier', data).then(function (result) {\n            vm.loadingAction = false\n            vm.indexAction = -1\n            vm.$router.push({\n              path: '/danh-sach-ho-so/' + 0 + '/ho-so/' + result.dossierId + '/NEW',\n              query: vm.$router.history.current.query\n            })\n          })\n        })\n      },\n      selectServiceOptionCRD (item, govAgencyCode) {\n        var vm = this\n        console.log('govAgencyCode+++++++++++', govAgencyCode)\n        vm.$store.dispatch('getServiceInfo', {\n          serviceInfoId: vm.serviceInfoIdSelect\n        }).then(resServiceInfo => {\n          console.log('resServiceInfo+++++++++++', resServiceInfo)\n          let data = {\n            serviceCode: resServiceInfo.serviceCode,\n            govAgencyCode: govAgencyCode,\n            templateNo: item.templateNo,\n            originality: vm.getOriginality()\n          }\n          vm.$store.dispatch('postDossier', data).then(function (result) {\n            vm.loadingAction = false\n            vm.indexAction = -1\n            vm.$router.push({\n              path: '/danh-sach-ho-so/' + 0 + '/ho-so/' + result.dossierId + '/NEW',\n              query: vm.$router.history.current.query\n            })\n          })\n        })\n      },\n      getColor (level) {\n        if (level === 2) {\n          return 'green'\n        } else if (level === 3) {\n          return 'orange'\n        } else if (level === 4) {\n          return 'red'\n        }\n      },\n      // goBack () {\n      //   let vm = this\n      //   let currentParams = vm.$router.history.current.params\n      //   let currentQuery = vm.$router.history.current.query\n      //   vm.$router.push({\n      //     path: '/add-dvc/0'\n      //   })\n      // },\n      goBack () {\n        window.history.back()\n      }\n    }\n  }\n</script>\n"]}]}