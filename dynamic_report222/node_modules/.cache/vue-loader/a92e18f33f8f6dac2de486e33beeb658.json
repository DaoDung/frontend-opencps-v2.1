{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/TiepNhan/TiepNhanHoSo_ThongTinChung.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/TiepNhan/TiepNhanHoSo_ThongTinChung.vue","mtime":1548065607135},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// \nimport VueCtkDateTimePicker from 'vue-ctk-date-time-picker'\nexport default {\n  components: {\n    'vue-ctk-date-time-picker': VueCtkDateTimePicker\n  },\n  data: () => ({\n    minDate: null,\n    editable: false,\n    dueDateInput: null,\n    dataPostDossier: {\n      serviceCode: '',\n      govAgencyCode: '',\n      processOptionId: ''\n    },\n    thongTinChungHoSo: {\n      serviceName: '',\n      dossierTemplateName: '',\n      serviceConfig: '',\n      serviceOption: '',\n      dossierNo: '',\n      receiveDate: '',\n      dueDate: '',\n      durationDate: '',\n      dossierId: '',\n      dossierIdCTN: '',\n      dossierStatus: '',\n      dossierStatusText: '',\n      durationUnit: '',\n      durationCount: ''\n    }\n  }),\n  created () {\n    var vm = this\n    vm.$nextTick(function () {\n      vm.minDate = vm.getCurentDateTime('date')\n    })\n  },\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    },\n    isDetail () {\n      return this.$store.getters.isDetail\n    }\n  },\n  watch: {\n    dueDateInput (val) {\n      this.thongTinChungHoSo['dueDate'] = this.getDuedateF(val)\n    }\n  },\n  methods: {\n    initData (data) {\n      var vm = this\n      let thongTinChungHoSoTemp = {\n        serviceName: data.serviceName,\n        dossierTemplateName: data.dossierTemplateName,\n        dossierNo: data.dossierNo ? data.dossierNo : '',\n        dueDate: null,\n        receiveDate: data.receivingDate ? vm.dateTimeView(data.receivingDate) : data.receiveDate,\n        durationDate: data.durationDate,\n        dossierId: data.dossierId,\n        dossierIdCTN: data.dossierIdCTN,\n        dossierStatus: data.dossierStatus,\n        dossierStatusText: data.dossierStatusText,\n        durationUnit: data.durationUnit,\n        durationCount: data.durationCount\n      }\n      if (data.receivingDuedate && data.editable) {\n        thongTinChungHoSoTemp.dueDate = data.receivingDuedate\n      } else if (data.receivingDuedate && !data.editable) {\n        thongTinChungHoSoTemp.dueDate = data.receivingDuedate ? vm.dateTimeView(data.receivingDuedate) : data.dueDate\n      } else {\n        thongTinChungHoSoTemp.dueDate = data.dueDate\n      }\n      vm.thongTinChungHoSo = thongTinChungHoSoTemp\n      vm.editable = data.editable\n      vm.thongTinChungHoSo['editable'] = vm.editable\n      if (vm.editable) {\n        vm.dueDateInput = vm.thongTinChungHoSo.dueDate ? vm.formatDateInput(new Date(Number(vm.thongTinChungHoSo.dueDate))) : null\n      }\n      vm.minDate = vm.getCurentDateTime('date')\n    },\n    getthongtinchunghoso () {\n      return this.thongTinChungHoSo\n    },\n    getCurentDateTime (type) {\n      let date = new Date()\n      if (type === 'datetime') {\n        return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()} | ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n      } else if (type === 'date') {\n        return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate()}`\n      }\n    },\n    changeDate () {\n      this.thongTinChungHoSo['dueDate'] = this.getDuedate()\n      // console.log('dueDate', this.thongTinChungHoSo.dueDate)\n    },\n    changeDossierNo (val) {\n      this.thongTinChungHoSo['dossierNo'] = val\n    },\n    getDuedate () {\n      var vm = this\n      let date = this.dueDateInput ? (new Date(this.dueDateInput)).getTime() : ''\n      return date\n    },\n    getDuedateF (val) {\n      var vm = this\n      let date = (new Date(val)).getTime()\n      return date\n    },\n    durationText (durationUnit, durationCount) {\n      var durationText\n      if (durationUnit === 1 && durationCount > 8) {\n        let day = Math.floor(durationCount / 8) + ' ngày'\n        let hours\n        if (durationCount % 8 !== 0) {\n          hours = ((durationCount / 8) - Math.floor(durationCount / 8)) * 8 + ' giờ'\n        } else {\n          hours = ''\n        }\n        durationText = `${day} ${hours}`\n      } else if (durationUnit === 0) {\n        durationText = durationCount + ' ngày'\n      } else if (durationUnit === 1 && durationCount <= 8) {\n        durationText = durationCount + ' giờ'\n      }\n      return durationText\n    },\n    goBack () {\n      let vm = this\n      let currentParams = vm.$router.history.current.params\n      let currentQuery = vm.$router.history.current.query\n      vm.$router.push({\n        path: '/danh-sach-ho-so/' + currentParams.index,\n        query: currentQuery\n      })\n    },\n    dateTimeView (arg) {\n      if (arg) {\n        let value = new Date(arg)\n        return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()} ${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}`\n      }\n    },\n    formatDateInput (date) {\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n    },\n    showDatePicker () {\n      this.$refs.datepicker.showDatePicker()\n    }\n  },\n  filters: {\n    dateTimeView (arg) {\n      if (arg) {\n        let value = new Date(arg)\n        return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()} ${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}`\n      } else {\n        return ''\n      }\n    }\n  }\n}\n",{"version":3,"sources":["TiepNhanHoSo_ThongTinChung.vue"],"names":[],"mappingsfile":"TiepNhanHoSo_ThongTinChung.vue","sourceRoot":"src/components/TiepNhan","sourcesContent":["<template>\n  <div>\n    <v-card>\n      <v-card-text>\n        <v-layout wrap>\n          <!--  -->\n          <v-flex xs12 sm2>\n            <content-placeholders class=\"mt-1\" v-if=\"loading\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-subheader v-else class=\"pl-0\" >\n              Mã hồ sơ: \n            </v-subheader>\n          </v-flex>\n          <v-flex xs12 sm4>\n            <content-placeholders class=\"mt-1\" v-if=\"loading\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-subheader class=\"text-bold\" v-else style=\"float:left\">\n              <span class=\"text-bold\">\n                {{thongTinChungHoSo.dossierNo}}\n              </span>\n            </v-subheader>\n          </v-flex>\n          <v-flex xs12 sm2>\n            <content-placeholders class=\"mt-1\" v-if=\"loading\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-subheader v-else class=\"pl-0\">Thời gian giải quyết: </v-subheader>\n          </v-flex>\n          <v-flex xs12 sm4>\n            <content-placeholders class=\"mt-1\" v-if=\"loading\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-subheader v-if=\"!loading\" style=\"float:left\">\n              <span class=\"text-bold\">\n                {{durationText(thongTinChungHoSo.durationUnit, thongTinChungHoSo.durationCount)}} làm việc\n              </span>\n            </v-subheader>\n          </v-flex>\n          <v-flex xs12></v-flex>\n          <!--  -->\n          <v-flex xs12 sm2>\n            <content-placeholders class=\"mt-1\" v-if=\"loading\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-subheader v-else class=\"pl-0\">Ngày tiếp nhận: </v-subheader>\n          </v-flex>\n          <v-flex xs12 sm4>\n            <content-placeholders class=\"mt-1\" v-if=\"loading\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-subheader v-else style=\"float:left\"><span class=\"text-bold\">{{thongTinChungHoSo.receiveDate}}</span></v-subheader>\n          </v-flex>\n          <v-flex xs12 sm2>\n            <content-placeholders class=\"mt-1\" v-if=\"loading\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-subheader v-else class=\"pl-0\">Ngày hẹn trả: </v-subheader>\n          </v-flex>\n          <v-flex xs12 sm4>\n            <content-placeholders class=\"mt-1\" v-if=\"loading\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-subheader v-if=\"!loading&&(editable === false || editable === null || editable === undefined || editable === 'undefined')\" style=\"float:left;height: 100%\">\n              <span class=\"text-bold\">\n                {{thongTinChungHoSo.dueDate}}\n              </span>\n            </v-subheader>\n            <v-subheader v-if=\"!loading&&editable === true\" style=\"float:left;height: 100%\">\n              <vue-ctk-date-time-picker \n                ref=\"datepicker\" \n                v-model=\"dueDateInput\" \n                format=\"YYYY-MM-DDTHH:mm\"\n                formatted=\"DD/MM/YYYY HH:mm\"\n                time-format=\"HH:mm\"\n                :without-header=\"true\"\n                :label=\"dueDateInput ? '' : 'Chọn ngày'\"\n                :min-date=\"minDate\"\n              ></vue-ctk-date-time-picker>\n              <v-icon class=\"hover-pointer\" @click=\"showDatePicker\">event</v-icon>\n            </v-subheader>\n          </v-flex>\n        </v-layout>\n      </v-card-text>\n    </v-card>\n  </div>\n</template>\n\n<script>\n  // \n  import VueCtkDateTimePicker from 'vue-ctk-date-time-picker'\n  export default {\n    components: {\n      'vue-ctk-date-time-picker': VueCtkDateTimePicker\n    },\n    data: () => ({\n      minDate: null,\n      editable: false,\n      dueDateInput: null,\n      dataPostDossier: {\n        serviceCode: '',\n        govAgencyCode: '',\n        processOptionId: ''\n      },\n      thongTinChungHoSo: {\n        serviceName: '',\n        dossierTemplateName: '',\n        serviceConfig: '',\n        serviceOption: '',\n        dossierNo: '',\n        receiveDate: '',\n        dueDate: '',\n        durationDate: '',\n        dossierId: '',\n        dossierIdCTN: '',\n        dossierStatus: '',\n        dossierStatusText: '',\n        durationUnit: '',\n        durationCount: ''\n      }\n    }),\n    created () {\n      var vm = this\n      vm.$nextTick(function () {\n        vm.minDate = vm.getCurentDateTime('date')\n      })\n    },\n    computed: {\n      loading () {\n        return this.$store.getters.loading\n      },\n      isDetail () {\n        return this.$store.getters.isDetail\n      }\n    },\n    watch: {\n      dueDateInput (val) {\n        this.thongTinChungHoSo['dueDate'] = this.getDuedateF(val)\n      }\n    },\n    methods: {\n      initData (data) {\n        var vm = this\n        let thongTinChungHoSoTemp = {\n          serviceName: data.serviceName,\n          dossierTemplateName: data.dossierTemplateName,\n          dossierNo: data.dossierNo ? data.dossierNo : '',\n          dueDate: null,\n          receiveDate: data.receivingDate ? vm.dateTimeView(data.receivingDate) : data.receiveDate,\n          durationDate: data.durationDate,\n          dossierId: data.dossierId,\n          dossierIdCTN: data.dossierIdCTN,\n          dossierStatus: data.dossierStatus,\n          dossierStatusText: data.dossierStatusText,\n          durationUnit: data.durationUnit,\n          durationCount: data.durationCount\n        }\n        if (data.receivingDuedate && data.editable) {\n          thongTinChungHoSoTemp.dueDate = data.receivingDuedate\n        } else if (data.receivingDuedate && !data.editable) {\n          thongTinChungHoSoTemp.dueDate = data.receivingDuedate ? vm.dateTimeView(data.receivingDuedate) : data.dueDate\n        } else {\n          thongTinChungHoSoTemp.dueDate = data.dueDate\n        }\n        vm.thongTinChungHoSo = thongTinChungHoSoTemp\n        vm.editable = data.editable\n        vm.thongTinChungHoSo['editable'] = vm.editable\n        if (vm.editable) {\n          vm.dueDateInput = vm.thongTinChungHoSo.dueDate ? vm.formatDateInput(new Date(Number(vm.thongTinChungHoSo.dueDate))) : null\n        }\n        vm.minDate = vm.getCurentDateTime('date')\n      },\n      getthongtinchunghoso () {\n        return this.thongTinChungHoSo\n      },\n      getCurentDateTime (type) {\n        let date = new Date()\n        if (type === 'datetime') {\n          return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()} | ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n        } else if (type === 'date') {\n          return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate()}`\n        }\n      },\n      changeDate () {\n        this.thongTinChungHoSo['dueDate'] = this.getDuedate()\n        // console.log('dueDate', this.thongTinChungHoSo.dueDate)\n      },\n      changeDossierNo (val) {\n        this.thongTinChungHoSo['dossierNo'] = val\n      },\n      getDuedate () {\n        var vm = this\n        let date = this.dueDateInput ? (new Date(this.dueDateInput)).getTime() : ''\n        return date\n      },\n      getDuedateF (val) {\n        var vm = this\n        let date = (new Date(val)).getTime()\n        return date\n      },\n      durationText (durationUnit, durationCount) {\n        var durationText\n        if (durationUnit === 1 && durationCount > 8) {\n          let day = Math.floor(durationCount / 8) + ' ngày'\n          let hours\n          if (durationCount % 8 !== 0) {\n            hours = ((durationCount / 8) - Math.floor(durationCount / 8)) * 8 + ' giờ'\n          } else {\n            hours = ''\n          }\n          durationText = `${day} ${hours}`\n        } else if (durationUnit === 0) {\n          durationText = durationCount + ' ngày'\n        } else if (durationUnit === 1 && durationCount <= 8) {\n          durationText = durationCount + ' giờ'\n        }\n        return durationText\n      },\n      goBack () {\n        let vm = this\n        let currentParams = vm.$router.history.current.params\n        let currentQuery = vm.$router.history.current.query\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + currentParams.index,\n          query: currentQuery\n        })\n      },\n      dateTimeView (arg) {\n        if (arg) {\n          let value = new Date(arg)\n          return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()} ${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}`\n        }\n      },\n      formatDateInput (date) {\n        return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n      },\n      showDatePicker () {\n        this.$refs.datepicker.showDatePicker()\n      }\n    },\n    filters: {\n      dateTimeView (arg) {\n        if (arg) {\n          let value = new Date(arg)\n          return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()} ${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}`\n        } else {\n          return ''\n        }\n      }\n    }\n  }\n</script>\n"]}]}