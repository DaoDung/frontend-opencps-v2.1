{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/pagging/hanghai_pagination.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/pagging/hanghai_pagination.vue","mtime":1548058113332},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst COMPONENT_NAME = 'TinyPagination'\nimport { isMobile } from 'mobile-device-detect'\nexport default {\n  name: COMPONENT_NAME,\n  props: {\n    total: {\n      type: Number,\n      required: true\n    },\n    page: {\n      type: Number,\n      default: 1\n    },\n    lang: {\n      type: String,\n      default: 'en'\n    },\n    customClass: {\n      type: String\n    },\n    limits: {\n      type: Array,\n      default () {\n        return [10, 15, 20, 50, 100]\n      }\n    },\n    showLimit: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      version: '0.2.1',\n      currentPage: 1,\n      currentLimit: 15,\n      translations: {\n        en: {\n          prev: 'Previous',\n          title: 'Page',\n          next: 'Next'\n        }\n      },\n      availableLanguages: ['en']\n    }\n  },\n  created () {\n    this.currentPage = this.page\n  },\n  watch: {\n    page (val) {\n      this.currentPage = parseInt(val)\n    }\n  },\n  computed: {\n    translation () {\n      return this.availableLanguages.includes(this.lang)\n        ? this.translations[this.lang]\n        : this.translations['en']\n    },\n    totalPages () {\n      return Math.ceil(this.total / this.currentLimit)\n    },\n    totalPagesData () {\n      var totalDatas = []\n      var data = {}\n      for (var index = 1; index <= this.totalPages; ++index) {\n        data = {\n          value: index,\n          text: 'Trang ' + index\n        }\n        totalDatas.push(data)\n      }\n      return totalDatas\n    },\n    titlePage () {\n      return `${this.currentPage}`\n    },\n    classFirstPage () {\n      return {\n        'c-not-allowed pagination__navigation--disabled': this.currentPage === 1\n      }\n    },\n    classLastPage () {\n      return {\n        'c-not-allowed pagination__navigation--disabled': this.currentPage === this.totalPages\n      }\n    },\n    viewMobile () {\n      return isMobile\n    }\n  },\n  methods: {\n    nextPage () {\n      if (this.currentPage !== this.totalPages) {\n        this.currentPage += 1\n        this.$emit('tiny:change-page', {\n          page: this.currentPage\n        })\n      }\n    },\n    lastPage () {\n      if (this.currentPage > 1) {\n        this.currentPage -= 1\n        this.$emit('tiny:change-page', {\n          page: this.currentPage\n        })\n      }\n    },\n    nextPageLast () {\n      this.currentPage = this.totalPages\n      this.$emit('tiny:change-page', {\n        page: this.totalPages\n      })\n    },\n    lastPageLast () {\n      this.currentPage = 1\n      this.$emit('tiny:change-page', {\n        page: 1\n      })\n    },\n    goToPage () {\n      this.$emit('tiny:change-page', {\n        page: this.currentPage\n      })\n    },\n    onLimitChange () {\n      this.currentPage = 1\n    }\n  }\n}\n",{"version":3,"sources":["hanghai_pagination.vue"],"names":[],"mappingsfile":"hanghai_pagination.vue","sourceRoot":"src/components/pagging","sourcesContent":["<template>\n  <div>\n    <div :style=\"!viewMobile ? 'text-align: left;position: absolute;line-height: 46px;' : ''\">Tổng số <span class=\"text-bold primary--text\">{{total}}</span> hồ sơ. </div>\n    <div v-if=\"total > 0\" class=\"vue-tiny-pagination pagination layout\" :style=\"!viewMobile ? 'justify-content: flex-end; -webkit-justify-content: flex-end;' : ''\">\n      <div class=\"pr-3 xs4 sm2 flex\">\n        <v-autocomplete\n          v-bind:items=\"totalPagesData\"\n          v-model=\"currentPage\"\n          item-text=\"text\"\n          item-value=\"value\"\n          @input=\"goToPage\"\n        ></v-autocomplete>\n      </div>\n      <ul class=\"tiny-pagination\" :class=\"customClass\">\n        <li class=\"page-item\" :class=\"classFirstPage\">\n          <button @click.prevent=\"lastPageLast\" :class=\"classFirstPage\" class=\"pagination__navigation\">\n            <i aria-hidden=\"true\" class=\"material-icons icon\">first_page</i>\n          </button>\n        </li>\n        <li class=\"page-item\" :class=\"classFirstPage\">\n          <button @click.prevent=\"lastPage\" :class=\"classFirstPage\" class=\"pagination__navigation\" style=\"border-left: 0;\">\n            <i aria-hidden=\"true\" class=\"material-icons icon\">chevron_left</i>\n          </button>\n        </li>\n        <li class=\"page-item\" style=\"margin-right: 0;\">\n          <button class=\"pagination__navigation pagination__navigation--disabled text-bold primary--text\" style=\"border-right: 0; border-left: 0;\">\n            {{titlePage}}\n          </button>\n        </li>\n        <li class=\"page-item\" :class=\"classLastPage\" style=\"margin-right: 0;\">\n          <button @click.prevent=\"nextPage\" :class=\"classLastPage\" class=\"pagination__navigation\" style=\"border-left: 0;\">\n            <i aria-hidden=\"true\" class=\"material-icons icon\">chevron_right</i>\n          </button>\n        </li>\n        <li class=\"page-item\" :class=\"classLastPage\">\n          <button @click.prevent=\"nextPageLast\" :class=\"classLastPage\" class=\"pagination__navigation\">\n            <i aria-hidden=\"true\" class=\"material-icons icon\">last_page</i>\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nconst COMPONENT_NAME = 'TinyPagination'\nimport { isMobile } from 'mobile-device-detect'\nexport default {\n  name: COMPONENT_NAME,\n  props: {\n    total: {\n      type: Number,\n      required: true\n    },\n    page: {\n      type: Number,\n      default: 1\n    },\n    lang: {\n      type: String,\n      default: 'en'\n    },\n    customClass: {\n      type: String\n    },\n    limits: {\n      type: Array,\n      default () {\n        return [10, 15, 20, 50, 100]\n      }\n    },\n    showLimit: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data () {\n    return {\n      version: '0.2.1',\n      currentPage: 1,\n      currentLimit: 15,\n      translations: {\n        en: {\n          prev: 'Previous',\n          title: 'Page',\n          next: 'Next'\n        }\n      },\n      availableLanguages: ['en']\n    }\n  },\n  created () {\n    this.currentPage = this.page\n  },\n  watch: {\n    page (val) {\n      this.currentPage = parseInt(val)\n    }\n  },\n  computed: {\n    translation () {\n      return this.availableLanguages.includes(this.lang)\n        ? this.translations[this.lang]\n        : this.translations['en']\n    },\n    totalPages () {\n      return Math.ceil(this.total / this.currentLimit)\n    },\n    totalPagesData () {\n      var totalDatas = []\n      var data = {}\n      for (var index = 1; index <= this.totalPages; ++index) {\n        data = {\n          value: index,\n          text: 'Trang ' + index\n        }\n        totalDatas.push(data)\n      }\n      return totalDatas\n    },\n    titlePage () {\n      return `${this.currentPage}`\n    },\n    classFirstPage () {\n      return {\n        'c-not-allowed pagination__navigation--disabled': this.currentPage === 1\n      }\n    },\n    classLastPage () {\n      return {\n        'c-not-allowed pagination__navigation--disabled': this.currentPage === this.totalPages\n      }\n    },\n    viewMobile () {\n      return isMobile\n    }\n  },\n  methods: {\n    nextPage () {\n      if (this.currentPage !== this.totalPages) {\n        this.currentPage += 1\n        this.$emit('tiny:change-page', {\n          page: this.currentPage\n        })\n      }\n    },\n    lastPage () {\n      if (this.currentPage > 1) {\n        this.currentPage -= 1\n        this.$emit('tiny:change-page', {\n          page: this.currentPage\n        })\n      }\n    },\n    nextPageLast () {\n      this.currentPage = this.totalPages\n      this.$emit('tiny:change-page', {\n        page: this.totalPages\n      })\n    },\n    lastPageLast () {\n      this.currentPage = 1\n      this.$emit('tiny:change-page', {\n        page: 1\n      })\n    },\n    goToPage () {\n      this.$emit('tiny:change-page', {\n        page: this.currentPage\n      })\n    },\n    onLimitChange () {\n      this.currentPage = 1\n    }\n  }\n}\n</script>\n"]}]}