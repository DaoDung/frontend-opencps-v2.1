{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/TiepNhan/TiepNhanHoSo_ThongTinChuHoSo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/TiepNhan/TiepNhanHoSo_ThongTinChuHoSo.vue","mtime":1548065607028},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport Suggestions from 'v-suggestions'\nimport toastr from 'toastr'\ntoastr.options = {\n  'closeButton': true,\n  'timeOut': '5000'\n}\nexport default {\n  components: {\n    'suggestions': Suggestions\n  },\n  data: () => ({\n    valid_thongtinchuhoso: false,\n    loadingVerify: false,\n    citys: [],\n    delegateDistricts: [],\n    districts: [],\n    delegateWards: [],\n    wards: [],\n    applicantItems: [],\n    applicantItems2: [],\n    applicantIdNo: '',\n    labelSwitch: {\n      'true': {\n        cmtnd: 'CMND/ Hộ chiếu',\n        nguoi_nop: 'Họ và tên'\n      },\n      'false': {\n        cmtnd: 'Mã số thuế',\n        nguoi_nop: 'Tên tổ chức, doanh nghiệp'\n      }\n    },\n    thongTinChuHoSo: {\n      userType: true,\n      cityCode: '',\n      districtCode: '',\n      wardCode: '',\n      applicantIdNo: '',\n      applicantIdType: '',\n      contactEmail: '',\n      contactTelNo: '',\n      contactName: '',\n      address: '',\n      applicantName: ''\n    },\n    thongTinNguoiNopHoSo: {\n      sameUser: false,\n      delegateName: '',\n      delegateCityCode: '',\n      delegateAddress: '',\n      delegateDistrictCode: '',\n      delegateWardCode: '',\n      delegateEmail: '',\n      delegateTelNo: '',\n      delegateIdNo: ''\n    },\n    applicantInfos: {\n      applicantName: '',\n      applicantIdNo: '',\n      companyType: '',\n      companyStatus: '',\n      address: '',\n      representatives: ''\n    },\n    bussinessExits: false,\n    validBussinessInfos: true,\n    messageCheckApplicant: '',\n    search: null,\n    search2: null,\n    searchQuery: '',\n    selectedSearchItem: null,\n    searchOptions: {},\n    functionTimeOut: null,\n    dialog_applicantInfos: false,\n    rules: {\n      required: (value) => !!value || 'Trường dữ liệu bắt buộc',\n      email: (value) => {\n        const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        return pattern.test(value) || 'Địa chỉ Email không hợp lệ'\n      },\n      passWord: (value) => {\n        const pattern = /^(?![0-9]{6,})[0-9a-zA-Z]{6,}$/\n        return pattern.test(value) || 'Gồm các ký tự 0-9, a-z và ít nhất 6 ký tự'\n      },\n      telNo: (value) => {\n        const pattern = /^([0-9]{0,})$/\n        return pattern.test(value) || 'Gồm các ký tự 0-9'\n      }\n    }\n  }),\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    },\n    originality () {\n      var vm = this\n      console.log('originality', vm.getOriginality())\n      return vm.getOriginality()\n    },\n    viaPostal () {\n      return this.$store.getters.viaPostal\n    },\n    dichVuChuyenPhatKetQua () {\n      return this.$store.getters.dichVuChuyenPhatKetQua\n    },\n    ThongTinChuHoSoBindChuyenPhat () {\n      let data = {\n        cityCode: this.thongTinChuHoSo.cityCode,\n        address: this.thongTinChuHoSo.address,\n        districtCode: this.thongTinChuHoSo.districtCode,\n        wardCode: this.thongTinChuHoSo.wardCode,\n        contactTelNo: this.thongTinChuHoSo.contactTelNo\n      }\n      return data\n    }\n  },\n  created () {\n  },\n  watch: {\n    thongTinChuHoSo: {\n      handler: function (value) {\n        let vm = this\n        let tempData = {\n          delegateName: value.applicantName,\n          delegateCityCode: value.cityCode,\n          delegateAddress: value.address,\n          delegateDistrictCode: value.districtCode,\n          delegateWardCode: value.wardCode,\n          delegateEmail: value.contactEmail,\n          delegateTelNo: value.contactTelNo,\n          delegateIdNo: value.applicantIdNo\n        }\n        // if (!vm.thongTinChuHoSo.userType) {\n        //   vm.thongTinNguoiNopHoSo.sameUser = false\n        // } else {\n        //   vm.thongTinNguoiNopHoSo.sameUser = true\n        // }\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          if (value.cityCode && value.cityCode !== vm.thongTinNguoiNopHoSo['delegateCityCode']) {\n            vm.onChangeDelegateCity(value.cityCode)\n          }\n          if (value.districtCode && value.districtCode !== vm.thongTinNguoiNopHoSo['delegateDistrictCode']) {\n            vm.onChangeDelegateDistrict(value.districtCode)\n          }\n          vm.thongTinNguoiNopHoSo = Object.assign(vm.thongTinNguoiNopHoSo, tempData)\n        }\n      },\n      deep: true\n    },\n    thongTinNguoiNopHoSo: {\n      handler: function (value) {\n        var vm = this\n        let dataChuHoSo = vm.thongTinChuHoSo\n        if (value.sameUser) {\n          let dataNguoiNopHoSo = {\n            delegateName: dataChuHoSo.applicantName,\n            delegateCityCode: dataChuHoSo.cityCode,\n            delegateAddress: dataChuHoSo.address,\n            delegateDistrictCode: dataChuHoSo.districtCode,\n            delegateWardCode: dataChuHoSo.wardCode,\n            delegateEmail: dataChuHoSo.contactEmail,\n            delegateTelNo: dataChuHoSo.contactTelNo,\n            delegateIdNo: dataChuHoSo.applicantIdNo\n          }\n          if (dataChuHoSo.cityCode && dataChuHoSo.cityCode !== vm.thongTinNguoiNopHoSo['delegateCityCode']) {\n            vm.onChangeDelegateCity(dataChuHoSo.cityCode)\n          }\n          if (dataChuHoSo.districtCode && dataChuHoSo.districtCode !== vm.thongTinNguoiNopHoSo['delegateDistrictCode']) {\n            vm.onChangeDelegateDistrict(dataChuHoSo.districtCode)\n          }\n          vm.thongTinNguoiNopHoSo = Object.assign(vm.thongTinNguoiNopHoSo, dataNguoiNopHoSo)\n        } else {\n          this.$store.dispatch('resetThongTinNguoiNopHoSo')\n        }\n      },\n      deep: true\n    },\n    ThongTinChuHoSoBindChuyenPhat (val) {\n      this.$store.commit('setThongTinChuHoSoBindChuyenPhat', val)\n    },\n    search (val) {\n      val && this.querySelections(val)\n    },\n    search2 (val) {\n      val && this.querySelections2(val)\n    }\n  },\n  methods: {\n    initData (data) {\n      var vm = this\n      vm.$store.commit('setApplicantId', data.applicantIdNo)\n      let tempData = {\n        delegateName: data.delegateName,\n        delegateCityCode: data.delegateCityCode,\n        delegateAddress: data.delegateAddress,\n        delegateDistrictCode: data.delegateDistrictCode,\n        delegateWardCode: data.delegateWardCode,\n        delegateEmail: data.delegateEmail,\n        delegateTelNo: data.delegateTelNo,\n        delegateIdNo: data.delegateIdNo\n      }\n      let thongTinNguoiNopHoSoTemp = Object.assign(vm.thongTinNguoiNopHoSo, tempData)\n      vm.thongTinNguoiNopHoSo = thongTinNguoiNopHoSoTemp\n      let userTypeCondition = true\n      if (data.applicantIdType === 'business') {\n        userTypeCondition = false\n      }\n      let tempDataChuHs = {\n        userType: userTypeCondition,\n        cityCode: data.cityCode,\n        districtCode: data.districtCode,\n        wardCode: data.wardCode,\n        applicantIdNo: data.applicantIdNo,\n        applicantIdType: data.applicantIdType,\n        contactEmail: data.contactEmail,\n        contactName: data.contactName,\n        contactTelNo: data.contactTelNo,\n        address: data.address,\n        applicantName: data.applicantName,\n        cityName: data.cityName,\n        districtName: data.districtName,\n        wardName: data.wardName\n      }\n      let thongTinChuHoSoTemp = Object.assign(vm.thongTinChuHoSo, tempDataChuHs)\n      vm.thongTinChuHoSo = thongTinChuHoSoTemp\n      vm.checkApplicantInfos()\n      vm.$nextTick(function () {\n        var filter = {\n          collectionCode: 'ADMINISTRATIVE_REGION',\n          level: 0,\n          parent: 0\n        }\n        vm.$store.getters.getDictItems(filter).then(function (result) {\n          vm.citys = result.data\n        })\n        setTimeout(function () {\n          if (data.cityCode) {\n            vm.$store.getters.getDictItems({\n              collectionCode: 'ADMINISTRATIVE_REGION',\n              level: 1,\n              parent: data.cityCode\n            }).then(function (resultDistricts) {\n              vm.districts = resultDistricts.data\n            })\n          }\n          console.log('districtCode-----------', data.districtCode)\n          if (data.districtCode) {\n            vm.$store.getters.getDictItems({\n              collectionCode: 'ADMINISTRATIVE_REGION',\n              level: 1,\n              parent: data.districtCode\n            }).then(function (resultWards) {\n              vm.wards = resultWards.data\n            })\n          }\n          if (data.delegateCityCode) {\n            vm.$store.getters.getDictItems({\n              collectionCode: 'ADMINISTRATIVE_REGION',\n              level: 1,\n              parent: data.delegateCityCode\n            }).then(function (resultDeDistricts) {\n              vm.delegateDistricts = resultDeDistricts.data\n            })\n          }\n          if (data.delegateDistrictCode) {\n            vm.$store.getters.getDictItems({\n              collectionCode: 'ADMINISTRATIVE_REGION',\n              level: 1,\n              parent: data.delegateDistrictCode\n            }).then(function (resultDeWards) {\n              vm.delegateWards = resultDeWards.data\n            })\n          }\n        }, 200)\n      })\n    },\n    onChangeCity (data) {\n      var vm = this\n      let filter = {\n        collectionCode: 'ADMINISTRATIVE_REGION',\n        level: 1,\n        parent: data\n      }\n      vm.thongTinChuHoSo.districtCode = ''\n      vm.thongTinChuHoSo.wardCode = ''\n      vm.$store.commit('setCityVal', data)\n      vm.$store.getters.getDictItems(filter).then(function (result) {\n        vm.districts = result.data\n        vm.wards = []\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          vm.delegateDistricts = result.data\n          vm.wards = []\n        }\n      })\n    },\n    onChangeDistrict (data) {\n      var vm = this\n      let filter = {\n        collectionCode: 'ADMINISTRATIVE_REGION',\n        level: 1,\n        parent: data\n      }\n      vm.thongTinChuHoSo.wardCode = ''\n      vm.$store.commit('setDistrictVal', data)\n      vm.$store.getters.getDictItems(filter).then(function (result) {\n        vm.wards = result.data\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          vm.delegateWards = result.data\n        }\n      })\n    },\n    onChangeWard (data) {\n      this.$store.commit('setWardVal', data)\n    },\n    querySelections (val) {\n      var vm = this\n      let params = {\n        idNo: val\n      }\n      vm.$store.dispatch('getUserInfoFromApplicantIdNo', params).then(result => {\n        vm.applicantItems = result\n      }).catch(xhr => {\n      })\n    },\n    querySelections2 (val) {\n      var vm = this\n      let params = {\n        idNo: val\n      }\n      vm.$store.dispatch('getUserInfoFromApplicantIdNo', params).then(result => {\n        vm.applicantItems2 = result\n      }).catch(xhr => {\n      })\n    },\n    onChangeDelegateCity (data) {\n      var vm = this\n      vm.thongTinNguoiNopHoSo.delegateDistrictCode = ''\n      vm.thongTinNguoiNopHoSo.delegateWardCode = ''\n      let filter = {\n        collectionCode: 'ADMINISTRATIVE_REGION',\n        level: 1,\n        parent: data\n      }\n      vm.$store.getters.getDictItems(filter).then(function (result) {\n        vm.delegateDistricts = result.data\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          vm.districts = result.data\n        }\n      })\n    },\n    showValid () {\n      var vm = this\n      let result = {\n        validForm: vm.$refs.formChuHoSo.validate(),\n        message: vm.messageCheckApplicant,\n        validApplicant: vm.validBussinessInfos\n      }\n      return result\n    },\n    onChangeDelegateDistrict (data) {\n      var vm = this\n      vm.thongTinNguoiNopHoSo.delegateWardCode = ''\n      let filter = {\n        collectionCode: 'ADMINISTRATIVE_REGION',\n        level: 1,\n        parent: data\n      }\n      vm.$store.getters.getDictItems(filter).then(function (result) {\n        vm.delegateWards = result.data\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          vm.wards = result.data\n        }\n      })\n    },\n    onInputChange (query) {\n      let vm = this\n      if (vm.functionTimeOut) {\n        clearTimeout(vm.functionTimeOut)\n      }\n      vm.functionTimeOut = setTimeout(function () {\n        if ((vm.originality === 3 && !vm.thongTinChuHoSo.userType) || (vm.originality === 1 && vm.thongTinChuHoSo.applicantIdType === 'business')) {\n          vm.checkApplicantInfos()\n        }\n        vm.$store.commit('setApplicantId', query)\n      }, 2000)\n      if (query.trim().length === 0) {\n        return null\n      }\n      const url = `/o/rest/v2/applicants?start=0&end=5&idNo=${query}`\n      // test local\n      // const url = 'http://127.0.0.1:8081/api/applicants'\n      return new Promise(resolve => {\n        vm.$store.dispatch('loadInitResource').then(result => {\n          let param = {\n            headers: {\n            }\n          }\n          axios.get(url, param).then(response => {\n            let items = []\n            if (response.data.hasOwnProperty('data')) {\n              items = response.data.data\n            } else {\n            }\n            resolve(items)\n          })\n        })\n      })\n    },\n    onInputChange1 (query) {\n      let vm = this\n      if (query.trim().length === 0) {\n        return null\n      }\n      const url = `/o/rest/v2/applicants?start=0&end=5&idNo=${query}`\n      // test local\n      // const url = 'http://127.0.0.1:8081/api/applicants'\n      return new Promise(resolve => {\n        vm.$store.dispatch('loadInitResource').then(result => {\n          let param = {\n            headers: {\n            }\n          }\n          axios.get(url, param).then(response => {\n            let items = []\n            if (response.data.hasOwnProperty('data')) {\n              items = response.data.data\n            } else {\n            }\n            resolve(items)\n          })\n        })\n      })\n    },\n    onSearchItemSelected (item) {\n      var vm = this\n      vm.selectedSearchItem = item\n      console.log('selectedSearchItem', vm.selectedSearchItem)\n      // if (item['applicantIdType'] === 'business') {\n      //   vm.thongTinChuHoSo.userType = false\n      //   vm.thongTinNguoiNopHoSo.sameUser = false\n      // } else {\n      //   vm.thongTinChuHoSo.userType = true\n      // }\n      vm.thongTinChuHoSo['applicantIdNo'] = item.applicantIdNo.toString()\n      //\n      vm.thongTinChuHoSo['applicantName'] = item['applicantName'] ? item['applicantName'] : ''\n      vm.thongTinChuHoSo['address'] = item['address'] ? item['address'] : ''\n      vm.thongTinChuHoSo['contactTelNo'] = item['contactTelNo'] ? item['contactTelNo'] : ''\n      vm.thongTinChuHoSo['contactEmail'] = item['contactEmail'] ? item['contactEmail'] : ''\n      vm.thongTinChuHoSo.cityCode = item['cityCode'] ? item['cityCode'] : ''\n      vm.$store.commit('setApplicantId', vm.thongTinChuHoSo['applicantIdNo'])\n      vm.checkApplicantInfos()\n      function changeCity (data) {\n        return new Promise((resolve, reject) => {\n          setTimeout(\n            () => {\n              vm.onChangeCity(data)\n              resolve()\n            }, Math.floor(Math.random() * 100) + 1\n          )\n        })\n      }\n      function changeDistrict (data) {\n        return new Promise((resolve, reject) => {\n          setTimeout(\n            () => {\n              vm.onChangeDistrict(data)\n              resolve()\n            }, Math.floor(Math.random() * 100) + 1\n          )\n        })\n      }\n      if (vm.thongTinChuHoSo['cityCode'] !== '' && vm.thongTinChuHoSo['cityCode'] !== null && vm.thongTinChuHoSo['cityCode'] !== undefined && vm.thongTinChuHoSo['cityCode'] !== 0 && vm.thongTinChuHoSo['cityCode'] !== '0') {\n        changeCity(vm.thongTinChuHoSo['cityCode']).then(function () {\n          vm.thongTinChuHoSo.districtCode = item['districtCode'] ? item['districtCode'] : ''\n          if (vm.thongTinChuHoSo['districtCode'] !== '' && vm.thongTinChuHoSo['districtCode'] !== null && vm.thongTinChuHoSo['districtCode'] !== undefined && vm.thongTinChuHoSo['districtCode'] !== 0 && vm.thongTinChuHoSo['districtCode'] !== '0') {\n            changeDistrict(vm.thongTinChuHoSo['districtCode']).then(function () {\n              vm.thongTinChuHoSo.wardCode = item['wardCode'] ? item['wardCode'] : ''\n            })\n          }\n        })\n      }\n    },\n    onSearchItemSelected1 (item) {\n      var vm = this\n      vm.selectedSearchItem = item\n      console.log('selectedSearchItem1', item)\n      vm.thongTinNguoiNopHoSo['delegateIdNo'] = item.applicantIdNo.toString()\n      //\n      vm.thongTinNguoiNopHoSo['delegateName'] = item['applicantName'] ? item['applicantName'] : ''\n      vm.thongTinNguoiNopHoSo['delegateAddress'] = item['address'] ? item['address'] : ''\n      vm.thongTinNguoiNopHoSo['delegateTelNo'] = item['contactTelNo'] ? item['contactTelNo'] : ''\n      vm.thongTinNguoiNopHoSo['delegateEmail'] = item['contactEmail'] ? item['contactEmail'] : ''\n      vm.thongTinNguoiNopHoSo['delegateCityCode'] = item['cityCode'] ? item['cityCode'] : ''\n      function changeCity (data) {\n        return new Promise((resolve, reject) => {\n          setTimeout(\n            () => {\n              vm.onChangeCity(data)\n              resolve()\n            }, Math.floor(Math.random() * 100) + 1\n          )\n        })\n      }\n      function changeDistrict (data) {\n        return new Promise((resolve, reject) => {\n          setTimeout(\n            () => {\n              vm.onChangeDistrict(data)\n              resolve()\n            }, Math.floor(Math.random() * 100) + 1\n          )\n        })\n      }\n      if (vm.thongTinNguoiNopHoSo['delegateCityCode'] !== null && vm.thongTinNguoiNopHoSo['delegateCityCode'] !== undefined && vm.thongTinNguoiNopHoSo['delegateCityCode'] !== 0 && vm.thongTinNguoiNopHoSo['delegateCityCode'] !== '0') {\n        changeCity(vm.thongTinNguoiNopHoSo['delegateCityCode']).then(function () {\n          vm.thongTinNguoiNopHoSo['delegateDistrictCode'] = item['districtCode'] ? item['districtCode'] : ''\n          if (vm.thongTinNguoiNopHoSo['delegateDistrictCode'] !== null && vm.thongTinNguoiNopHoSo['delegateDistrictCode'] !== undefined && vm.thongTinNguoiNopHoSo['delegateDistrictCode'] !== 0 && vm.thongTinNguoiNopHoSo['delegateDistrictCode'] !== '0') {\n            changeDistrict(vm.thongTinNguoiNopHoSo['delegateDistrictCode']).then(function () {\n              vm.thongTinNguoiNopHoSo['delegateWardCode'] = item['wardCode'] ? item['wardCode'] : ''\n            })\n          }\n        })\n      }\n    },\n    getThongTinChuHoSo () {\n      return this.thongTinChuHoSo\n    },\n    getThongTinNguoiNopHoSo () {\n      return this.thongTinNguoiNopHoSo\n    },\n    changeApplicantInfos () {\n      let vm = this\n      if (vm.functionTimeOut) {\n        clearTimeout(vm.functionTimeOut)\n      }\n      vm.functionTimeOut = setTimeout(function () {\n        if ((vm.originality === 3 && !vm.thongTinChuHoSo.userType) || (vm.originality === 1 && vm.thongTinChuHoSo.applicantIdType === 'business')) {\n          vm.checkApplicantInfos()\n        }\n        vm.$store.commit('setApplicantId', vm.thongTinChuHoSo.applicantIdNo)\n      }, 2000)\n    },\n    checkApplicantInfos () {\n      let vm = this\n      if ((vm.originality === 3 && !vm.thongTinChuHoSo.userType && vm.thongTinChuHoSo.applicantIdNo) || (vm.originality === 1 && vm.thongTinChuHoSo.applicantIdType === 'business')) {\n        let filter = {\n          applicantIdNo: vm.thongTinChuHoSo.applicantIdNo,\n          applicantName: vm.thongTinChuHoSo.applicantName\n        }\n        // vm.loadingVerify = true\n        vm.$store.dispatch('checkApplicantInfos', filter).then(result => {\n          // vm.loadingVerify = false\n          if (result && result.hasOwnProperty('error') && result.error === true) {\n            vm.bussinessExits = false\n            vm.validBussinessInfos = false\n            // vm.$store.commit('setApplicantBussinessExit', false)\n            vm.messageCheckApplicant = result.message\n            // toastr.error(result.message + ' Vui lòng kiểm tra lại mã số thuế')\n          } else if (result && result.hasOwnProperty('warning') && result.warning === true) {\n            vm.bussinessExits = true\n            vm.validBussinessInfos = false\n            // vm.$store.commit('setApplicantBussinessExit', false)\n            vm.messageCheckApplicant = result.message\n            // toastr.error(result.message + ' Vui lòng đối chiếu thông tin doanh nghiệp')\n          } else if (result && !result.hasOwnProperty('error') && !result.hasOwnProperty('warning')) {\n            vm.bussinessExits = true\n            vm.validBussinessInfos = true\n            // vm.$store.commit('setApplicantBussinessExit', filter['applicantIdNo'])\n          }\n        }).catch(function () {\n          vm.loadingVerify = false\n        })\n      }\n    },\n    getApplicantInfos () {\n      let vm = this\n      let filter = {\n        applicantIdNo: vm.thongTinChuHoSo.applicantIdNo\n      }\n      vm.$store.dispatch('getApplicantInfos', filter).then(result => {\n        vm.applicantInfos['applicantName'] = result['MainInformation']['NAME']\n        vm.applicantInfos['applicantIdNo'] = result['MainInformation']['ENTERPRISE_GDT_CODE']\n        vm.applicantInfos['address'] = result['HOAdress']['AddressFullText']\n        vm.applicantInfos['representatives'] = result['Representatives']['FULL_NAME']\n        vm.applicantInfos['companyType'] = result['MainInformation']['ENTERPRISE_TYPE_NAME']\n        vm.applicantInfos['companyStatus'] = result['MainInformation']['ENTERPRISE_STATUS_NAME']\n        vm.dialog_applicantInfos = true\n      })\n    }\n  }\n}\n",{"version":3,"sources":["TiepNhanHoSo_ThongTinChuHoSo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TiepNhanHoSo_ThongTinChuHoSo.vue","sourceRoot":"src/components/TiepNhan","sourcesContent":["<template>\n  <div>\n    <v-form v-model=\"valid_thongtinchuhoso\" ref=\"formChuHoSo\" lazy-validation>\n      <div>\n        <div style=\"position: relative;\">\n          <v-expansion-panel :value=\"[true]\" class=\"expansion-pl\">\n            <v-expansion-panel-content>\n              <div slot=\"header\"> <div class=\"background-triangle-small\"> <v-icon size=\"18\" color=\"white\">star_rate</v-icon></div> Thông tin chủ hồ sơ</div>\n              <v-card>\n                <v-tooltip left v-if=\"(!thongTinChuHoSo.userType || (originality === 1 && thongTinChuHoSo.applicantIdType === 'business')) && bussinessExits\"\n                style=\"position:absolute;right:5px;z-index:101\"\n                >\n                  <v-btn slot=\"activator\" class=\"my-0 mt-1\" fab icon small dark color=\"primary\" @click.native=\"getApplicantInfos()\" style=\"width:32px!important;height:32px!important\"\n                  >\n                    <v-icon dark>account_balance</v-icon>\n                  </v-btn>\n                  <span>Đối chiếu thông tin doanh nghiệp</span>\n                </v-tooltip>\n                <v-card-text class=\"pt-3\">\n                  <v-layout wrap>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-subheader v-else class=\"pl-0\"> <!-- {{thongTinChuHoSo.userType}} --> {{ labelSwitch[thongTinChuHoSo.userType].cmtnd }} <span style=\"color:red\">&nbsp;*&nbsp;</span>: </v-subheader>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <v-text-field\n                        v-if=\"originality === 1 || originality === '1'\"\n                        v-model=\"thongTinChuHoSo.applicantIdNo\"\n                        :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                        required\n                        @input=\"changeApplicantInfos\"\n                        :disabled=\"loadingVerify\"\n                      ></v-text-field>\n                      <suggestions\n                        v-if=\"originality === 3 || originality === '3'\"\n                        v-model=\"thongTinChuHoSo.applicantIdNo\"\n                        :options=\"searchOptions\"\n                        :onItemSelected=\"onSearchItemSelected\"\n                        :onInputChange=\"onInputChange\"\n                        :class=\"loadingVerify ? 'input-group--disabled' : ''\"\n                        :style=\"loadingVerify ? 'color:#00000061' : ''\"\n                        >\n                        <div slot=\"item\" slot-scope=\"props\" class=\"single-item\">\n                          <v-list-tile-content>\n                            <v-list-tile-title v-html=\"props.item.applicantName\"></v-list-tile-title>\n                            <v-list-tile-sub-title v-html=\"props.item.applicantIdNo\"></v-list-tile-sub-title>\n                          </v-list-tile-content>\n                        </div>\n                      </suggestions>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-subheader v-else class=\"pl-0\"> {{ labelSwitch[thongTinChuHoSo.userType].nguoi_nop }}<span style=\"color:red\">&nbsp;*&nbsp;</span>: </v-subheader>\n                    </v-flex>\n                    <v-flex xs12 sm6>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-text-field\n                        v-else\n                        v-model=\"thongTinChuHoSo.applicantName\"\n                        @input=\"changeApplicantInfos\"\n                        :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                        required\n                        :disabled=\"loadingVerify\"\n                      ></v-text-field>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-subheader v-else class=\"pl-0\">Địa chỉ <span v-if=\"originality === 1\" style=\"color:red\">&nbsp;*&nbsp;</span>: </v-subheader>\n                    </v-flex>\n                    <v-flex xs12 sm10>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-text-field\n                      v-else\n                      v-model=\"thongTinChuHoSo.address\"\n                      multi-line\n                      rows=\"2\"\n                      :rules=\"originality === 1 ? [v => !!v || 'Trường dữ liệu bắt buộc'] : ''\"\n                      required\n                      ></v-text-field>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-subheader v-else class=\"pl-0\">Tỉnh/Thành phố<span style=\"color:red\">&nbsp;*&nbsp;</span> : </v-subheader>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-select\n                      v-else\n                      :items=\"citys\"\n                      item-text=\"itemName\"\n                      item-value=\"itemCode\"\n                      v-model=\"thongTinChuHoSo.cityCode\"\n                      @change=\"onChangeCity\"\n                      autocomplete\n                      :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                      required\n                      ></v-select>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-subheader v-else class=\"pl-0\">Quận/Huyện <span style=\"color:red\">&nbsp;*&nbsp;</span> : </v-subheader>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-select\n                      v-else\n                      :items=\"districts\"\n                      item-text=\"itemName\"\n                      item-value=\"itemCode\"\n                      v-model=\"thongTinChuHoSo.districtCode\"\n                      @change=\"onChangeDistrict\"\n                      autocomplete\n                      :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                      required\n                      ></v-select>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-subheader v-else class=\"pl-0\">Xã/Phường <span style=\"color:red\">&nbsp;*&nbsp;</span> : </v-subheader>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-select\n                      v-else\n                      :items=\"wards\"\n                      item-text=\"itemName\"\n                      item-value=\"itemCode\"\n                      v-model=\"thongTinChuHoSo.wardCode\"\n                      autocomplete\n                      @change=\"onChangeWard\"\n                      :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                      required\n                      ></v-select>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-subheader v-else class=\"pl-0\">Số điện thoại <span style=\"color:red\">&nbsp;*&nbsp;</span>: </v-subheader>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-text-field\n                      v-else\n                      v-model=\"thongTinChuHoSo.contactTelNo\"\n                      append-icon=\"phone\"\n                      :rules=\"[rules.telNo, rules.required]\"\n                      required\n                      ></v-text-field>\n                    </v-flex>\n                    <v-flex xs12 sm2>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-subheader v-else class=\"pl-0\">Địa chỉ E-mail <span v-if=\"originality === 1\" style=\"color:red\">&nbsp;*&nbsp;</span>: </v-subheader>\n                    </v-flex>\n                    <v-flex xs12 sm6>\n                      <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                        <content-placeholders-text :lines=\"1\" />\n                      </content-placeholders>\n                      <v-text-field\n                      v-else\n                      v-model=\"thongTinChuHoSo.contactEmail\"\n                      :rules=\"originality === 1 ? [rules.email, rules.required] : (thongTinChuHoSo.contactEmail && originality !== 1 ? [rules.email] : '')\"\n                      required\n                      ></v-text-field>\n                    </v-flex>\n                  </v-layout>\n                </v-card-text>\n              </v-card>\n            </v-expansion-panel-content>\n          </v-expansion-panel>\n          <div class=\"absolute__btn\" style=\"width: 380px;\" v-if=\"originality !== 1\">\n            <content-placeholders class=\"mt-1\" v-if=\"loading\">\n              <content-placeholders-text :lines=\"1\" />\n            </content-placeholders>\n            <v-radio-group v-else v-model=\"thongTinChuHoSo.userType\" row @change=\"checkApplicantInfos\">\n              <v-radio label=\"Công dân\" :value=\"true\"></v-radio>\n              <v-radio label=\"Tổ chức, doanh nghiệp\" :value=\"false\"></v-radio>\n            </v-radio-group>\n          </div>\n          <div style=\"position: relative;\" v-if=\"originality !== 1\">\n            <v-expansion-panel :value=\"[true]\" class=\"expansion-pl\">\n              <v-expansion-panel-content>\n                <div slot=\"header\"> <div class=\"background-triangle-small\"> <v-icon size=\"18\" color=\"white\">star_rate</v-icon> </div> Thông tin người nộp hồ sơ</div>\n                <v-card>\n                  <v-card-text>\n                    <v-layout wrap>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-subheader v-else class=\"pl-0\">CMND/Hộ chiếu <span style=\"color:red\">&nbsp;*&nbsp;</span>: </v-subheader>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-text-field\n                        v-if=\"originality === 1 || originality === '1'\"\n                        v-model=\"thongTinNguoiNopHoSo.delegateIdNo\"\n                        :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                        required\n                        ></v-text-field>\n                        <!--  -->\n                        <suggestions\n                          v-if=\"originality === 3 || originality === '3'\"\n                          v-model=\"thongTinNguoiNopHoSo.delegateIdNo\"\n                          :options=\"searchOptions\"\n                          :onItemSelected=\"onSearchItemSelected1\"\n                          :onInputChange=\"onInputChange1\">\n                          <div slot=\"item\" slot-scope=\"props\" class=\"single-item\">\n                            <v-list-tile-content>\n                              <v-list-tile-title v-html=\"props.item.applicantName\"></v-list-tile-title>\n                              <v-list-tile-sub-title v-html=\"props.item.applicantIdNo\"></v-list-tile-sub-title>\n                            </v-list-tile-content>\n                          </div>\n                        </suggestions>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-subheader v-else class=\"pl-0\">Họ và tên <span style=\"color:red\">&nbsp;*&nbsp;</span>: </v-subheader>\n                      </v-flex>\n                      <v-flex xs12 sm6>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-text-field\n                        v-else\n                        v-model=\"thongTinNguoiNopHoSo.delegateName\"\n                        :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                        required\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-subheader v-else class=\"pl-0\">Địa chỉ: </v-subheader>\n                      </v-flex>\n                      <v-flex xs12 sm10>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-text-field\n                        v-else\n                        v-model=\"thongTinNguoiNopHoSo.delegateAddress\"\n                        multi-line\n                        rows=\"2\"\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-subheader v-else class=\"pl-0\">Tỉnh/Thành phố <span style=\"color:red\">&nbsp;*&nbsp;</span> : </v-subheader>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-select\n                        v-else\n                        :items=\"citys\"\n                        item-text=\"itemName\"\n                        item-value=\"itemCode\"\n                        @change=\"onChangeDelegateCity\"\n                        v-model=\"thongTinNguoiNopHoSo.delegateCityCode\"\n                        autocomplete\n                        :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                        required\n                        ></v-select>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-subheader v-else class=\"pl-0\">Quận/Huyện <span style=\"color:red\">&nbsp;*&nbsp;</span> : </v-subheader>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-select\n                        v-else\n                        :items=\"delegateDistricts\"\n                        item-text=\"itemName\"\n                        item-value=\"itemCode\"\n                        @change=\"onChangeDelegateDistrict\"\n                        v-model=\"thongTinNguoiNopHoSo.delegateDistrictCode\"\n                        autocomplete\n                        :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                        required\n                        ></v-select>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-subheader v-else class=\"pl-0\">Xã/Phường <span style=\"color:red\">&nbsp;*&nbsp;</span> : </v-subheader>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-select\n                        v-else\n                        :items=\"delegateWards\"\n                        item-text=\"itemName\"\n                        item-value=\"itemCode\"\n                        v-model=\"thongTinNguoiNopHoSo.delegateWardCode\"\n                        autocomplete\n                        :rules=\"[v => !!v || 'Trường dữ liệu bắt buộc']\"\n                        required\n                        ></v-select>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-subheader v-else class=\"pl-0\">Số điện thoại: </v-subheader>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-text-field\n                        v-else\n                        v-model=\"thongTinNguoiNopHoSo.delegateTelNo\"\n                        :rules=\"[rules.telNo]\"\n                        append-icon=\"phone\"\n                        ></v-text-field>\n                      </v-flex>\n                      <v-flex xs12 sm2>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-subheader v-else class=\"pl-0\">Email: </v-subheader>\n                      </v-flex>\n                      <v-flex xs12 sm6>\n                        <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                          <content-placeholders-text :lines=\"1\" />\n                        </content-placeholders>\n                        <v-text-field\n                        v-else\n                        v-model=\"thongTinNguoiNopHoSo.delegateEmail\"\n                        :rules=\"thongTinNguoiNopHoSo.delegateEmail ? [rules.email] : ''\"\n                        ></v-text-field>\n                      </v-flex>\n                    </v-layout>\n                  </v-card-text>\n                </v-card>\n              </v-expansion-panel-content>\n            </v-expansion-panel>\n            <div class=\"absolute__btn\" style=\"width: 150px;margin-top: 4px;\">\n              <content-placeholders class=\"mt-1\" v-if=\"loading\">\n                <content-placeholders-text :lines=\"1\" />\n              </content-placeholders>\n              <v-checkbox\n              v-else\n              label=\"Giống chủ hồ sơ\"\n              v-model=\"thongTinNguoiNopHoSo.sameUser\"\n              ></v-checkbox>\n            </div>\n          </div>\n        </div>\n      </div>\n    </v-form>\n    <v-dialog v-model=\"dialog_applicantInfos\" scrollable persistent max-width=\"700px\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Thông tin doanh nghiệp\n        </v-card-title>\n        <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"dialog_applicantInfos = false\">\n          <v-icon>clear</v-icon>\n        </v-btn>\n        <v-card-text class=\"py-1\">\n          <v-layout wrap class=\"py-1 align-center\">\n            <v-flex xs12 class=\"px-2\">\n              <div class=\"my-2\"><span class=\"text-bold\">Tên tổ chức, doanh nghiệp: </span> <span>{{applicantInfos.applicantName}}</span></div>\n            </v-flex>\n            <v-flex xs12 class=\"px-2\">\n              <div class=\"my-2\"><span class=\"text-bold\">Mã số thuế: </span> <span>{{applicantInfos.applicantIdNo}}</span></div>\n            </v-flex>\n            <v-flex xs12 class=\"px-2\">\n              <div class=\"my-2\"><span class=\"text-bold\">Loại hình doanh nghiệp: </span> <span>{{applicantInfos.companyType}}</span></div>\n            </v-flex>\n            <v-flex xs12 class=\"px-2\">\n              <div class=\"my-2\"><span class=\"text-bold\">Địa chỉ:</span> <span>{{applicantInfos.address}}</span></div>\n            </v-flex>\n            <v-flex xs12 class=\"px-2\">\n              <div class=\"my-2\"><span class=\"text-bold\">Người đại diện: </span> <span>{{applicantInfos.representatives}}</span></div>\n            </v-flex>\n            <v-flex xs12 class=\"px-2\">\n              <div class=\"my-2\"><span class=\"text-bold\">Tình trạng: </span> <span>{{applicantInfos.companyStatus}}</span></div>\n            </v-flex>\n          </v-layout>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn class=\"mr-3\" color=\"primary\" @click.native=\"dialog_applicantInfos = false\">\n            <v-icon>clear</v-icon> &nbsp;\n            Thoát\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport Suggestions from 'v-suggestions'\nimport toastr from 'toastr'\ntoastr.options = {\n  'closeButton': true,\n  'timeOut': '5000'\n}\nexport default {\n  components: {\n    'suggestions': Suggestions\n  },\n  data: () => ({\n    valid_thongtinchuhoso: false,\n    loadingVerify: false,\n    citys: [],\n    delegateDistricts: [],\n    districts: [],\n    delegateWards: [],\n    wards: [],\n    applicantItems: [],\n    applicantItems2: [],\n    applicantIdNo: '',\n    labelSwitch: {\n      'true': {\n        cmtnd: 'CMND/ Hộ chiếu',\n        nguoi_nop: 'Họ và tên'\n      },\n      'false': {\n        cmtnd: 'Mã số thuế',\n        nguoi_nop: 'Tên tổ chức, doanh nghiệp'\n      }\n    },\n    thongTinChuHoSo: {\n      userType: true,\n      cityCode: '',\n      districtCode: '',\n      wardCode: '',\n      applicantIdNo: '',\n      applicantIdType: '',\n      contactEmail: '',\n      contactTelNo: '',\n      contactName: '',\n      address: '',\n      applicantName: ''\n    },\n    thongTinNguoiNopHoSo: {\n      sameUser: false,\n      delegateName: '',\n      delegateCityCode: '',\n      delegateAddress: '',\n      delegateDistrictCode: '',\n      delegateWardCode: '',\n      delegateEmail: '',\n      delegateTelNo: '',\n      delegateIdNo: ''\n    },\n    applicantInfos: {\n      applicantName: '',\n      applicantIdNo: '',\n      companyType: '',\n      companyStatus: '',\n      address: '',\n      representatives: ''\n    },\n    bussinessExits: false,\n    validBussinessInfos: true,\n    messageCheckApplicant: '',\n    search: null,\n    search2: null,\n    searchQuery: '',\n    selectedSearchItem: null,\n    searchOptions: {},\n    functionTimeOut: null,\n    dialog_applicantInfos: false,\n    rules: {\n      required: (value) => !!value || 'Trường dữ liệu bắt buộc',\n      email: (value) => {\n        const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        return pattern.test(value) || 'Địa chỉ Email không hợp lệ'\n      },\n      passWord: (value) => {\n        const pattern = /^(?![0-9]{6,})[0-9a-zA-Z]{6,}$/\n        return pattern.test(value) || 'Gồm các ký tự 0-9, a-z và ít nhất 6 ký tự'\n      },\n      telNo: (value) => {\n        const pattern = /^([0-9]{0,})$/\n        return pattern.test(value) || 'Gồm các ký tự 0-9'\n      }\n    }\n  }),\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    },\n    originality () {\n      var vm = this\n      console.log('originality', vm.getOriginality())\n      return vm.getOriginality()\n    },\n    viaPostal () {\n      return this.$store.getters.viaPostal\n    },\n    dichVuChuyenPhatKetQua () {\n      return this.$store.getters.dichVuChuyenPhatKetQua\n    },\n    ThongTinChuHoSoBindChuyenPhat () {\n      let data = {\n        cityCode: this.thongTinChuHoSo.cityCode,\n        address: this.thongTinChuHoSo.address,\n        districtCode: this.thongTinChuHoSo.districtCode,\n        wardCode: this.thongTinChuHoSo.wardCode,\n        contactTelNo: this.thongTinChuHoSo.contactTelNo\n      }\n      return data\n    }\n  },\n  created () {\n  },\n  watch: {\n    thongTinChuHoSo: {\n      handler: function (value) {\n        let vm = this\n        let tempData = {\n          delegateName: value.applicantName,\n          delegateCityCode: value.cityCode,\n          delegateAddress: value.address,\n          delegateDistrictCode: value.districtCode,\n          delegateWardCode: value.wardCode,\n          delegateEmail: value.contactEmail,\n          delegateTelNo: value.contactTelNo,\n          delegateIdNo: value.applicantIdNo\n        }\n        // if (!vm.thongTinChuHoSo.userType) {\n        //   vm.thongTinNguoiNopHoSo.sameUser = false\n        // } else {\n        //   vm.thongTinNguoiNopHoSo.sameUser = true\n        // }\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          if (value.cityCode && value.cityCode !== vm.thongTinNguoiNopHoSo['delegateCityCode']) {\n            vm.onChangeDelegateCity(value.cityCode)\n          }\n          if (value.districtCode && value.districtCode !== vm.thongTinNguoiNopHoSo['delegateDistrictCode']) {\n            vm.onChangeDelegateDistrict(value.districtCode)\n          }\n          vm.thongTinNguoiNopHoSo = Object.assign(vm.thongTinNguoiNopHoSo, tempData)\n        }\n      },\n      deep: true\n    },\n    thongTinNguoiNopHoSo: {\n      handler: function (value) {\n        var vm = this\n        let dataChuHoSo = vm.thongTinChuHoSo\n        if (value.sameUser) {\n          let dataNguoiNopHoSo = {\n            delegateName: dataChuHoSo.applicantName,\n            delegateCityCode: dataChuHoSo.cityCode,\n            delegateAddress: dataChuHoSo.address,\n            delegateDistrictCode: dataChuHoSo.districtCode,\n            delegateWardCode: dataChuHoSo.wardCode,\n            delegateEmail: dataChuHoSo.contactEmail,\n            delegateTelNo: dataChuHoSo.contactTelNo,\n            delegateIdNo: dataChuHoSo.applicantIdNo\n          }\n          if (dataChuHoSo.cityCode && dataChuHoSo.cityCode !== vm.thongTinNguoiNopHoSo['delegateCityCode']) {\n            vm.onChangeDelegateCity(dataChuHoSo.cityCode)\n          }\n          if (dataChuHoSo.districtCode && dataChuHoSo.districtCode !== vm.thongTinNguoiNopHoSo['delegateDistrictCode']) {\n            vm.onChangeDelegateDistrict(dataChuHoSo.districtCode)\n          }\n          vm.thongTinNguoiNopHoSo = Object.assign(vm.thongTinNguoiNopHoSo, dataNguoiNopHoSo)\n        } else {\n          this.$store.dispatch('resetThongTinNguoiNopHoSo')\n        }\n      },\n      deep: true\n    },\n    ThongTinChuHoSoBindChuyenPhat (val) {\n      this.$store.commit('setThongTinChuHoSoBindChuyenPhat', val)\n    },\n    search (val) {\n      val && this.querySelections(val)\n    },\n    search2 (val) {\n      val && this.querySelections2(val)\n    }\n  },\n  methods: {\n    initData (data) {\n      var vm = this\n      vm.$store.commit('setApplicantId', data.applicantIdNo)\n      let tempData = {\n        delegateName: data.delegateName,\n        delegateCityCode: data.delegateCityCode,\n        delegateAddress: data.delegateAddress,\n        delegateDistrictCode: data.delegateDistrictCode,\n        delegateWardCode: data.delegateWardCode,\n        delegateEmail: data.delegateEmail,\n        delegateTelNo: data.delegateTelNo,\n        delegateIdNo: data.delegateIdNo\n      }\n      let thongTinNguoiNopHoSoTemp = Object.assign(vm.thongTinNguoiNopHoSo, tempData)\n      vm.thongTinNguoiNopHoSo = thongTinNguoiNopHoSoTemp\n      let userTypeCondition = true\n      if (data.applicantIdType === 'business') {\n        userTypeCondition = false\n      }\n      let tempDataChuHs = {\n        userType: userTypeCondition,\n        cityCode: data.cityCode,\n        districtCode: data.districtCode,\n        wardCode: data.wardCode,\n        applicantIdNo: data.applicantIdNo,\n        applicantIdType: data.applicantIdType,\n        contactEmail: data.contactEmail,\n        contactName: data.contactName,\n        contactTelNo: data.contactTelNo,\n        address: data.address,\n        applicantName: data.applicantName,\n        cityName: data.cityName,\n        districtName: data.districtName,\n        wardName: data.wardName\n      }\n      let thongTinChuHoSoTemp = Object.assign(vm.thongTinChuHoSo, tempDataChuHs)\n      vm.thongTinChuHoSo = thongTinChuHoSoTemp\n      vm.checkApplicantInfos()\n      vm.$nextTick(function () {\n        var filter = {\n          collectionCode: 'ADMINISTRATIVE_REGION',\n          level: 0,\n          parent: 0\n        }\n        vm.$store.getters.getDictItems(filter).then(function (result) {\n          vm.citys = result.data\n        })\n        setTimeout(function () {\n          if (data.cityCode) {\n            vm.$store.getters.getDictItems({\n              collectionCode: 'ADMINISTRATIVE_REGION',\n              level: 1,\n              parent: data.cityCode\n            }).then(function (resultDistricts) {\n              vm.districts = resultDistricts.data\n            })\n          }\n          console.log('districtCode-----------', data.districtCode)\n          if (data.districtCode) {\n            vm.$store.getters.getDictItems({\n              collectionCode: 'ADMINISTRATIVE_REGION',\n              level: 1,\n              parent: data.districtCode\n            }).then(function (resultWards) {\n              vm.wards = resultWards.data\n            })\n          }\n          if (data.delegateCityCode) {\n            vm.$store.getters.getDictItems({\n              collectionCode: 'ADMINISTRATIVE_REGION',\n              level: 1,\n              parent: data.delegateCityCode\n            }).then(function (resultDeDistricts) {\n              vm.delegateDistricts = resultDeDistricts.data\n            })\n          }\n          if (data.delegateDistrictCode) {\n            vm.$store.getters.getDictItems({\n              collectionCode: 'ADMINISTRATIVE_REGION',\n              level: 1,\n              parent: data.delegateDistrictCode\n            }).then(function (resultDeWards) {\n              vm.delegateWards = resultDeWards.data\n            })\n          }\n        }, 200)\n      })\n    },\n    onChangeCity (data) {\n      var vm = this\n      let filter = {\n        collectionCode: 'ADMINISTRATIVE_REGION',\n        level: 1,\n        parent: data\n      }\n      vm.thongTinChuHoSo.districtCode = ''\n      vm.thongTinChuHoSo.wardCode = ''\n      vm.$store.commit('setCityVal', data)\n      vm.$store.getters.getDictItems(filter).then(function (result) {\n        vm.districts = result.data\n        vm.wards = []\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          vm.delegateDistricts = result.data\n          vm.wards = []\n        }\n      })\n    },\n    onChangeDistrict (data) {\n      var vm = this\n      let filter = {\n        collectionCode: 'ADMINISTRATIVE_REGION',\n        level: 1,\n        parent: data\n      }\n      vm.thongTinChuHoSo.wardCode = ''\n      vm.$store.commit('setDistrictVal', data)\n      vm.$store.getters.getDictItems(filter).then(function (result) {\n        vm.wards = result.data\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          vm.delegateWards = result.data\n        }\n      })\n    },\n    onChangeWard (data) {\n      this.$store.commit('setWardVal', data)\n    },\n    querySelections (val) {\n      var vm = this\n      let params = {\n        idNo: val\n      }\n      vm.$store.dispatch('getUserInfoFromApplicantIdNo', params).then(result => {\n        vm.applicantItems = result\n      }).catch(xhr => {\n      })\n    },\n    querySelections2 (val) {\n      var vm = this\n      let params = {\n        idNo: val\n      }\n      vm.$store.dispatch('getUserInfoFromApplicantIdNo', params).then(result => {\n        vm.applicantItems2 = result\n      }).catch(xhr => {\n      })\n    },\n    onChangeDelegateCity (data) {\n      var vm = this\n      vm.thongTinNguoiNopHoSo.delegateDistrictCode = ''\n      vm.thongTinNguoiNopHoSo.delegateWardCode = ''\n      let filter = {\n        collectionCode: 'ADMINISTRATIVE_REGION',\n        level: 1,\n        parent: data\n      }\n      vm.$store.getters.getDictItems(filter).then(function (result) {\n        vm.delegateDistricts = result.data\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          vm.districts = result.data\n        }\n      })\n    },\n    showValid () {\n      var vm = this\n      let result = {\n        validForm: vm.$refs.formChuHoSo.validate(),\n        message: vm.messageCheckApplicant,\n        validApplicant: vm.validBussinessInfos\n      }\n      return result\n    },\n    onChangeDelegateDistrict (data) {\n      var vm = this\n      vm.thongTinNguoiNopHoSo.delegateWardCode = ''\n      let filter = {\n        collectionCode: 'ADMINISTRATIVE_REGION',\n        level: 1,\n        parent: data\n      }\n      vm.$store.getters.getDictItems(filter).then(function (result) {\n        vm.delegateWards = result.data\n        if (vm.thongTinNguoiNopHoSo.sameUser) {\n          vm.wards = result.data\n        }\n      })\n    },\n    onInputChange (query) {\n      let vm = this\n      if (vm.functionTimeOut) {\n        clearTimeout(vm.functionTimeOut)\n      }\n      vm.functionTimeOut = setTimeout(function () {\n        if ((vm.originality === 3 && !vm.thongTinChuHoSo.userType) || (vm.originality === 1 && vm.thongTinChuHoSo.applicantIdType === 'business')) {\n          vm.checkApplicantInfos()\n        }\n        vm.$store.commit('setApplicantId', query)\n      }, 2000)\n      if (query.trim().length === 0) {\n        return null\n      }\n      const url = `/o/rest/v2/applicants?start=0&end=5&idNo=${query}`\n      // test local\n      // const url = 'http://127.0.0.1:8081/api/applicants'\n      return new Promise(resolve => {\n        vm.$store.dispatch('loadInitResource').then(result => {\n          let param = {\n            headers: {\n            }\n          }\n          axios.get(url, param).then(response => {\n            let items = []\n            if (response.data.hasOwnProperty('data')) {\n              items = response.data.data\n            } else {\n            }\n            resolve(items)\n          })\n        })\n      })\n    },\n    onInputChange1 (query) {\n      let vm = this\n      if (query.trim().length === 0) {\n        return null\n      }\n      const url = `/o/rest/v2/applicants?start=0&end=5&idNo=${query}`\n      // test local\n      // const url = 'http://127.0.0.1:8081/api/applicants'\n      return new Promise(resolve => {\n        vm.$store.dispatch('loadInitResource').then(result => {\n          let param = {\n            headers: {\n            }\n          }\n          axios.get(url, param).then(response => {\n            let items = []\n            if (response.data.hasOwnProperty('data')) {\n              items = response.data.data\n            } else {\n            }\n            resolve(items)\n          })\n        })\n      })\n    },\n    onSearchItemSelected (item) {\n      var vm = this\n      vm.selectedSearchItem = item\n      console.log('selectedSearchItem', vm.selectedSearchItem)\n      // if (item['applicantIdType'] === 'business') {\n      //   vm.thongTinChuHoSo.userType = false\n      //   vm.thongTinNguoiNopHoSo.sameUser = false\n      // } else {\n      //   vm.thongTinChuHoSo.userType = true\n      // }\n      vm.thongTinChuHoSo['applicantIdNo'] = item.applicantIdNo.toString()\n      //\n      vm.thongTinChuHoSo['applicantName'] = item['applicantName'] ? item['applicantName'] : ''\n      vm.thongTinChuHoSo['address'] = item['address'] ? item['address'] : ''\n      vm.thongTinChuHoSo['contactTelNo'] = item['contactTelNo'] ? item['contactTelNo'] : ''\n      vm.thongTinChuHoSo['contactEmail'] = item['contactEmail'] ? item['contactEmail'] : ''\n      vm.thongTinChuHoSo.cityCode = item['cityCode'] ? item['cityCode'] : ''\n      vm.$store.commit('setApplicantId', vm.thongTinChuHoSo['applicantIdNo'])\n      vm.checkApplicantInfos()\n      function changeCity (data) {\n        return new Promise((resolve, reject) => {\n          setTimeout(\n            () => {\n              vm.onChangeCity(data)\n              resolve()\n            }, Math.floor(Math.random() * 100) + 1\n          )\n        })\n      }\n      function changeDistrict (data) {\n        return new Promise((resolve, reject) => {\n          setTimeout(\n            () => {\n              vm.onChangeDistrict(data)\n              resolve()\n            }, Math.floor(Math.random() * 100) + 1\n          )\n        })\n      }\n      if (vm.thongTinChuHoSo['cityCode'] !== '' && vm.thongTinChuHoSo['cityCode'] !== null && vm.thongTinChuHoSo['cityCode'] !== undefined && vm.thongTinChuHoSo['cityCode'] !== 0 && vm.thongTinChuHoSo['cityCode'] !== '0') {\n        changeCity(vm.thongTinChuHoSo['cityCode']).then(function () {\n          vm.thongTinChuHoSo.districtCode = item['districtCode'] ? item['districtCode'] : ''\n          if (vm.thongTinChuHoSo['districtCode'] !== '' && vm.thongTinChuHoSo['districtCode'] !== null && vm.thongTinChuHoSo['districtCode'] !== undefined && vm.thongTinChuHoSo['districtCode'] !== 0 && vm.thongTinChuHoSo['districtCode'] !== '0') {\n            changeDistrict(vm.thongTinChuHoSo['districtCode']).then(function () {\n              vm.thongTinChuHoSo.wardCode = item['wardCode'] ? item['wardCode'] : ''\n            })\n          }\n        })\n      }\n    },\n    onSearchItemSelected1 (item) {\n      var vm = this\n      vm.selectedSearchItem = item\n      console.log('selectedSearchItem1', item)\n      vm.thongTinNguoiNopHoSo['delegateIdNo'] = item.applicantIdNo.toString()\n      //\n      vm.thongTinNguoiNopHoSo['delegateName'] = item['applicantName'] ? item['applicantName'] : ''\n      vm.thongTinNguoiNopHoSo['delegateAddress'] = item['address'] ? item['address'] : ''\n      vm.thongTinNguoiNopHoSo['delegateTelNo'] = item['contactTelNo'] ? item['contactTelNo'] : ''\n      vm.thongTinNguoiNopHoSo['delegateEmail'] = item['contactEmail'] ? item['contactEmail'] : ''\n      vm.thongTinNguoiNopHoSo['delegateCityCode'] = item['cityCode'] ? item['cityCode'] : ''\n      function changeCity (data) {\n        return new Promise((resolve, reject) => {\n          setTimeout(\n            () => {\n              vm.onChangeCity(data)\n              resolve()\n            }, Math.floor(Math.random() * 100) + 1\n          )\n        })\n      }\n      function changeDistrict (data) {\n        return new Promise((resolve, reject) => {\n          setTimeout(\n            () => {\n              vm.onChangeDistrict(data)\n              resolve()\n            }, Math.floor(Math.random() * 100) + 1\n          )\n        })\n      }\n      if (vm.thongTinNguoiNopHoSo['delegateCityCode'] !== null && vm.thongTinNguoiNopHoSo['delegateCityCode'] !== undefined && vm.thongTinNguoiNopHoSo['delegateCityCode'] !== 0 && vm.thongTinNguoiNopHoSo['delegateCityCode'] !== '0') {\n        changeCity(vm.thongTinNguoiNopHoSo['delegateCityCode']).then(function () {\n          vm.thongTinNguoiNopHoSo['delegateDistrictCode'] = item['districtCode'] ? item['districtCode'] : ''\n          if (vm.thongTinNguoiNopHoSo['delegateDistrictCode'] !== null && vm.thongTinNguoiNopHoSo['delegateDistrictCode'] !== undefined && vm.thongTinNguoiNopHoSo['delegateDistrictCode'] !== 0 && vm.thongTinNguoiNopHoSo['delegateDistrictCode'] !== '0') {\n            changeDistrict(vm.thongTinNguoiNopHoSo['delegateDistrictCode']).then(function () {\n              vm.thongTinNguoiNopHoSo['delegateWardCode'] = item['wardCode'] ? item['wardCode'] : ''\n            })\n          }\n        })\n      }\n    },\n    getThongTinChuHoSo () {\n      return this.thongTinChuHoSo\n    },\n    getThongTinNguoiNopHoSo () {\n      return this.thongTinNguoiNopHoSo\n    },\n    changeApplicantInfos () {\n      let vm = this\n      if (vm.functionTimeOut) {\n        clearTimeout(vm.functionTimeOut)\n      }\n      vm.functionTimeOut = setTimeout(function () {\n        if ((vm.originality === 3 && !vm.thongTinChuHoSo.userType) || (vm.originality === 1 && vm.thongTinChuHoSo.applicantIdType === 'business')) {\n          vm.checkApplicantInfos()\n        }\n        vm.$store.commit('setApplicantId', vm.thongTinChuHoSo.applicantIdNo)\n      }, 2000)\n    },\n    checkApplicantInfos () {\n      let vm = this\n      if ((vm.originality === 3 && !vm.thongTinChuHoSo.userType && vm.thongTinChuHoSo.applicantIdNo) || (vm.originality === 1 && vm.thongTinChuHoSo.applicantIdType === 'business')) {\n        let filter = {\n          applicantIdNo: vm.thongTinChuHoSo.applicantIdNo,\n          applicantName: vm.thongTinChuHoSo.applicantName\n        }\n        // vm.loadingVerify = true\n        vm.$store.dispatch('checkApplicantInfos', filter).then(result => {\n          // vm.loadingVerify = false\n          if (result && result.hasOwnProperty('error') && result.error === true) {\n            vm.bussinessExits = false\n            vm.validBussinessInfos = false\n            // vm.$store.commit('setApplicantBussinessExit', false)\n            vm.messageCheckApplicant = result.message\n            // toastr.error(result.message + ' Vui lòng kiểm tra lại mã số thuế')\n          } else if (result && result.hasOwnProperty('warning') && result.warning === true) {\n            vm.bussinessExits = true\n            vm.validBussinessInfos = false\n            // vm.$store.commit('setApplicantBussinessExit', false)\n            vm.messageCheckApplicant = result.message\n            // toastr.error(result.message + ' Vui lòng đối chiếu thông tin doanh nghiệp')\n          } else if (result && !result.hasOwnProperty('error') && !result.hasOwnProperty('warning')) {\n            vm.bussinessExits = true\n            vm.validBussinessInfos = true\n            // vm.$store.commit('setApplicantBussinessExit', filter['applicantIdNo'])\n          }\n        }).catch(function () {\n          vm.loadingVerify = false\n        })\n      }\n    },\n    getApplicantInfos () {\n      let vm = this\n      let filter = {\n        applicantIdNo: vm.thongTinChuHoSo.applicantIdNo\n      }\n      vm.$store.dispatch('getApplicantInfos', filter).then(result => {\n        vm.applicantInfos['applicantName'] = result['MainInformation']['NAME']\n        vm.applicantInfos['applicantIdNo'] = result['MainInformation']['ENTERPRISE_GDT_CODE']\n        vm.applicantInfos['address'] = result['HOAdress']['AddressFullText']\n        vm.applicantInfos['representatives'] = result['Representatives']['FULL_NAME']\n        vm.applicantInfos['companyType'] = result['MainInformation']['ENTERPRISE_TYPE_NAME']\n        vm.applicantInfos['companyStatus'] = result['MainInformation']['ENTERPRISE_STATUS_NAME']\n        vm.dialog_applicantInfos = true\n      })\n    }\n  }\n}\n</script>\n"]}]}