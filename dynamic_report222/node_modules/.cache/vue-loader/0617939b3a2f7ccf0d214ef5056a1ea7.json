{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/XuLyHoSo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/XuLyHoSo.vue","mtime":1548058113312},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n// import $ from 'jquery'\n// import '../store/jquery-comments'\nimport Comment from './Comment.vue'\nimport ThongTinCoBanHoSo from './form_xu_ly/ThongTinCoBanHoSo.vue'\nimport PhanCong from './form_xu_ly/PhanCongNguoiThucHien.vue'\nimport TraKetQua from './form_xu_ly/TraKetQua.vue'\nimport ThuPhi from './form_xu_ly/FeeDetail.vue'\nimport KyDuyet from './form_xu_ly/KyPheDuyetTaiLieu.vue'\nimport YkienCanBoThucHien from './form_xu_ly/YkienCanBoThucHien.vue'\nimport TaoTaiLieuKetQua from './form_xu_ly/TaoTaiLieuKetQua.vue'\nimport FormBoSungThongTinNgan from './form_xu_ly/FormBoSungThongTinNgan.vue'\nimport ThanhPhanHoSo from './TiepNhan/TiepNhanHoSo_ThanhPhanHoSo.vue'\nimport EditDate from './form_xu_ly/EditDate.vue'\nimport ExtendDateEdit from './form_xu_ly/ExtendDateEdit.vue'\nimport ThongTinBuuChinh from './form_xu_ly/ThongTinGuiBuuChinh.vue'\nexport default {\n  props: ['index'],\n  components: {\n    'thong-tin-co-ban-ho-so': ThongTinCoBanHoSo,\n    'phan-cong': PhanCong,\n    'tra-ket-qua': TraKetQua,\n    'thu-phi': ThuPhi,\n    'ky-duyet': KyDuyet,\n    'y-kien-can-bo': YkienCanBoThucHien,\n    'tai-lieu-ket-qua': TaoTaiLieuKetQua,\n    'form-bo-sung-thong-tin': FormBoSungThongTinNgan,\n    'thanh-phan-ho-so': ThanhPhanHoSo,\n    'ngay-hen-tra': EditDate,\n    'ngay-gia-han': ExtendDateEdit,\n    'thong-tin-buu-chinh': ThongTinBuuChinh\n  },\n  data: () => ({\n    headersTable: [\n      {\n        text: '#',\n        align: 'center',\n        sortable: false\n      },\n      {\n        text: 'Mã hồ sơ',\n        align: 'center',\n        sortable: false\n      },\n      {\n        text: 'Chủ hồ sơ',\n        align: 'center',\n        sortable: false\n      },\n      {\n        text: 'Địa chỉ',\n        align: 'center',\n        sortable: false\n      },\n      {\n        text: 'Thời gian',\n        align: 'center',\n        sortable: false\n      }\n    ],\n    mutilpleAction: false,\n    actionExits: [],\n    dossierProcess: [],\n    countProcessed: 0,\n    activeNotify: false,\n    dialog_statusAction: false,\n    thongTinChiTietHoSo: {\n    },\n    nextActions: [],\n    payments: '',\n    dossierActions: [],\n    itemselect: '',\n    actionNote: '',\n    actionsSubmitLoading: false,\n    showThongTinCoBanHoSo: false,\n    showYkienCanBoThucHien: false,\n    showFormBoSungThongTinNgan: false,\n    showPhanCongNguoiThucHien: false,\n    showTaoTaiLieuKetQua: false,\n    showKyPheDuyetTaiLieu: false,\n    showTraKetQua: false,\n    showThuPhi: false,\n    showEditDate: false,\n    showExtendDateEdit: false,\n    showPostalService: false,\n    dueDateEdit: '',\n    checkInput: 0,\n    viaPortalDetail: 0,\n    showThucHienThanhToanDienTu: false,\n    dossierItemDialogPick: '',\n    itemDialogPick: '',\n    resultDialogPick: '',\n    indexDialogPick: '',\n    userNote: 0,\n    partView: '',\n    stateView: false,\n    payment_type: 0,\n    type_assign: 0,\n    returnFiles: [],\n    assign_items: [],\n    btnStateVisible: true,\n    dialogActionProcess: false,\n    rollbackable: false,\n    dialogPDF: false,\n    dialogPDFLoading: false,\n    loadingActionProcess: false,\n    loadingAction: false,\n    arrDossierId: [],\n    actionActiveTmp: []\n  }),\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    },\n    originality () {\n      var vm = this\n      return vm.getOriginality()\n    },\n    dossierSelected () {\n      var vm = this\n      return vm.$store.getters.dossierSelected\n    },\n    actionActive () {\n      console.log('actionActive-------', this.$store.getters.actionActive)\n      return this.$store.getters.actionActive\n    },\n    activeGetCounter () {\n      return this.$store.getters.activeGetCounter\n    }\n  },\n  created () {\n    var vm = this\n    vm.$nextTick(function () {\n      vm.btnIndex = -1\n      let currentQuery = vm.$router.history.current.query\n      console.log('currentQuery', currentQuery)\n      if (vm.dossierSelected.length === 0) {\n        let arrDossier = []\n        if (currentQuery.hasOwnProperty('dossiers')) {\n          let arrDossierIdTemp = currentQuery.dossiers.split(',')\n          vm.arrDossierId = arrDossierIdTemp\n          arrDossierIdTemp.forEach(dossierId => {\n            arrDossier.push(vm.$store.dispatch('getDetailDossier', dossierId))\n          })\n          Promise.all(arrDossier).then(results => {\n            vm.$store.dispatch('loadDossierSelected', results)\n          }).catch(reject => {\n          })\n        }\n      } else {\n        let arrDossier = []\n        if (currentQuery.hasOwnProperty('dossiers')) {\n          let arrDossierIdTemp = currentQuery.dossiers.split(',')\n          vm.arrDossierId = arrDossierIdTemp\n          arrDossierIdTemp.forEach(dossierId => {\n            arrDossier.push(vm.$store.dispatch('getDetailDossier', dossierId))\n          })\n          Promise.all(arrDossier).then(results => {\n            vm.$store.dispatch('loadDossierSelected', results)\n          }).catch(reject => {\n          })\n        }\n      }\n      try {\n        if (vm.actionActive.action === undefined || vm.actionActive.action === null || vm.actionActive.action === '') {\n          let actionActive = JSON.parse(currentQuery.actionActive)\n          if (actionActive) {\n            vm.$store.dispatch('loadActionActive', actionActive)\n          }\n        }\n      } catch (e) {\n        console.log(e)\n      }\n      vm.getNextActions()\n      // if (currentQuery.hasOwnProperty('activeTab')) {\n      //   vm.activeTab = currentQuery.activeTab\n      //   vm.btnIndex = currentQuery['btnIndex']\n      //   vm.thongTinChiTietHoSo['dossierId'] = vm.id\n      //   vm.btnStateVisible = true\n      //   vm.getNextActions()\n      // }\n    })\n  },\n  updated () {\n    var vm = this\n    vm.$nextTick(function () {})\n  },\n  watch: {},\n  methods: {\n    initData (data) {\n      var vm = this\n    },\n    goBack () {\n      window.history.back()\n    },\n    processPullBtnDetailRouter (dossierItem, item, result, index) {\n      console.log('result Nextaction', result)\n      let vm = this\n      let isPopup = false\n      vm.dossierId = dossierItem.dossierId\n      vm.showYkienCanBoThucHien = false\n      vm.showFormBoSungThongTinNgan = false\n      vm.showPhanCongNguoiThucHien = false\n      vm.showTaoTaiLieuKetQua = false\n      vm.showKyPheDuyetTaiLieu = false\n      vm.showTraKetQua = false\n      vm.showThuPhi = false\n      vm.showEditDate = false\n      vm.showThucHienThanhToanDienTu = false\n      vm.dossierItemDialogPick = dossierItem\n      vm.itemDialogPick = item\n      vm.resultDialogPick = result\n      vm.indexDialogPick = index\n      vm.userNote = 0\n      if (result !== null && result !== undefined && result !== 'undefined' &&\n        (result.hasOwnProperty('userNote') || result.hasOwnProperty('extraForm') || result.hasOwnProperty('allowAssignUser') ||\n        result.hasOwnProperty('createFiles') || result.hasOwnProperty('eSignature') || result.hasOwnProperty('returnFiles') ||\n        result.hasOwnProperty('payment') || result.hasOwnProperty('checkInput'))) {\n        if (result.hasOwnProperty('userNote') && (result.userNote === 1 || result.userNote === '1' || result.userNote === 2 || result.userNote === '2')) {\n          isPopup = true\n          vm.showYkienCanBoThucHien = true\n          vm.userNote = result.userNote\n        }\n        if (result.hasOwnProperty('extraForm') && result.extraForm) {\n          isPopup = true\n          vm.showFormBoSungThongTinNgan = true\n        }\n        if (result.hasOwnProperty('allowAssignUser') && result.allowAssignUser !== 0) {\n          console.log('allowAssignUser', result.toUsers)\n          if (Array.isArray(result.toUsers)) {\n            vm.assign_items = result.toUsers\n          } else {\n            vm.assign_items = [result.toUsers]\n          }\n          vm.type_assign = result.allowAssignUser\n          isPopup = true\n          vm.showPhanCongNguoiThucHien = true\n        }\n        if (result.hasOwnProperty('createFiles') && result.createFiles !== null && result.createFiles !== undefined && result.createFiles !== 'undefined' && result.createFiles.length > 0) {\n          isPopup = true\n          vm.showTaoTaiLieuKetQua = true\n          vm.createFiles = result.createFiles\n        }\n        if (result.hasOwnProperty('eSignature') && result.eSignature) {\n          isPopup = true\n          vm.showKyPheDuyetTaiLieu = true\n        }\n        if (result.hasOwnProperty('returnFiles') && result.returnFiles !== null && result.returnFiles !== undefined && result.returnFiles !== 'undefined' && result.returnFiles.length > 0) {\n          isPopup = true\n          vm.showTraKetQua = true\n          vm.returnFiles = result.returnFiles\n        }\n        if (result.hasOwnProperty('payment') && result.payment !== null && result.payment !== undefined && result.payment !== 'undefined' && result.payment.requestPayment === 5) {\n          isPopup = true\n          vm.showThuPhi = true\n          vm.payments = result.payment\n          vm.viaPortalDetail = dossierItem.viaPostal\n        }\n        if (result.hasOwnProperty('checkInput') && result.checkInput !== null && result.checkInput !== undefined && result.checkInput !== 'undefined') {\n          vm.checkInput = result.checkInput\n          if (result.checkInput === 2) {\n            isPopup = true\n            vm.$refs.thanhphanhoso.initData(vm.thongTinChiTietHoSo)\n          }\n        }\n        if ((result.hasOwnProperty('receiving') && result.receiving !== null && result.receiving !== undefined && result.receiving !== 'undefined' && result.receiving.editable === true)) {\n          isPopup = true\n          vm.showEditDate = true\n          vm.dueDateEdit = result.receiving.dueDate !== '' ? new Date(result.receiving.dueDate) : ''\n          vm.receiveDateEdit = result.receiving.receiveDate\n        }\n      }\n      if (isPopup) {\n        vm.dialogActionProcess = true\n        vm.loadingActionProcess = false\n      }\n    },\n    processPullBtnDetail (item, index) {\n      let vm = this\n      vm.btnIndex = index\n      vm.itemAction = item\n      vm.actionIdCurrent = item.processActionId\n      let filter = {\n        dossierId: vm.dossierSelected[0].dossierId,\n        actionId: item.processActionId\n      }\n      vm.dialogActionProcess = false\n      vm.$store.dispatch('processPullBtnDetail', filter).then(function (result) {\n        vm.processPullBtnDetailRouter(vm.dossierSelected[0], item, result, index)\n      })\n    },\n    doCopy (dossierItem, item, index, isGroup) {\n      let vm = this\n      let filter = {\n        dossierId: dossierItem.dossierId\n      }\n      vm.loadingAction = true\n      vm.$store.dispatch('doCopy', filter).then(function (result) {\n        vm.loadingAction = false\n        vm.indexAction = -1\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n          query: vm.$router.history.current.query\n        })\n      })\n    },\n    doCancel (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.loadingAction = true\n      if (isGroup) {\n        console.log(vm.selected)\n      } else {\n        let filter = {\n          dossierId: dossierItem.dossierId\n        }\n        vm.$store.dispatch('doCancel', filter).then(function (result) {\n          vm.loadingAction = false\n          vm.indexAction = -1\n          vm.$router.push({\n            path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n            query: vm.$router.history.current.query\n          })\n        })\n      }\n    },\n    processAction () {\n      var vm = this\n      var initData = vm.$store.getters.loadingInitData\n      var actionUser = initData.user.userName ? initData.user.userName : ''\n      vm.dossierProcess = vm.dossierSelected.filter(function (item) {\n        return (item['statusAction'] === false || !item['statusAction'])\n      })\n      vm.countProcessed = 0\n      if (vm.mutilpleAction) {\n        for (let key in vm.actionExits) {\n          for (let key2 in vm.dossierSelected) {\n            if (vm.dossierSelected[key2]['statusAction'] === false || !vm.dossierSelected[key2]['statusAction']) {\n              let filter = {\n                dossierId: vm.dossierSelected[key2].dossierId,\n                actionCode: vm.actionExits[key].actionCode,\n                actionUser: actionUser\n              }\n              vm.postAction(filter, vm.dossierSelected[key2], key2)\n            }\n          }\n        }\n      } else {\n        for (let key in vm.dossierSelected) {\n          if (vm.dossierSelected[key]['statusAction'] === false || !vm.dossierSelected[key]['statusAction']) {\n            let filter = {\n              dossierId: vm.dossierSelected[key].dossierId,\n              actionCode: vm.actionActive.action,\n              actionUser: actionUser\n            }\n            vm.postAction(filter, vm.dossierSelected[key], key)\n          }\n        }\n      }\n    },\n    postAction (filter, dossier, index) {\n      var vm = this\n      var validPhanCong = true\n      var validYKien = true\n      if (vm.showPhanCongNguoiThucHien) {\n        filter['toUsers'] = vm.assign_items\n        let result = vm.$refs.phancong.doExport()\n        console.log('validPhanCong', result)\n        if (result) {\n          validPhanCong = true\n        } else {\n          validPhanCong = false\n        }\n      }\n      var paymentsOut = null\n      if (vm.payments) {\n        paymentsOut = {\n          requestPayment: vm.payments['requestPayment'],\n          advanceAmount: Number(vm.payments['advanceAmount'].toString().replace(/\\./g, '')),\n          feeAmount: Number(vm.payments['feeAmount'].toString().replace(/\\./g, '')),\n          serviceAmount: Number(vm.payments['serviceAmount'].toString().replace(/\\./g, '')),\n          shipAmount: Number(vm.payments['shipAmount'].toString().replace(/\\./g, ''))\n        }\n      }\n      if (vm.showThuPhi) {\n        filter['payment'] = paymentsOut\n      }\n      if (vm.showFormBoSungThongTinNgan) {\n        filter['payload'] = vm.$refs.formBoSungThongTinNgan.formSubmitData()\n      }\n      if (vm.showKyPheDuyetTaiLieu) {\n        let result = vm.$refs.kypheduyettailieu.doExport()\n      }\n      if (vm.showEditDate) {\n        let date = vm.$refs.ngayhentra.getDateInput()\n        console.log('dueDateEdit', date)\n        let payload = {\n          'dueDate': date,\n          'receiveDate': vm.receiveDateEdit\n        }\n        filter['payload'] = payload\n      }\n      if (vm.showYkienCanBoThucHien) {\n        let result = vm.$refs.ykiencanbo.doExport()\n        let note = ''\n        if (result.valid) {\n          validYKien = true\n          note = result.text\n        } else {\n          validYKien = false\n        }\n        filter['userNote'] = note\n      }\n      if (validPhanCong && validYKien) {\n        vm.validateAction = true\n      } else {\n        vm.validateAction = false\n      }\n      let currentQuery = vm.$router.history.current.query\n      if (vm.showYkienCanBoThucHien) {\n        if (vm.validateAction) {\n          vm.loadingActionProcess = true\n          vm.$store.dispatch('processDossierRouter', filter).then(function (result) {\n            vm.countProcessed += 1\n            vm.dossierSelected[index]['statusAction'] = true\n            // console.log('countProcessed', vm.countProcessed)\n            // console.log('length', vm.dossierProcess.length)\n            if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length && vm.activeNotify) {\n              vm.dialog_statusAction = true\n            } else if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length) {\n              vm.loadingActionProcess = false\n              vm.loadingAction = false\n              vm.btnStateVisible = false\n              setTimeout(function () {\n                vm.goBack()\n              }, 500)\n            }\n            // vm.$store.dispatch('getActiveGetCounter', !vm.activeGetCounter)\n          }).catch(function (reject) {\n            vm.countProcessed += 1\n            vm.activeNotify = true\n            vm.dossierSelected[index]['statusAction'] = false\n            // console.log('countProcessed', vm.countProcessed)\n            // console.log('length', vm.dossierProcess.length)\n            if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length && vm.activeNotify) {\n              vm.dialog_statusAction = true\n            } else if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length) {\n              vm.loadingActionProcess = false\n              vm.loadingAction = false\n              vm.btnStateVisible = false\n              setTimeout(function () {\n                vm.goBack()\n              }, 500)\n            }\n            // vm.$store.dispatch('getActiveGetCounter', !vm.activeGetCounter)\n          })\n        }\n      } else {\n        if (vm.validateAction) {\n          vm.loadingActionProcess = true\n          vm.$store.dispatch('processDossierRouter', filter).then(function (result) {\n            vm.countProcessed += 1\n            vm.dossierSelected[index]['statusAction'] = true\n            if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length && vm.activeNotify) {\n              vm.dialog_statusAction = true\n            } else if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length) {\n              vm.loadingActionProcess = false\n              vm.loadingAction = false\n              vm.btnStateVisible = false\n              setTimeout(function () {\n                vm.goBack()\n              }, 500)\n            }\n            // vm.$store.dispatch('getActiveGetCounter', !vm.activeGetCounter)\n          }).catch(function (reject) {\n            vm.countProcessed += 1\n            vm.activeNotify = true\n            vm.dossierSelected[index]['statusAction'] = false\n            if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length && vm.activeNotify) {\n              vm.dialog_statusAction = true\n            } else if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length) {\n              vm.loadingActionProcess = false\n              vm.loadingAction = false\n              vm.btnStateVisible = false\n              setTimeout(function () {\n                vm.goBack()\n              }, 500)\n            }\n            // vm.$store.dispatch('getActiveGetCounter', !vm.activeGetCounter)\n          })\n        }\n      }\n    },\n    doPrint02 (dossierItem, item, index, isGroup) {\n      let vm = this\n      if (vm.thuTucHanhChinhSelected === null || vm.thuTucHanhChinhSelected === undefined || vm.thuTucHanhChinhSelected === 'undefined') {\n        alert('Loại thủ tục bắt buộc phải chọn')\n      } else {\n        let filter = {\n          document: item.document,\n          'serviceCode': vm.thuTucHanhChinhSelected.serviceCode,\n          'govAgencyCode': vm.thuTucHanhChinhSelected.govAgencyCode,\n          dossiers: JSON.stringify(vm.selected)\n        }\n        vm.dialogPDFLoading = true\n        vm.dialogPDF = true\n        vm.$store.dispatch('doPrint02', filter).then(function (result) {\n          vm.dialogPDFLoading = false\n          document.getElementById('dialogPDFPreview').src = result\n        })\n      }\n    },\n    doPrint03 (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.dialogPDFLoading = true\n      vm.dialogPDF = true\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        document: item.document\n      }\n      vm.$store.dispatch('doPrint03', filter).then(function (result) {\n        vm.dialogPDFLoading = false\n        document.getElementById('dialogPDFPreview').src = result\n      })\n    },\n    doGuiding (dossierItem, item, index, isGroup) {\n      let vm = this\n      if (vm.thuTucHanhChinhSelected === null || vm.thuTucHanhChinhSelected === undefined || vm.thuTucHanhChinhSelected === 'undefined') {\n        alert('Loại thủ tục bắt buộc phải chọn')\n      } else {\n        let filter = {\n          serviceConfigId: vm.thuTucHanhChinhSelected.serviceConfigId\n        }\n        vm.dialogPDFLoading = true\n        vm.dialogPDF = true\n        vm.$store.dispatch('doGuiding', filter).then(function (result) {\n          vm.dialogPDFLoading = false\n          document.getElementById('dialogPDFPreview').src = result\n        })\n      }\n    },\n    getNextActions () {\n      let vm = this\n      console.log('run next action')\n      let query = vm.$router.history.current.query\n      let filter = {}\n      if (vm.dossierSelected.length > 0) {\n        filter['dossierId'] = vm.dossierSelected[0].dossierId\n      } else {\n        filter['dossierId'] = vm.arrDossierId[0]\n      }\n      let currentQuery = vm.$router.history.current.query\n      vm.$store.dispatch('pullNextactions', filter).then(function (result) {\n        // console.log('pullNextactions', result)\n        // console.log('actionActive.action', vm.actionActive.action.split(','))\n        result = result.filter(function (item) {\n          return item.enable === 1\n        })\n        var actionActiveArr = []\n        if (vm.actionActive.action !== undefined && vm.actionActive.action !== null && vm.actionActive.action !== 'undefined' && vm.actionActive.action !== '') {\n          actionActiveArr = vm.actionActive.action.split(',')\n        }\n        if (actionActiveArr.length === 1) {\n          vm.actionExits = actionActiveArr\n          let actionActive = result.filter(function (item) {\n            return item.actionCode.toString() === vm.actionActive.action.toString()\n          })\n          vm.dialogActionProcess = true\n          vm.mutilpleAction = false\n          vm.processPullBtnDetail(actionActive[0], currentQuery.btnIndex)\n        } else {\n          vm.mutilpleAction = true\n          vm.actionExits = []\n          for (let key in actionActiveArr) {\n            var active = false\n            var actionItem\n            for (let key2 in result) {\n              if (actionActiveArr[key].toString() === result[key2].actionCode.toString()) {\n                active = true\n                actionItem = result[key2]\n                break\n              }\n            }\n            if (active) {\n              vm.actionExits.push(actionItem)\n            }\n          }\n          vm.dialogActionProcess = true\n          console.log('actionExits', vm.actionExits[0])\n          if (vm.actionExits[0]) {\n            vm.processPullBtnDetail(vm.actionExits[0], currentQuery.btnIndex)\n          }\n        }\n      })\n    },\n    postNextActions (stepModel) {\n      var vm = this\n      stepModel['dossierId'] = vm.thongTinChiTietHoSo.dossierId\n      if (stepModel.allowAssignUser > 0) {\n        vm.$store.dispatch('reassignDossier', stepModel).then(resReassign => {\n          console.log(resReassign)\n          let params = {\n            dossierId: vm.dossierId,\n            actionCode: stepModel.actionCode,\n            actionNote: vm.actionNote,\n            actionUser: '',\n            payload: '',\n            security: '',\n            assignUsers: '',\n            payment: '',\n            createDossiers: ''\n          }\n          vm.$store.dispatch('postAction', params).then(resPostAction => {\n            console.log(resPostAction)\n          })\n        })\n      } else {\n        let params = {\n          dossierId: vm.dossierId,\n          actionCode: stepModel.actionCode,\n          actionNote: vm.actionNote,\n          actionUser: '',\n          payload: '',\n          security: '',\n          assignUsers: '',\n          payment: '',\n          createDossiers: ''\n        }\n        vm.$store.dispatch('postAction', params).then(resPostAction => {\n          console.log(resPostAction)\n        })\n      }\n    },\n    closeDialogStatusAction () {\n      let vm = this\n      vm.dialog_statusAction = false\n      vm.btnStateVisible = false\n      setTimeout(function () {\n        vm.goBack()\n      }, 500)\n    }\n  },\n  filters: {\n    dateTimeView (arg) {\n      if (arg) {\n        let value = new Date(arg)\n        return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()} | ${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}`\n      } else {\n        return ''\n      }\n    },\n    getMaxDueDate (arr) {\n      let maxDue = Math.max.apply(Math, arr.map(function (item) {\n        return item.actionOverdue\n      }))\n      return maxDue\n    }\n  }\n}\n",{"version":3,"sources":["XuLyHoSo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"XuLyHoSo.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <content-placeholders class=\"mt-3\" v-if=\"loading\">\n      <content-placeholders-text :lines=\"1\" />\n    </content-placeholders>\n    <div v-else-if=\"dossierSelected.length > 0\" class=\"row-header\">\n      <div class=\"background-triangle-big\"> <span>{{actionActive['tiltle'] ? actionActive['tiltle'] : 'XỬ LÝ HỒ SƠ'}}</span> </div>\n      <div class=\"layout row wrap header_tools row-blue\">\n        <div class=\"flex xs8 sm10 pl-3 text-ellipsis text-bold\" :title=\"dossierSelected[0].serviceName\">\n          {{dossierSelected[0].serviceName}}\n        </div>\n        <div class=\"flex xs4 sm2 text-right\" style=\"margin-left: auto;\">\n          <v-btn flat class=\"my-0 mx-0 btn-border-left\" @click=\"goBack\" active-class=\"temp_active\">\n            <v-icon size=\"16\">reply</v-icon> &nbsp;\n            Quay lại\n          </v-btn>\n        </div>\n      </div>\n    </div>\n    <v-expansion-panel :value=\"[true]\" class=\"expansion-pl\" v-if=\"dossierSelected.length > 0\">\n      <v-expansion-panel-content>\n        <!-- <div slot=\"header\">\n          <div class=\"background-triangle-small\"> <v-icon size=\"18\" color=\"white\">star_rate</v-icon></div>\n          HỒ SƠ XỬ LÝ &nbsp;&nbsp;&nbsp;&nbsp; \n        </div> -->\n        <v-card>\n          <v-card-text class=\"px-0 pt-0\">\n            <v-data-table\n            :headers=\"headersTable\"\n            :items=\"dossierSelected\"\n            hide-actions\n            class=\"table-landing table-bordered\"\n            >\n              <template slot=\"items\" slot-scope=\"props\">\n                <tr v-bind:class=\"{'active': props.index%2==1}\">\n                  <td class=\"text-xs-center\">\n                    <div>\n                      <span>{{props.index + 1}}</span>\n                    </div>\n                  </td>\n                  <td class=\"text-xs-left\">\n                    <div>\n                      <span>{{props.item.dossierNo}}</span><br>\n                      <span style=\"color:green\" v-if=\"!props.item.online\">Hồ sơ một cửa</span>\n                      <span style=\"color:blue\" v-else>Hồ sơ trực tuyến</span>\n                    </div>\n                  </td>\n                  <td class=\"text-xs-left\">\n                    <div>\n                      <span>{{props.item.applicantName}}</span>\n                    </div>\n                  </td>\n                  <td class=\"text-xs-left\">\n                    <div>\n                      <span>{{props.item.wardName}}, {{props.item.districtName}}, {{props.item.cityName}}</span>\n                    </div>\n                  </td>\n                  <td class=\"text-xs-left\">\n                    <div>\n                      <span> Tiếp nhận: {{props.item.receiveDate}}<br>\n                        Hẹn trả: {{props.item.receiveDate}}<br>\n                        <span>{{props.item.dossierOverdue}}</span>\n                      </span>\n                    </div>\n                  </td>\n                </tr>\n              </template>\n            </v-data-table>\n          </v-card-text>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n    <v-dialog v-model=\"dialogPDF\" max-width=\"900\" transition=\"fade-transition\">\n      <v-card>\n        <v-card-title class=\"headline\">File đính kèm</v-card-title>\n        <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"dialogPDF = false\">\n          <v-icon>clear</v-icon>\n        </v-btn>\n        <div v-if=\"dialogPDFLoading\" style=\"\n            min-height: 600px;\n            text-align: center;\n            margin: auto;\n            padding: 25%;\n        \">\n          <v-progress-circular\n            :size=\"100\"\n            :width=\"1\"\n            color=\"primary\"\n            indeterminate\n          ></v-progress-circular>\n        </div>\n        <iframe v-show=\"!dialogPDFLoading\" id=\"dialogPDFPreview\" src=\"\" type=\"application/pdf\" width=\"100%\" height=\"100%\" style=\"overflow: auto;min-height: 600px;\" frameborder=\"0\">\n        </iframe>\n      </v-card>\n    </v-dialog>\n    <!--  -->\n    <div>\n      <v-layout wrap v-if=\"btnStateVisible\">\n        <form-bo-sung-thong-tin v-if=\"showFormBoSungThongTinNgan\" ref=\"formBoSungThongTinNgan\" :dossier_id=\"Number(id)\" :action_id=\"Number(actionIdCurrent)\"></form-bo-sung-thong-tin>\n        <phan-cong v-if=\"showPhanCongNguoiThucHien\" ref=\"phancong\" v-model=\"assign_items\" :type=\"type_assign\" ></phan-cong>\n        <tai-lieu-ket-qua v-if=\"showTaoTaiLieuKetQua\" :detailDossier=\"thongTinChiTietHoSo\" :createFiles=\"createFiles\"></tai-lieu-ket-qua>\n        <ngay-gia-han v-if=\"showExtendDateEdit\" ref=\"ngaygiahan\" :type=\"typeExtendDate\" :extendDateEdit=\"extendDateEdit\"></ngay-gia-han>\n        <ngay-hen-tra v-if=\"showEditDate\" ref=\"ngayhentra\" :dueDateEdit=\"dueDateEdit\"></ngay-hen-tra>\n        <tra-ket-qua v-if=\"showTraKetQua\" :detailDossier=\"thongTinChiTietHoSo\" :createFiles=\"returnFiles\"></tra-ket-qua>\n        <thu-phi v-if=\"showThuPhi\" v-model=\"payments\" :viaPortal=\"viaPortalDetail\" :detailDossier=\"thongTinChiTietHoSo\"></thu-phi>\n        <thong-tin-buu-chinh v-if=\"showPostalService\" :postalService=\"thongTinChiTietHoSo\"></thong-tin-buu-chinh>\n        <y-kien-can-bo v-if=\"showYkienCanBoThucHien\" ref=\"ykiencanbo\" :user_note=\"userNote\"></y-kien-can-bo>\n        <div class=\"my-2 mx-3\">\n          <v-btn color=\"primary\" @click.native=\"processAction()\"\n          :loading=\"loadingActionProcess\"\n          :disabled=\"loadingActionProcess\"\n          >\n            <v-icon>save</v-icon>&nbsp;\n            Xác nhận\n            <span slot=\"loader\">Loading...</span>\n          </v-btn>\n          <v-btn color=\"primary\" @click=\"goBack()\">\n            <v-icon size=\"16\">reply</v-icon> &nbsp;\n            Quay lại\n          </v-btn>\n        </div>\n      </v-layout>\n      <v-alert v-if=\"!btnStateVisible\" outline color=\"success\" icon=\"check_circle\" :value=\"true\">\n        Thực hiện thành công!\n      </v-alert>\n    </div>\n    <v-dialog v-model=\"dialog_statusAction\" scrollable persistent max-width=\"700px\">\n      <v-card>\n        <v-card-title class=\"headline\">\n          Trạng thái xử lý\n        </v-card-title>\n        <v-btn icon dark class=\"mx-0 my-0 absolute__btn_panel mr-2\" @click.native=\"closeDialogStatusAction\">\n          <v-icon>clear</v-icon>\n        </v-btn>\n        <v-card-text style=\"max-height: 350px\">\n          <div v-for=\"(item, index) in dossierSelected\" v-bind:key=\"item.dossierId\">\n            <v-layout wrap class=\"py-1 align-center row-list-style\" style=\"border-bottom: 1px solid #ddd;position:relative\"> \n              <v-flex xs11>\n                <span class=\"text-bold\" style=\"position: absolute;\">{{index + 1}}.</span> \n                <div class=\"ml-4\"><span class=\"text-bold\">{{item.dossierNo}}</span> - {{item.applicantName}}</div>\n              </v-flex>\n              <v-flex xs1 class=\"text-right\">\n                <v-tooltip top v-if=\"item.statusAction\">\n                  <v-icon size=\"20\" color=\"primary\" slot=\"activator\">\n                    check\n                  </v-icon>\n                  <span>Thành công</span>\n                </v-tooltip>\n                <v-tooltip top v-else>\n                  <v-icon size=\"20\" color=\"red darken-3\" slot=\"activator\">\n                    block\n                  </v-icon>\n                  <span>Thất bại</span>\n                </v-tooltip>\n              </v-flex>\n            </v-layout>\n          </div>\n        </v-card-text>\n        <v-card-actions>\n          <v-spacer></v-spacer>\n          <v-btn color=\"primary\" @click.native=\"processAction()\" \n            :loading=\"loadingAction\"\n            :disabled=\"loadingAction\"\n          >\n            <v-icon size=\"20\">refresh</v-icon>&nbsp;\n            Thử lại\n            <span slot=\"loader\">Loading...</span>\n          </v-btn>\n          <v-btn color=\"red\" dark @click.native=\"closeDialogStatusAction\"\n            :loading=\"loadingAction\"\n            :disabled=\"loadingAction\"\n          >\n            <v-icon>undo</v-icon>&nbsp;\n            Thoát\n            <span slot=\"loader\">Loading...</span>\n          </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\n\n// import $ from 'jquery'\n// import '../store/jquery-comments'\nimport Comment from './Comment.vue'\nimport ThongTinCoBanHoSo from './form_xu_ly/ThongTinCoBanHoSo.vue'\nimport PhanCong from './form_xu_ly/PhanCongNguoiThucHien.vue'\nimport TraKetQua from './form_xu_ly/TraKetQua.vue'\nimport ThuPhi from './form_xu_ly/FeeDetail.vue'\nimport KyDuyet from './form_xu_ly/KyPheDuyetTaiLieu.vue'\nimport YkienCanBoThucHien from './form_xu_ly/YkienCanBoThucHien.vue'\nimport TaoTaiLieuKetQua from './form_xu_ly/TaoTaiLieuKetQua.vue'\nimport FormBoSungThongTinNgan from './form_xu_ly/FormBoSungThongTinNgan.vue'\nimport ThanhPhanHoSo from './TiepNhan/TiepNhanHoSo_ThanhPhanHoSo.vue'\nimport EditDate from './form_xu_ly/EditDate.vue'\nimport ExtendDateEdit from './form_xu_ly/ExtendDateEdit.vue'\nimport ThongTinBuuChinh from './form_xu_ly/ThongTinGuiBuuChinh.vue'\nexport default {\n  props: ['index'],\n  components: {\n    'thong-tin-co-ban-ho-so': ThongTinCoBanHoSo,\n    'phan-cong': PhanCong,\n    'tra-ket-qua': TraKetQua,\n    'thu-phi': ThuPhi,\n    'ky-duyet': KyDuyet,\n    'y-kien-can-bo': YkienCanBoThucHien,\n    'tai-lieu-ket-qua': TaoTaiLieuKetQua,\n    'form-bo-sung-thong-tin': FormBoSungThongTinNgan,\n    'thanh-phan-ho-so': ThanhPhanHoSo,\n    'ngay-hen-tra': EditDate,\n    'ngay-gia-han': ExtendDateEdit,\n    'thong-tin-buu-chinh': ThongTinBuuChinh\n  },\n  data: () => ({\n    headersTable: [\n      {\n        text: '#',\n        align: 'center',\n        sortable: false\n      },\n      {\n        text: 'Mã hồ sơ',\n        align: 'center',\n        sortable: false\n      },\n      {\n        text: 'Chủ hồ sơ',\n        align: 'center',\n        sortable: false\n      },\n      {\n        text: 'Địa chỉ',\n        align: 'center',\n        sortable: false\n      },\n      {\n        text: 'Thời gian',\n        align: 'center',\n        sortable: false\n      }\n    ],\n    mutilpleAction: false,\n    actionExits: [],\n    dossierProcess: [],\n    countProcessed: 0,\n    activeNotify: false,\n    dialog_statusAction: false,\n    thongTinChiTietHoSo: {\n    },\n    nextActions: [],\n    payments: '',\n    dossierActions: [],\n    itemselect: '',\n    actionNote: '',\n    actionsSubmitLoading: false,\n    showThongTinCoBanHoSo: false,\n    showYkienCanBoThucHien: false,\n    showFormBoSungThongTinNgan: false,\n    showPhanCongNguoiThucHien: false,\n    showTaoTaiLieuKetQua: false,\n    showKyPheDuyetTaiLieu: false,\n    showTraKetQua: false,\n    showThuPhi: false,\n    showEditDate: false,\n    showExtendDateEdit: false,\n    showPostalService: false,\n    dueDateEdit: '',\n    checkInput: 0,\n    viaPortalDetail: 0,\n    showThucHienThanhToanDienTu: false,\n    dossierItemDialogPick: '',\n    itemDialogPick: '',\n    resultDialogPick: '',\n    indexDialogPick: '',\n    userNote: 0,\n    partView: '',\n    stateView: false,\n    payment_type: 0,\n    type_assign: 0,\n    returnFiles: [],\n    assign_items: [],\n    btnStateVisible: true,\n    dialogActionProcess: false,\n    rollbackable: false,\n    dialogPDF: false,\n    dialogPDFLoading: false,\n    loadingActionProcess: false,\n    loadingAction: false,\n    arrDossierId: [],\n    actionActiveTmp: []\n  }),\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    },\n    originality () {\n      var vm = this\n      return vm.getOriginality()\n    },\n    dossierSelected () {\n      var vm = this\n      return vm.$store.getters.dossierSelected\n    },\n    actionActive () {\n      console.log('actionActive-------', this.$store.getters.actionActive)\n      return this.$store.getters.actionActive\n    },\n    activeGetCounter () {\n      return this.$store.getters.activeGetCounter\n    }\n  },\n  created () {\n    var vm = this\n    vm.$nextTick(function () {\n      vm.btnIndex = -1\n      let currentQuery = vm.$router.history.current.query\n      console.log('currentQuery', currentQuery)\n      if (vm.dossierSelected.length === 0) {\n        let arrDossier = []\n        if (currentQuery.hasOwnProperty('dossiers')) {\n          let arrDossierIdTemp = currentQuery.dossiers.split(',')\n          vm.arrDossierId = arrDossierIdTemp\n          arrDossierIdTemp.forEach(dossierId => {\n            arrDossier.push(vm.$store.dispatch('getDetailDossier', dossierId))\n          })\n          Promise.all(arrDossier).then(results => {\n            vm.$store.dispatch('loadDossierSelected', results)\n          }).catch(reject => {\n          })\n        }\n      } else {\n        let arrDossier = []\n        if (currentQuery.hasOwnProperty('dossiers')) {\n          let arrDossierIdTemp = currentQuery.dossiers.split(',')\n          vm.arrDossierId = arrDossierIdTemp\n          arrDossierIdTemp.forEach(dossierId => {\n            arrDossier.push(vm.$store.dispatch('getDetailDossier', dossierId))\n          })\n          Promise.all(arrDossier).then(results => {\n            vm.$store.dispatch('loadDossierSelected', results)\n          }).catch(reject => {\n          })\n        }\n      }\n      try {\n        if (vm.actionActive.action === undefined || vm.actionActive.action === null || vm.actionActive.action === '') {\n          let actionActive = JSON.parse(currentQuery.actionActive)\n          if (actionActive) {\n            vm.$store.dispatch('loadActionActive', actionActive)\n          }\n        }\n      } catch (e) {\n        console.log(e)\n      }\n      vm.getNextActions()\n      // if (currentQuery.hasOwnProperty('activeTab')) {\n      //   vm.activeTab = currentQuery.activeTab\n      //   vm.btnIndex = currentQuery['btnIndex']\n      //   vm.thongTinChiTietHoSo['dossierId'] = vm.id\n      //   vm.btnStateVisible = true\n      //   vm.getNextActions()\n      // }\n    })\n  },\n  updated () {\n    var vm = this\n    vm.$nextTick(function () {})\n  },\n  watch: {},\n  methods: {\n    initData (data) {\n      var vm = this\n    },\n    goBack () {\n      window.history.back()\n    },\n    processPullBtnDetailRouter (dossierItem, item, result, index) {\n      console.log('result Nextaction', result)\n      let vm = this\n      let isPopup = false\n      vm.dossierId = dossierItem.dossierId\n      vm.showYkienCanBoThucHien = false\n      vm.showFormBoSungThongTinNgan = false\n      vm.showPhanCongNguoiThucHien = false\n      vm.showTaoTaiLieuKetQua = false\n      vm.showKyPheDuyetTaiLieu = false\n      vm.showTraKetQua = false\n      vm.showThuPhi = false\n      vm.showEditDate = false\n      vm.showThucHienThanhToanDienTu = false\n      vm.dossierItemDialogPick = dossierItem\n      vm.itemDialogPick = item\n      vm.resultDialogPick = result\n      vm.indexDialogPick = index\n      vm.userNote = 0\n      if (result !== null && result !== undefined && result !== 'undefined' &&\n        (result.hasOwnProperty('userNote') || result.hasOwnProperty('extraForm') || result.hasOwnProperty('allowAssignUser') ||\n        result.hasOwnProperty('createFiles') || result.hasOwnProperty('eSignature') || result.hasOwnProperty('returnFiles') ||\n        result.hasOwnProperty('payment') || result.hasOwnProperty('checkInput'))) {\n        if (result.hasOwnProperty('userNote') && (result.userNote === 1 || result.userNote === '1' || result.userNote === 2 || result.userNote === '2')) {\n          isPopup = true\n          vm.showYkienCanBoThucHien = true\n          vm.userNote = result.userNote\n        }\n        if (result.hasOwnProperty('extraForm') && result.extraForm) {\n          isPopup = true\n          vm.showFormBoSungThongTinNgan = true\n        }\n        if (result.hasOwnProperty('allowAssignUser') && result.allowAssignUser !== 0) {\n          console.log('allowAssignUser', result.toUsers)\n          if (Array.isArray(result.toUsers)) {\n            vm.assign_items = result.toUsers\n          } else {\n            vm.assign_items = [result.toUsers]\n          }\n          vm.type_assign = result.allowAssignUser\n          isPopup = true\n          vm.showPhanCongNguoiThucHien = true\n        }\n        if (result.hasOwnProperty('createFiles') && result.createFiles !== null && result.createFiles !== undefined && result.createFiles !== 'undefined' && result.createFiles.length > 0) {\n          isPopup = true\n          vm.showTaoTaiLieuKetQua = true\n          vm.createFiles = result.createFiles\n        }\n        if (result.hasOwnProperty('eSignature') && result.eSignature) {\n          isPopup = true\n          vm.showKyPheDuyetTaiLieu = true\n        }\n        if (result.hasOwnProperty('returnFiles') && result.returnFiles !== null && result.returnFiles !== undefined && result.returnFiles !== 'undefined' && result.returnFiles.length > 0) {\n          isPopup = true\n          vm.showTraKetQua = true\n          vm.returnFiles = result.returnFiles\n        }\n        if (result.hasOwnProperty('payment') && result.payment !== null && result.payment !== undefined && result.payment !== 'undefined' && result.payment.requestPayment === 5) {\n          isPopup = true\n          vm.showThuPhi = true\n          vm.payments = result.payment\n          vm.viaPortalDetail = dossierItem.viaPostal\n        }\n        if (result.hasOwnProperty('checkInput') && result.checkInput !== null && result.checkInput !== undefined && result.checkInput !== 'undefined') {\n          vm.checkInput = result.checkInput\n          if (result.checkInput === 2) {\n            isPopup = true\n            vm.$refs.thanhphanhoso.initData(vm.thongTinChiTietHoSo)\n          }\n        }\n        if ((result.hasOwnProperty('receiving') && result.receiving !== null && result.receiving !== undefined && result.receiving !== 'undefined' && result.receiving.editable === true)) {\n          isPopup = true\n          vm.showEditDate = true\n          vm.dueDateEdit = result.receiving.dueDate !== '' ? new Date(result.receiving.dueDate) : ''\n          vm.receiveDateEdit = result.receiving.receiveDate\n        }\n      }\n      if (isPopup) {\n        vm.dialogActionProcess = true\n        vm.loadingActionProcess = false\n      }\n    },\n    processPullBtnDetail (item, index) {\n      let vm = this\n      vm.btnIndex = index\n      vm.itemAction = item\n      vm.actionIdCurrent = item.processActionId\n      let filter = {\n        dossierId: vm.dossierSelected[0].dossierId,\n        actionId: item.processActionId\n      }\n      vm.dialogActionProcess = false\n      vm.$store.dispatch('processPullBtnDetail', filter).then(function (result) {\n        vm.processPullBtnDetailRouter(vm.dossierSelected[0], item, result, index)\n      })\n    },\n    doCopy (dossierItem, item, index, isGroup) {\n      let vm = this\n      let filter = {\n        dossierId: dossierItem.dossierId\n      }\n      vm.loadingAction = true\n      vm.$store.dispatch('doCopy', filter).then(function (result) {\n        vm.loadingAction = false\n        vm.indexAction = -1\n        vm.$router.push({\n          path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n          query: vm.$router.history.current.query\n        })\n      })\n    },\n    doCancel (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.loadingAction = true\n      if (isGroup) {\n        console.log(vm.selected)\n      } else {\n        let filter = {\n          dossierId: dossierItem.dossierId\n        }\n        vm.$store.dispatch('doCancel', filter).then(function (result) {\n          vm.loadingAction = false\n          vm.indexAction = -1\n          vm.$router.push({\n            path: '/danh-sach-ho-so/' + vm.index + '/ho-so/' + result.dossierId + '/' + vm.itemAction.form,\n            query: vm.$router.history.current.query\n          })\n        })\n      }\n    },\n    processAction () {\n      var vm = this\n      var initData = vm.$store.getters.loadingInitData\n      var actionUser = initData.user.userName ? initData.user.userName : ''\n      vm.dossierProcess = vm.dossierSelected.filter(function (item) {\n        return (item['statusAction'] === false || !item['statusAction'])\n      })\n      vm.countProcessed = 0\n      if (vm.mutilpleAction) {\n        for (let key in vm.actionExits) {\n          for (let key2 in vm.dossierSelected) {\n            if (vm.dossierSelected[key2]['statusAction'] === false || !vm.dossierSelected[key2]['statusAction']) {\n              let filter = {\n                dossierId: vm.dossierSelected[key2].dossierId,\n                actionCode: vm.actionExits[key].actionCode,\n                actionUser: actionUser\n              }\n              vm.postAction(filter, vm.dossierSelected[key2], key2)\n            }\n          }\n        }\n      } else {\n        for (let key in vm.dossierSelected) {\n          if (vm.dossierSelected[key]['statusAction'] === false || !vm.dossierSelected[key]['statusAction']) {\n            let filter = {\n              dossierId: vm.dossierSelected[key].dossierId,\n              actionCode: vm.actionActive.action,\n              actionUser: actionUser\n            }\n            vm.postAction(filter, vm.dossierSelected[key], key)\n          }\n        }\n      }\n    },\n    postAction (filter, dossier, index) {\n      var vm = this\n      var validPhanCong = true\n      var validYKien = true\n      if (vm.showPhanCongNguoiThucHien) {\n        filter['toUsers'] = vm.assign_items\n        let result = vm.$refs.phancong.doExport()\n        console.log('validPhanCong', result)\n        if (result) {\n          validPhanCong = true\n        } else {\n          validPhanCong = false\n        }\n      }\n      var paymentsOut = null\n      if (vm.payments) {\n        paymentsOut = {\n          requestPayment: vm.payments['requestPayment'],\n          advanceAmount: Number(vm.payments['advanceAmount'].toString().replace(/\\./g, '')),\n          feeAmount: Number(vm.payments['feeAmount'].toString().replace(/\\./g, '')),\n          serviceAmount: Number(vm.payments['serviceAmount'].toString().replace(/\\./g, '')),\n          shipAmount: Number(vm.payments['shipAmount'].toString().replace(/\\./g, ''))\n        }\n      }\n      if (vm.showThuPhi) {\n        filter['payment'] = paymentsOut\n      }\n      if (vm.showFormBoSungThongTinNgan) {\n        filter['payload'] = vm.$refs.formBoSungThongTinNgan.formSubmitData()\n      }\n      if (vm.showKyPheDuyetTaiLieu) {\n        let result = vm.$refs.kypheduyettailieu.doExport()\n      }\n      if (vm.showEditDate) {\n        let date = vm.$refs.ngayhentra.getDateInput()\n        console.log('dueDateEdit', date)\n        let payload = {\n          'dueDate': date,\n          'receiveDate': vm.receiveDateEdit\n        }\n        filter['payload'] = payload\n      }\n      if (vm.showYkienCanBoThucHien) {\n        let result = vm.$refs.ykiencanbo.doExport()\n        let note = ''\n        if (result.valid) {\n          validYKien = true\n          note = result.text\n        } else {\n          validYKien = false\n        }\n        filter['userNote'] = note\n      }\n      if (validPhanCong && validYKien) {\n        vm.validateAction = true\n      } else {\n        vm.validateAction = false\n      }\n      let currentQuery = vm.$router.history.current.query\n      if (vm.showYkienCanBoThucHien) {\n        if (vm.validateAction) {\n          vm.loadingActionProcess = true\n          vm.$store.dispatch('processDossierRouter', filter).then(function (result) {\n            vm.countProcessed += 1\n            vm.dossierSelected[index]['statusAction'] = true\n            // console.log('countProcessed', vm.countProcessed)\n            // console.log('length', vm.dossierProcess.length)\n            if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length && vm.activeNotify) {\n              vm.dialog_statusAction = true\n            } else if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length) {\n              vm.loadingActionProcess = false\n              vm.loadingAction = false\n              vm.btnStateVisible = false\n              setTimeout(function () {\n                vm.goBack()\n              }, 500)\n            }\n            // vm.$store.dispatch('getActiveGetCounter', !vm.activeGetCounter)\n          }).catch(function (reject) {\n            vm.countProcessed += 1\n            vm.activeNotify = true\n            vm.dossierSelected[index]['statusAction'] = false\n            // console.log('countProcessed', vm.countProcessed)\n            // console.log('length', vm.dossierProcess.length)\n            if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length && vm.activeNotify) {\n              vm.dialog_statusAction = true\n            } else if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length) {\n              vm.loadingActionProcess = false\n              vm.loadingAction = false\n              vm.btnStateVisible = false\n              setTimeout(function () {\n                vm.goBack()\n              }, 500)\n            }\n            // vm.$store.dispatch('getActiveGetCounter', !vm.activeGetCounter)\n          })\n        }\n      } else {\n        if (vm.validateAction) {\n          vm.loadingActionProcess = true\n          vm.$store.dispatch('processDossierRouter', filter).then(function (result) {\n            vm.countProcessed += 1\n            vm.dossierSelected[index]['statusAction'] = true\n            if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length && vm.activeNotify) {\n              vm.dialog_statusAction = true\n            } else if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length) {\n              vm.loadingActionProcess = false\n              vm.loadingAction = false\n              vm.btnStateVisible = false\n              setTimeout(function () {\n                vm.goBack()\n              }, 500)\n            }\n            // vm.$store.dispatch('getActiveGetCounter', !vm.activeGetCounter)\n          }).catch(function (reject) {\n            vm.countProcessed += 1\n            vm.activeNotify = true\n            vm.dossierSelected[index]['statusAction'] = false\n            if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length && vm.activeNotify) {\n              vm.dialog_statusAction = true\n            } else if (vm.countProcessed === vm.dossierProcess.length * vm.actionExits.length) {\n              vm.loadingActionProcess = false\n              vm.loadingAction = false\n              vm.btnStateVisible = false\n              setTimeout(function () {\n                vm.goBack()\n              }, 500)\n            }\n            // vm.$store.dispatch('getActiveGetCounter', !vm.activeGetCounter)\n          })\n        }\n      }\n    },\n    doPrint02 (dossierItem, item, index, isGroup) {\n      let vm = this\n      if (vm.thuTucHanhChinhSelected === null || vm.thuTucHanhChinhSelected === undefined || vm.thuTucHanhChinhSelected === 'undefined') {\n        alert('Loại thủ tục bắt buộc phải chọn')\n      } else {\n        let filter = {\n          document: item.document,\n          'serviceCode': vm.thuTucHanhChinhSelected.serviceCode,\n          'govAgencyCode': vm.thuTucHanhChinhSelected.govAgencyCode,\n          dossiers: JSON.stringify(vm.selected)\n        }\n        vm.dialogPDFLoading = true\n        vm.dialogPDF = true\n        vm.$store.dispatch('doPrint02', filter).then(function (result) {\n          vm.dialogPDFLoading = false\n          document.getElementById('dialogPDFPreview').src = result\n        })\n      }\n    },\n    doPrint03 (dossierItem, item, index, isGroup) {\n      let vm = this\n      vm.dialogPDFLoading = true\n      vm.dialogPDF = true\n      let filter = {\n        dossierId: dossierItem.dossierId,\n        document: item.document\n      }\n      vm.$store.dispatch('doPrint03', filter).then(function (result) {\n        vm.dialogPDFLoading = false\n        document.getElementById('dialogPDFPreview').src = result\n      })\n    },\n    doGuiding (dossierItem, item, index, isGroup) {\n      let vm = this\n      if (vm.thuTucHanhChinhSelected === null || vm.thuTucHanhChinhSelected === undefined || vm.thuTucHanhChinhSelected === 'undefined') {\n        alert('Loại thủ tục bắt buộc phải chọn')\n      } else {\n        let filter = {\n          serviceConfigId: vm.thuTucHanhChinhSelected.serviceConfigId\n        }\n        vm.dialogPDFLoading = true\n        vm.dialogPDF = true\n        vm.$store.dispatch('doGuiding', filter).then(function (result) {\n          vm.dialogPDFLoading = false\n          document.getElementById('dialogPDFPreview').src = result\n        })\n      }\n    },\n    getNextActions () {\n      let vm = this\n      console.log('run next action')\n      let query = vm.$router.history.current.query\n      let filter = {}\n      if (vm.dossierSelected.length > 0) {\n        filter['dossierId'] = vm.dossierSelected[0].dossierId\n      } else {\n        filter['dossierId'] = vm.arrDossierId[0]\n      }\n      let currentQuery = vm.$router.history.current.query\n      vm.$store.dispatch('pullNextactions', filter).then(function (result) {\n        // console.log('pullNextactions', result)\n        // console.log('actionActive.action', vm.actionActive.action.split(','))\n        result = result.filter(function (item) {\n          return item.enable === 1\n        })\n        var actionActiveArr = []\n        if (vm.actionActive.action !== undefined && vm.actionActive.action !== null && vm.actionActive.action !== 'undefined' && vm.actionActive.action !== '') {\n          actionActiveArr = vm.actionActive.action.split(',')\n        }\n        if (actionActiveArr.length === 1) {\n          vm.actionExits = actionActiveArr\n          let actionActive = result.filter(function (item) {\n            return item.actionCode.toString() === vm.actionActive.action.toString()\n          })\n          vm.dialogActionProcess = true\n          vm.mutilpleAction = false\n          vm.processPullBtnDetail(actionActive[0], currentQuery.btnIndex)\n        } else {\n          vm.mutilpleAction = true\n          vm.actionExits = []\n          for (let key in actionActiveArr) {\n            var active = false\n            var actionItem\n            for (let key2 in result) {\n              if (actionActiveArr[key].toString() === result[key2].actionCode.toString()) {\n                active = true\n                actionItem = result[key2]\n                break\n              }\n            }\n            if (active) {\n              vm.actionExits.push(actionItem)\n            }\n          }\n          vm.dialogActionProcess = true\n          console.log('actionExits', vm.actionExits[0])\n          if (vm.actionExits[0]) {\n            vm.processPullBtnDetail(vm.actionExits[0], currentQuery.btnIndex)\n          }\n        }\n      })\n    },\n    postNextActions (stepModel) {\n      var vm = this\n      stepModel['dossierId'] = vm.thongTinChiTietHoSo.dossierId\n      if (stepModel.allowAssignUser > 0) {\n        vm.$store.dispatch('reassignDossier', stepModel).then(resReassign => {\n          console.log(resReassign)\n          let params = {\n            dossierId: vm.dossierId,\n            actionCode: stepModel.actionCode,\n            actionNote: vm.actionNote,\n            actionUser: '',\n            payload: '',\n            security: '',\n            assignUsers: '',\n            payment: '',\n            createDossiers: ''\n          }\n          vm.$store.dispatch('postAction', params).then(resPostAction => {\n            console.log(resPostAction)\n          })\n        })\n      } else {\n        let params = {\n          dossierId: vm.dossierId,\n          actionCode: stepModel.actionCode,\n          actionNote: vm.actionNote,\n          actionUser: '',\n          payload: '',\n          security: '',\n          assignUsers: '',\n          payment: '',\n          createDossiers: ''\n        }\n        vm.$store.dispatch('postAction', params).then(resPostAction => {\n          console.log(resPostAction)\n        })\n      }\n    },\n    closeDialogStatusAction () {\n      let vm = this\n      vm.dialog_statusAction = false\n      vm.btnStateVisible = false\n      setTimeout(function () {\n        vm.goBack()\n      }, 500)\n    }\n  },\n  filters: {\n    dateTimeView (arg) {\n      if (arg) {\n        let value = new Date(arg)\n        return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()} | ${value.getHours().toString().padStart(2, '0')}:${value.getMinutes().toString().padStart(2, '0')}`\n      } else {\n        return ''\n      }\n    },\n    getMaxDueDate (arr) {\n      let maxDue = Math.max.apply(Math, arr.map(function (item) {\n        return item.actionOverdue\n      }))\n      return maxDue\n    }\n  }\n}\n</script>\n"]}]}