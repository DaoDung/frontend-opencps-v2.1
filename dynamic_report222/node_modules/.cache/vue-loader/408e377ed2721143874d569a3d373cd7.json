{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/form_xu_ly/Captcha.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/form_xu_ly/Captcha.vue","mtime":1548065606140},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport Vue from 'vue'\nimport $ from 'jquery'\nimport VueDraggable from 'vue-draggable'\nVue.use(VueDraggable)\nexport default {\n  props: ['index'],\n  components: {\n  },\n  data: () => ({\n    options: {},\n    arrCaptcha: [],\n    captcha: '',\n    currentlyDragging: null,\n    loggedEvent: '',\n    images: [{name: 'Image 1', src: 'http://placehold.it/100/000000/ffffff'},\n    {name: 'Image 2', src: 'http://placehold.it/100/C93742/ffffff'},\n    {name: 'Image 3', src: 'http://placehold.it/100/6894D1/ffffff'}\n    ]\n  }),\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    }\n  },\n  created () {\n    var vm = this\n    vm.makeRandomString()\n    vm.shuffleArrCaptcha(vm.arrCaptcha)\n  },\n  watch: {\n  },\n  methods: {\n    makeRandomString () {\n      var vm = this\n      var text = ''\n      var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n      for (var i = 0; i < 4; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\n      }\n      if (text) {\n        vm.arrCaptcha = vm.shuffleArrCaptcha(text.split(''))\n      }\n      vm.captcha = text\n    },\n    shuffleArrCaptcha (arra1) {\n      var ctr = arra1.length\n      var temp = null\n      var index = 0\n      while (ctr > 0) {\n        index = Math.floor(Math.random() * ctr)\n        ctr--\n        temp = arra1[ctr]\n        arra1[ctr] = arra1[index]\n        arra1[index] = temp\n      }\n      return arra1\n    },\n    checkValidCatcha () {\n      var vm = this\n      var str = ''\n      let items = $('#captcha').children()\n      console.log(items)\n      for (var i = 0; i < items.length; i++) {\n        str += items[i].innerHTML\n      }\n      if (vm.captcha === str) {\n        return true\n      } else {\n        return false\n      }\n    }\n  },\n  filters: {\n    dateTimeView (arg) {\n      if (arg) {\n        let value = new Date(arg)\n        return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()}`\n      } else {\n        return ''\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Captcha.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Captcha.vue","sourceRoot":"src/components/form_xu_ly","sourcesContent":["<template>\n  <div> \n    <v-flex xs12 sm12 class=\"text-xs-center\">\n      <span>Kéo thả các ô vuông đúng thứ tự của từ</span> <br>\n      <v-chip label style=\"background-color: #81D4FA;\" text-color=\"white\">\n        {{captcha}}\n      </v-chip>\n    </v-flex>\n    <div v-drag-and-drop:options=\"options\" class=\"drag-wrapper text-xs-center mt-3\">\n      <ul id=\"captcha\">\n        <li class=\"item-captcha\" v-for=\"(item, index) in arrCaptcha\" :key=\"index\" style=\"padding: 10px 15px; background-color: #81D4FA; margin-right: 2px; color: #fff; font-weight: bold;\">{{item}}</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport Vue from 'vue'\nimport $ from 'jquery'\nimport VueDraggable from 'vue-draggable'\nVue.use(VueDraggable)\nexport default {\n  props: ['index'],\n  components: {\n  },\n  data: () => ({\n    options: {},\n    arrCaptcha: [],\n    captcha: '',\n    currentlyDragging: null,\n    loggedEvent: '',\n    images: [{name: 'Image 1', src: 'http://placehold.it/100/000000/ffffff'},\n    {name: 'Image 2', src: 'http://placehold.it/100/C93742/ffffff'},\n    {name: 'Image 3', src: 'http://placehold.it/100/6894D1/ffffff'}\n    ]\n  }),\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    }\n  },\n  created () {\n    var vm = this\n    vm.makeRandomString()\n    vm.shuffleArrCaptcha(vm.arrCaptcha)\n  },\n  watch: {\n  },\n  methods: {\n    makeRandomString () {\n      var vm = this\n      var text = ''\n      var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n      for (var i = 0; i < 4; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\n      }\n      if (text) {\n        vm.arrCaptcha = vm.shuffleArrCaptcha(text.split(''))\n      }\n      vm.captcha = text\n    },\n    shuffleArrCaptcha (arra1) {\n      var ctr = arra1.length\n      var temp = null\n      var index = 0\n      while (ctr > 0) {\n        index = Math.floor(Math.random() * ctr)\n        ctr--\n        temp = arra1[ctr]\n        arra1[ctr] = arra1[index]\n        arra1[index] = temp\n      }\n      return arra1\n    },\n    checkValidCatcha () {\n      var vm = this\n      var str = ''\n      let items = $('#captcha').children()\n      console.log(items)\n      for (var i = 0; i < items.length; i++) {\n        str += items[i].innerHTML\n      }\n      if (vm.captcha === str) {\n        return true\n      } else {\n        return false\n      }\n    }\n  },\n  filters: {\n    dateTimeView (arg) {\n      if (arg) {\n        let value = new Date(arg)\n        return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()}`\n      } else {\n        return ''\n      }\n    }\n  }\n}\n</script>\n"]}]}