{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/screens/CsvDownload.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/screens/CsvDownload.vue","mtime":1548055809983},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport json2csv from 'json2csv';\nexport default {\n    props: {\n        fields: undefined,\n        data: undefined,\n        downloadname: 'export.pdf',\n        pdfblob: null\n    },\n    data: () => ({\n        dataToExport: '',\n        myPdfToConvert: null\n    }),\n    created () {\n        var vm = this\n        vm.$nextTick(function () {\n            // vm.myPdfToConvert = new File([vm.pdfblob], new Date().getTime() + '.pdf', {lastModified: new Date().getTime()})\n            vm.myPdfToConvert = new Blob([vm.pdfblob], {type: 'application/pdf'})\n        })\n    },\n    computed: {\n        downloadUrl() {\n            return this.data.length > 0 ? \"data:text/csv;charset=UTF-8,%EF%BB%BF\" + encodeURIComponent(this.dataToExport) : 'javascript:void(0);';\n        }\n    },\n    methods: {\n        doDownloadXlsx () {\n            let vm = this\n            let filter = {\n                file: vm.myPdfToConvert\n            }\n            console.log(filter)\n            vm.$store.dispatch('doExportXlsx', filter)\n        }\n    }\n}\n",{"version":3,"sources":["CsvDownload.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CsvDownload.vue","sourceRoot":"src/components/screens","sourcesContent":["<template>\n    <v-btn flat class=\"mx-0 my-0\" v-on:click.native=\"doDownloadXlsx\">\n       <v-icon>receipt</v-icon> &nbsp; Táº£i Excel\n    </v-btn>\n</template>\n\n<script>\nimport json2csv from 'json2csv';\nexport default {\n    props: {\n        fields: undefined,\n        data: undefined,\n        downloadname: 'export.pdf',\n        pdfblob: null\n    },\n    data: () => ({\n        dataToExport: '',\n        myPdfToConvert: null\n    }),\n    created () {\n        var vm = this\n        vm.$nextTick(function () {\n            // vm.myPdfToConvert = new File([vm.pdfblob], new Date().getTime() + '.pdf', {lastModified: new Date().getTime()})\n            vm.myPdfToConvert = new Blob([vm.pdfblob], {type: 'application/pdf'})\n        })\n    },\n    computed: {\n        downloadUrl() {\n            return this.data.length > 0 ? \"data:text/csv;charset=UTF-8,%EF%BB%BF\" + encodeURIComponent(this.dataToExport) : 'javascript:void(0);';\n        }\n    },\n    methods: {\n        doDownloadXlsx () {\n            let vm = this\n            let filter = {\n                file: vm.myPdfToConvert\n            }\n            console.log(filter)\n            vm.$store.dispatch('doExportXlsx', filter)\n        }\n    }\n}\n</script>"]}]}