{"remainingRequest":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/form_xu_ly/FormBoSungThongTinNgan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/src/components/form_xu_ly/FormBoSungThongTinNgan.vue","mtime":1548065607028},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/binhthgc/Documents/fds/github/frontend-opencps-v2.1/dynamic_report/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueCtkDateTimePicker from 'vue-ctk-date-time-picker'\nexport default {\n  components: {\n    'vue-ctk-date-time-picker': VueCtkDateTimePicker\n  },\n  props: {\n    dossier_id: {\n      type: Number\n    },\n    action_id: {\n      type: Number\n    },\n    type: {\n      type: String,\n      default: () => ''\n    }\n  },\n  data: () => ({\n    itemId: null,\n    fieldNameID: '',\n    date: null,\n    dialog: false,\n    formBuilder: [],\n    valid: false,\n    valid2: false,\n    rulesValid: {\n      number: function (value) {\n        var pattern = /^\\d+$/\n        return pattern.test(value) || 'Kiểu dữ liệu sai định dạng.'\n      }\n    },\n    rules: {\n      required: (value) => !!value || 'Trường dữ liệu bắt buộc',\n      number: function (value) {\n        const pattern = /^\\d+$/\n        return pattern.test(value) || 'Kiểu dữ liệu sai định dạng.'\n      }\n    }\n  }),\n  watch: {\n    dossier_id () {\n      let vm = this\n      let filter = {\n        dossierId: vm.dossier_id,\n        actionId: vm.action_id\n      }\n      vm.$store.dispatch('getExtraForm', filter).then(function (result) {\n        vm.formBuilder = result\n        if (vm.formBuilder.length > 0) {\n          for (let key in vm.formBuilder) {\n            if (vm.formBuilder[key]['fieldType'] === 'date' && vm.formBuilder[key]['value'] && isNaN(new Date(vm.formBuilder[key]['value']).getTime())) {\n              vm.formBuilder[key]['value'] = ''\n            }\n          }\n        }\n      }).catch(function () {\n        vm.formBuilder = []\n      })\n    }\n  },\n  created () {\n    var vm = this\n    vm.$nextTick(function () {\n      let filter = {\n        dossierId: vm.dossier_id,\n        actionId: vm.action_id\n      }\n      if (filter['dossierId'] && filter['actionId']) {\n        vm.$store.dispatch('getExtraForm', filter).then(function (result) {\n          vm.formBuilder = result\n          if (vm.formBuilder.length > 0) {\n            for (let key in vm.formBuilder) {\n              if (vm.formBuilder[key]['fieldType'] === 'date' && vm.formBuilder[key]['value'] && isNaN(new Date(vm.formBuilder[key]['value']).getTime())) {\n                vm.formBuilder[key]['value'] = ''\n              }\n            }\n          }\n        })\n      }\n    })\n  },\n  methods: {\n    openDialogCustom (item, fieldName) {\n      let vm = this\n      vm.dialog = true\n      vm.fieldNameID = fieldName\n      vm.itemId = item\n    },\n    pickDateCustom () {\n      let vm = this\n      console.log(vm.date)\n      if (vm.date) {\n        vm.itemId.value = new Date(vm.date)\n      }\n      vm.dialog = false\n    },\n    inputChangeValue (item) {\n      let vm = this\n      item.value = document.getElementById(item.fieldName).value\n    },\n    showDatePicker () {\n      this.$refs.datepicker.showDatePicker()\n    },\n    dateTimeView (arg) {\n      if (arg) {\n        let value = new Date(arg)\n        return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()}`\n      } else {\n        return ''\n      }\n    },\n    parseCurrentDate (date) {\n      if (!date) {\n        return null\n      }\n      // let [day1, time] = date.split(' ')\n      let [day2, month, year] = date.split('/')\n      // let [hh, mm, ss] = `${time}`.split(':')\n      return `${year}-${month.padStart(2, '0')}-${day2.padStart(2, '0')}`\n    },\n    checkValid () {\n      let vm = this\n      let valid = true\n      if (vm.formBuilder.length > 0) {\n        for (let key in vm.formBuilder) {\n          if ((vm.formBuilder[key]['required'] === true || vm.formBuilder[key]['required'] === 'true') && !vm.formBuilder[key]['value']) {\n            valid = false\n            alert(vm.formBuilder[key]['fieldLabel'] + ' là bắt buộc!')\n            return valid\n          }\n        }\n      }\n      return valid\n    },\n    formSubmitData () {\n      let vm = this\n      let objectReturn = {}\n      if (vm.formBuilder.length > 0) {\n        for (let key in vm.formBuilder) {\n          let valueEdit = vm.formBuilder[key].value\n          if (vm.formBuilder[key].fieldType === 'date') {\n            valueEdit = (new Date(vm.formBuilder[key].value)).getTime() ? (new Date(vm.formBuilder[key].value)).getTime() : ''\n          }\n          objectReturn[vm.formBuilder[key].fieldName] = valueEdit\n        }\n      } else {\n        objectReturn = ''\n      }\n      return objectReturn\n    }\n  },\n  filters: {\n    parseDate: function (value) {\n      if (!value) return ''\n      let date = ''\n      if (!isNaN(Number(value))) {\n        date = new Date(Number(value))\n      } else {\n        date = new Date(value)\n      }\n      if (date) {\n        return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n      } else {\n        return ''\n      }\n    }\n  }\n}\n",{"version":3,"sources":["FormBoSungThongTinNgan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"FormBoSungThongTinNgan.vue","sourceRoot":"src/components/form_xu_ly","sourcesContent":["<template>\n  <div style=\"width:100%\">\n    <v-expansion-panel :value=\"[true]\" v-if=\"type !== 'dieuchinhdulieu' && formBuilder.length > 0\" class=\"expansion-pl ext__form\">\n      <v-expansion-panel-content v-for=\"(item, index) in formBuilder\" v-bind:key=\"index\">\n        <div slot=\"header\"><div class=\"background-triangle-small\"> <v-icon size=\"18\" color=\"white\">star_rate</v-icon> </div>\n        {{item.fieldLabel}} <span v-if=\"item.required === true || item.required === 'true'\" style=\"color:red\"> *</span>\n        </div>\n        <v-card>\n          <v-card-text class=\"py-2 px-2\">\n            <v-layout wrap>\n              <v-flex xs12>\n                <v-text-field v-if=\"item.fieldType === 'textarea'\"\n                  :id=\"item.fieldName\"\n                  :value=\"item.value\"\n                  :placeholder=\"item.placeholder\"\n                  multi-line\n                  @input=\"inputChangeValue(item)\"\n                  :rules=\"(item.required === true || item.required === 'true') ? [rules.required] : []\"\n                  :required=\"(item.required === true || item.required === 'true') ? true : false\"\n                ></v-text-field>\n                <v-text-field v-if=\"item.fieldType === 'string'\"\n                  :id=\"item.fieldName\"\n                  :value=\"item.value\"\n                  :placeholder=\"item.placeholder\"\n                  @input=\"inputChangeValue(item)\"\n                  :rules=\"(item.required === true || item.required === 'true') ? [rules.required] : []\"\n                  :required=\"(item.required === true || item.required === 'true') ? true : false\"\n                ></v-text-field>\n                <v-text-field v-if=\"item.fieldType === 'number'\"\n                  :id=\"item.fieldName\"\n                  :value=\"item.value\"\n                  :placeholder=\"item.placeholder\"\n                  @input=\"inputChangeValue(item)\"\n                  :rules=\"(item.required === true || item.required === 'true') ? [rules.required] : [rules.number]\"\n                  :required=\"(item.required === true || item.required === 'true') ? true : false\"\n                ></v-text-field>\n                <!-- <v-text-field v-if=\"item.fieldType === 'date'\"\n                  :id=\"item.fieldName\"\n                  :value=\"item.value|parseDate\"\n                  :placeholder=\"item.placeholder\"\n                  readonly\n                  append-icon=\"event\"\n                  v-on:click.native=\"openDialogCustom(item, item.fieldName)\"\n                  :rules=\"(item.required === true || item.required === 'true') ? [rules.required] : []\"\n                  :required=\"(item.required === true || item.required === 'true') ? true : false\"\n                ></v-text-field> -->\n                <v-layout wrap class=\"pl-2\" v-if=\"item.fieldType === 'date'\">\n                  <v-icon color=\"blue\" class=\"ml-3\">event</v-icon>\n                  <vue-ctk-date-time-picker \n                    ref=\"datepicker\"\n                    :label=\"item.value ? '' : 'Chọn ngày'\"\n                    style=\"width:auto!important\"\n                    class=\"ml-2\"\n                    :id=\"item.fieldName\"\n                    v-model=\"item.value\"\n                    formatted=\"DD/MM/YYYY HH:mm\"\n                    format=\"YYYY-MM-DDTHH:mm\"\n                    time-format=\"HH:mm\"\n                    :without-header=\"true\"\n                  />\n                </v-layout>\n              </v-flex>\n            </v-layout>\n          </v-card-text>\n          <v-dialog v-model=\"dialog\" width=\"500\">\n            <v-date-picker\n              v-model=\"date\"\n              full-width\n              landscape\n            ></v-date-picker>\n            <v-card-actions style=\"background: #fff\">\n              <v-spacer></v-spacer>\n              <v-btn color=\"primary\" flat @click=\"pickDateCustom\">\n                Xác nhận\n              </v-btn>\n            </v-card-actions>\n          </v-dialog>\n        </v-card>\n      </v-expansion-panel-content>\n    </v-expansion-panel>\n    <div v-if=\"type === 'dieuchinhdulieu'\" class=\"ext__form px-3\">\n      <div v-if=\"formBuilder.length > 0\" class=\"mb-2\" hide-actions v-for=\"(item, index) in formBuilder\" v-bind:key=\"index\">\n        <div class=\"py-1\" style=\"border-bottom:1px solid #8a898942\">\n          <!-- <div class=\"background-triangle-small\"> <v-icon size=\"18\" color=\"white\">star_rate</v-icon> </div> -->\n          <span class=\"text-bold\">{{index + 1}}. </span>{{item.fieldLabel}} <span v-if=\"item.required === true || item.required === 'true'\" style=\"color:red\"> *</span>\n        </div>\n        <v-form ref=\"form\" v-model=\"valid2\" lazy-validation>\n          <v-layout wrap>\n            <v-flex xs12 class=\"px-3\">\n              <v-text-field v-if=\"item.fieldType === 'textarea'\"\n                box\n                :id=\"item.fieldName\"\n                :value=\"item.value\"\n                :placeholder=\"item.placeholder\"\n                multi-line\n                @input=\"inputChangeValue(item)\"\n                :rules=\"(item.required === true || item.required === 'true') ? [rules.required] : []\"\n                :required=\"(item.required === true || item.required === 'true') ? true : false\"\n              ></v-text-field>\n            </v-flex>\n            <v-flex xs12 class=\"px-3\">\n              <v-text-field v-if=\"item.fieldType === 'string'\"\n                box\n                :id=\"item.fieldName\"\n                :value=\"item.value\"\n                :placeholder=\"item.placeholder\"\n                @input=\"inputChangeValue(item)\"\n                :rules=\"(item.required === true || item.required === 'true') ? [rules.required] : []\"\n                :required=\"(item.required === true || item.required === 'true') ? true : false\"\n              ></v-text-field>\n            </v-flex>\n            <v-flex xs12 class=\"px-3\">\n              <v-text-field v-if=\"item.fieldType === 'number'\"\n                box\n                :id=\"item.fieldName\"\n                :value=\"item.value\"\n                :placeholder=\"item.placeholder\"\n                @input=\"inputChangeValue(item)\"\n                :rules=\"(item.required === true || item.required === 'true') ? [rules.required] : [rules.number]\"\n                :required=\"(item.required === true || item.required === 'true') ? true : false\"\n              ></v-text-field>\n            </v-flex>\n            <v-flex xs12 class=\"px-3\">\n              <!-- <v-text-field v-if=\"item.fieldType === 'date'\"\n                box\n                :id=\"item.fieldName\"\n                :value=\"item.value|parseDate\"\n                :placeholder=\"item.placeholder\"\n                readonly\n                append-icon=\"event\"\n                v-on:click.native=\"openDialogCustom(item, item.fieldName)\"\n                :rules=\"(item.required === true || item.required === 'true') ? [rules.required] : []\"\n                :required=\"(item.required === true || item.required === 'true') ? true : false\"\n              ></v-text-field> -->\n              <v-layout wrap class=\"mt-2\" v-if=\"item.fieldType === 'date'\">\n                <v-icon color=\"blue\" class=\"\">event</v-icon>\n                <vue-ctk-date-time-picker \n                  ref=\"datepicker\"\n                  :label=\"item.value ? '' : 'Chọn ngày'\"\n                  style=\"width:auto!important\"\n                  class=\"ml-2\"\n                  :id=\"item.fieldName\"\n                  v-model=\"item.value\"\n                  formatted=\"DD/MM/YYYY HH:mm\"\n                  format=\"YYYY-MM-DDTHH:mm\"\n                  time-format=\"HH:mm\"\n                  :without-header=\"true\"\n                />\n              </v-layout>\n            </v-flex>\n            <v-flex xs12 class=\"px-3\">\n              <v-text-field v-if=\"item.fieldType === 'status'\"\n                box\n                :id=\"item.fieldName\"\n                :value=\"item.value\"\n                :placeholder=\"item.placeholder\"\n                @input=\"inputChangeValue(item)\"\n                :rules=\"(item.required === true || item.required === 'true') ? [rules.required] : []\"\n                :required=\"(item.required === true || item.required === 'true') ? true : false\"\n              ></v-text-field>\n            </v-flex>\n          </v-layout>\n        </v-form>\n        <v-dialog v-model=\"dialog\" width=\"500\">\n          <v-date-picker\n            v-model=\"date\"\n            full-width\n            landscape\n          ></v-date-picker>\n          <!-- <vue-ctk-date-time-picker\n            v-model=\"date\"\n            formatted=\"DD/MM/YYYY HH:mm\"\n            format=\"YYYY-MM-DDTHH:mm\"\n            time-format=\"HH:mm\"\n            without-input\n          /> -->\n          <v-card-actions style=\"background: #fff\">\n            <v-spacer></v-spacer>\n            <v-btn color=\"primary\" flat @click=\"pickDateCustom\">\n              Xác nhận\n            </v-btn>\n          </v-card-actions>\n        </v-dialog>\n      </div>\n      <div v-if=\"formBuilder.length === 0\">\n        <v-alert outline color=\"warning\" icon=\"priority_high\" :value=\"true\">\n          Không có form điều chỉnh dữ liệu\n        </v-alert>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  import VueCtkDateTimePicker from 'vue-ctk-date-time-picker'\n  export default {\n    components: {\n      'vue-ctk-date-time-picker': VueCtkDateTimePicker\n    },\n    props: {\n      dossier_id: {\n        type: Number\n      },\n      action_id: {\n        type: Number\n      },\n      type: {\n        type: String,\n        default: () => ''\n      }\n    },\n    data: () => ({\n      itemId: null,\n      fieldNameID: '',\n      date: null,\n      dialog: false,\n      formBuilder: [],\n      valid: false,\n      valid2: false,\n      rulesValid: {\n        number: function (value) {\n          var pattern = /^\\d+$/\n          return pattern.test(value) || 'Kiểu dữ liệu sai định dạng.'\n        }\n      },\n      rules: {\n        required: (value) => !!value || 'Trường dữ liệu bắt buộc',\n        number: function (value) {\n          const pattern = /^\\d+$/\n          return pattern.test(value) || 'Kiểu dữ liệu sai định dạng.'\n        }\n      }\n    }),\n    watch: {\n      dossier_id () {\n        let vm = this\n        let filter = {\n          dossierId: vm.dossier_id,\n          actionId: vm.action_id\n        }\n        vm.$store.dispatch('getExtraForm', filter).then(function (result) {\n          vm.formBuilder = result\n          if (vm.formBuilder.length > 0) {\n            for (let key in vm.formBuilder) {\n              if (vm.formBuilder[key]['fieldType'] === 'date' && vm.formBuilder[key]['value'] && isNaN(new Date(vm.formBuilder[key]['value']).getTime())) {\n                vm.formBuilder[key]['value'] = ''\n              }\n            }\n          }\n        }).catch(function () {\n          vm.formBuilder = []\n        })\n      }\n    },\n    created () {\n      var vm = this\n      vm.$nextTick(function () {\n        let filter = {\n          dossierId: vm.dossier_id,\n          actionId: vm.action_id\n        }\n        if (filter['dossierId'] && filter['actionId']) {\n          vm.$store.dispatch('getExtraForm', filter).then(function (result) {\n            vm.formBuilder = result\n            if (vm.formBuilder.length > 0) {\n              for (let key in vm.formBuilder) {\n                if (vm.formBuilder[key]['fieldType'] === 'date' && vm.formBuilder[key]['value'] && isNaN(new Date(vm.formBuilder[key]['value']).getTime())) {\n                  vm.formBuilder[key]['value'] = ''\n                }\n              }\n            }\n          })\n        }\n      })\n    },\n    methods: {\n      openDialogCustom (item, fieldName) {\n        let vm = this\n        vm.dialog = true\n        vm.fieldNameID = fieldName\n        vm.itemId = item\n      },\n      pickDateCustom () {\n        let vm = this\n        console.log(vm.date)\n        if (vm.date) {\n          vm.itemId.value = new Date(vm.date)\n        }\n        vm.dialog = false\n      },\n      inputChangeValue (item) {\n        let vm = this\n        item.value = document.getElementById(item.fieldName).value\n      },\n      showDatePicker () {\n        this.$refs.datepicker.showDatePicker()\n      },\n      dateTimeView (arg) {\n        if (arg) {\n          let value = new Date(arg)\n          return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()}`\n        } else {\n          return ''\n        }\n      },\n      parseCurrentDate (date) {\n        if (!date) {\n          return null\n        }\n        // let [day1, time] = date.split(' ')\n        let [day2, month, year] = date.split('/')\n        // let [hh, mm, ss] = `${time}`.split(':')\n        return `${year}-${month.padStart(2, '0')}-${day2.padStart(2, '0')}`\n      },\n      checkValid () {\n        let vm = this\n        let valid = true\n        if (vm.formBuilder.length > 0) {\n          for (let key in vm.formBuilder) {\n            if ((vm.formBuilder[key]['required'] === true || vm.formBuilder[key]['required'] === 'true') && !vm.formBuilder[key]['value']) {\n              valid = false\n              alert(vm.formBuilder[key]['fieldLabel'] + ' là bắt buộc!')\n              return valid\n            }\n          }\n        }\n        return valid\n      },\n      formSubmitData () {\n        let vm = this\n        let objectReturn = {}\n        if (vm.formBuilder.length > 0) {\n          for (let key in vm.formBuilder) {\n            let valueEdit = vm.formBuilder[key].value\n            if (vm.formBuilder[key].fieldType === 'date') {\n              valueEdit = (new Date(vm.formBuilder[key].value)).getTime() ? (new Date(vm.formBuilder[key].value)).getTime() : ''\n            }\n            objectReturn[vm.formBuilder[key].fieldName] = valueEdit\n          }\n        } else {\n          objectReturn = ''\n        }\n        return objectReturn\n      }\n    },\n    filters: {\n      parseDate: function (value) {\n        if (!value) return ''\n        let date = ''\n        if (!isNaN(Number(value))) {\n          date = new Date(Number(value))\n        } else {\n          date = new Date(value)\n        }\n        if (date) {\n          return `${date.getDate().toString().padStart(2, '0')}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getFullYear()} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`\n        } else {\n          return ''\n        }\n      }\n    }\n  }\n</script>\n"]}]}