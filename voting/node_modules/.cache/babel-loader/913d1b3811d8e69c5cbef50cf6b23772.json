{"remainingRequest":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/thread-loader/dist/cjs.js!/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/babel-loader/lib/index.js!/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/eslint-loader/index.js??ref--13-0!/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/src/store/index.js","dependencies":[{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/src/store/index.js","mtime":1548173982335},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/.babelrc","mtime":1548173357903},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport toastr from 'toastr';\nimport axios from 'axios'; // \n\nVue.use(toastr);\nVue.use(Vuex);\ntoastr.options = {\n  'closeButton': true,\n  'timeOut': '5000'\n};\nexport var store = new Vuex.Store({\n  state: {\n    initData: {},\n    loading: false,\n    index: 0,\n    agencyList: [],\n    domainList: [],\n    levelList: []\n  },\n  actions: {\n    loadInitResource: function loadInitResource(_ref) {\n      var commit = _ref.commit,\n          state = _ref.state;\n      return new Promise(function (resolve, reject) {\n        if (window.themeDisplay !== null && window.themeDisplay !== undefined) {\n          state.initData['groupId'] = window.themeDisplay.getScopeGroupId();\n          state.initData['user'] = {\n            'userName': window.themeDisplay.getUserName(),\n            'userEmail': '',\n            'userId': window.themeDisplay.getUserId()\n          };\n        } else {\n          state.initData['groupId'] = 0;\n          state.initData['user'] = {\n            'userName': '',\n            'userEmail': '',\n            'userId': 20103\n          };\n        }\n\n        resolve(state.initData);\n      });\n    },\n    makeImageCapLogin: function makeImageCapLogin(_ref2) {\n      var commit = _ref2.commit,\n          state = _ref2.state;\n      return new Promise(function (resolve, reject) {\n        var param = {\n          headers: {\n            groupId: state.initData.groupId ? state.initData.groupId : '',\n            'Accept': 'application/json'\n          },\n          responseType: 'blob' // test local\n\n        };\n        var url = '/o/v1/opencps/users/login/jcaptcha';\n        axios.get(url, param).then(function (response) {\n          var url = window.URL.createObjectURL(response.data);\n          resolve(url);\n        }).catch(function (xhr) {\n          reject(xhr);\n        });\n      });\n    },\n    makeImageCap: function makeImageCap(_ref3) {\n      var commit = _ref3.commit,\n          state = _ref3.state;\n      return new Promise(function (resolve, reject) {\n        var param = {\n          headers: {\n            groupId: state.initData.groupId ? state.initData.groupId : '',\n            'Accept': 'application/json'\n          },\n          responseType: 'blob' // test local\n\n        };\n        var url = '/o/rest/v2/applicants/jcaptcha';\n        axios.get(url, param).then(function (response) {\n          var url = window.URL.createObjectURL(response.data);\n          resolve(url);\n        }).catch(function (xhr) {\n          reject(xhr);\n        });\n      });\n    },\n    checkApplicantInfos: function checkApplicantInfos(_ref4, filter) {\n      var commit = _ref4.commit,\n          state = _ref4.state;\n      return new Promise(function (resolve, reject) {\n        var param = {\n          headers: {\n            groupId: state.initData.groupId ? state.initData.groupId : '',\n            'Accept': 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded'\n          } // test local\n\n        };\n        var url = '/o/rest/v2/applicants/ngsp/verify'; // var url = 'http://127.0.0.1:8081/api/applicants/ngsp/verify'\n\n        var dataCheck = new URLSearchParams();\n        dataCheck.append('applicantIdNo', filter.applicantIdNo ? filter.applicantIdNo : '');\n        dataCheck.append('applicantName', filter.applicantName ? filter.applicantName : '');\n        axios.post(url, dataCheck, param).then(function (result1) {\n          resolve(result1.data);\n        }).catch(function (xhr) {\n          reject(xhr);\n        });\n      });\n    },\n    getApplicantInfos: function getApplicantInfos(_ref5, filter) {\n      var commit = _ref5.commit,\n          state = _ref5.state;\n      return new Promise(function (resolve, reject) {\n        var param = {\n          headers: {\n            groupId: state.initData.groupId\n          } // test local\n          // axios.get('http://127.0.0.1:8081/api/applicants/ngsp/0100109106', param).then(function (response) {\n\n        };\n        axios.get('/o/rest/v2/applicants/ngsp/' + filter.applicantIdNo, param).then(function (response) {\n          if (response.data && response.data['Data']) {\n            resolve(response.data['Data']);\n          }\n        }).catch(function (xhr) {\n          console.log(xhr);\n          reject(xhr);\n        });\n      });\n    },\n    goToDangNhap: function goToDangNhap(_ref6, filter) {\n      var commit = _ref6.commit,\n          state = _ref6.state;\n      store.dispatch('loadInitResource').then(function (result) {\n        var configs = {\n          headers: {\n            'Authorization': 'BASIC ' + window.btoa(filter['npmreactlogin_login'] + \":\" + filter['npmreactlogin_password'])\n          }\n        };\n        var dataPostApplicant = new URLSearchParams();\n        dataPostApplicant.append('j_captcha_response', filter.j_captcha_response);\n        axios.post('/o/v1/opencps/login', dataPostApplicant, configs).then(function (response) {\n          console.log(response.data);\n\n          if (response.data !== '' && response.data !== 'ok') {\n            if (response.data === 'pending') {\n              window.location.href = window.themeDisplay.getURLHome() + \"/register#/xac-thuc-tai-khoan?active_user_id=\" + window.themeDisplay.getUserId() + \"&redirectURL=\" + window.themeDisplay.getURLHome();\n            } else {\n              window.location.href = response.data;\n            }\n          } else if (response.data === 'ok') {\n            window.location.href = window.themeDisplay.getURLHome();\n          } else if (response.data === 'captcha') {\n            toastr.error(\"Nhập sai mã Captcha.\", {\n              autoClose: 2000\n            });\n          } else {\n            toastr.error(\"Tên đăng nhập hoặc mật khẩu không chính xác.\", {\n              autoClose: 2000\n            });\n          }\n        }).catch(function (error) {\n          toastr.error(\"Tên đăng nhập hoặc mật khẩu không chính xác.\", {\n            autoClose: 2000\n          });\n        });\n      });\n    },\n    postApplicant: function postApplicant(_ref7, data) {\n      var commit = _ref7.commit,\n          state = _ref7.state;\n      return new Promise(function (resolve, reject) {\n        var configs = {\n          headers: {\n            'groupId': state.initData.groupId,\n            'Accept': 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        };\n        store.dispatch('loadInitResource').then(function (result) {\n          var configs = {\n            headers: {\n              'groupId': state.initData.groupId,\n              'Accept': 'application/json',\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          };\n          var dataPostApplicant = new URLSearchParams();\n          dataPostApplicant.append('applicantIdType', data.applicantType);\n          dataPostApplicant.append('applicantName', data.applicantName);\n          dataPostApplicant.append('applicantIdNo', data.applicantIdNo);\n          dataPostApplicant.append('applicantIdDate', data.applicantIdNoDate);\n          dataPostApplicant.append('contactEmail', data.contactEmail);\n          dataPostApplicant.append('contactTelNo', data.contactTelNo);\n          dataPostApplicant.append('password', data.password);\n          dataPostApplicant.append('j_captcha_response', data.j_captcha_response);\n          console.log('dataPostApplicant', dataPostApplicant); // test local\n          // axios.post('http://127.0.0.1:8081/api/applicants', dataPostApplicant, configs).then(function (response) {\n\n          axios.post('/o/rest/v2/applicants/withcaptcha', dataPostApplicant, configs).then(function (response) {\n            toastr.success('Đăng ký thành công');\n            resolve(response.data);\n          }).catch(function (errorRes, response) {\n            reject(errorRes);\n            console.log('response', errorRes.response);\n            var dataError;\n\n            if (errorRes.response.data) {\n              dataError = errorRes.response.data;\n\n              if (dataError && dataError.description && dataError.description === 'DuplicateContactEmailException') {\n                toastr.error('Đăng ký thất bại. Email sử dụng đã tồn tại trên hệ thống. Sử dụng Email khác để đăng ký');\n              } else if (dataError && dataError.description && dataError.description === 'DuplicateApplicantIdException') {\n                toastr.error('Đăng ký thất bại. Số CMDN/Mã số thuế đã tồn tại trên hệ thống. Sử dụng số CMDN/mã số thuế khác để đăng ký');\n              } else if (dataError && dataError.description && dataError.description === 'DuplicateContactTelNoException') {\n                toastr.error('Đăng ký thất bại. Số điện thoại đã được sử dụng trên hệ thống. Sử dụng số điện thoại khác để đăng ký');\n              } else if (dataError && dataError.description && dataError.description === 'Invalid ID, could not validate unexisting or already validated captcha') {\n                toastr.error('Nhập sai Captcha');\n              } else {\n                toastr.error('Đăng ký thất bại. Vui lòng thử lại ' + dataError.description);\n              }\n            }\n          });\n        });\n      });\n    },\n    getDieuKhoan: function getDieuKhoan(_ref8, data) {\n      var commit = _ref8.commit,\n          state = _ref8.state;\n      return new Promise(function (resolve, reject) {\n        store.dispatch('loadInitResource').then(function (result) {\n          var param = {\n            headers: {\n              groupId: state.initData.groupId\n            } // test local\n            // axios.get('http://127.0.0.1:8081/api/dictcollections/jexcel/backend.datamgt.service/org.opencps.datamgt.model.DictCollection/org.opencps.datamgt.service.DictCollectionLocalServiceUtil/collectionCode/dataForm', param).then(function (response) {\n\n          };\n          axios.get('/o/v1/opencps/jexcel/backend.datamgt.service/org.opencps.datamgt.model.DictCollection/org.opencps.datamgt.service.DictCollectionLocalServiceUtil/collectionCode/dataForm', param).then(function (response) {\n            if (response.data) {\n              var dataReturn = response.data;\n              var dataRule;\n\n              if (Array.isArray(dataReturn) && dataReturn.length > 0) {\n                var privacy = dataReturn.filter(function (item) {\n                  return item.id === 'PRIVACY';\n                });\n                dataRule = privacy && privacy.length > 0 ? privacy[0].name : '';\n              }\n\n              resolve(dataRule);\n            } else {\n              resolve('');\n            }\n          }).catch(function (error) {\n            console.log(error);\n            reject(error);\n          });\n        });\n      });\n    },\n    confirmPIN: function confirmPIN(_ref9, data) {\n      var commit = _ref9.commit,\n          state = _ref9.state;\n      return new Promise(function (resolve, reject) {\n        store.dispatch('loadInitResource').then(function (result) {\n          var param = {\n            headers: {\n              groupId: state.initData.groupId\n            } // test local\n            // axios.get('http://127.0.0.1:8081/api/applicants/' + data.userId + '/activate/' + data.pinCode, param).then(function (response) {\n\n          };\n          axios.get('/o/rest/v2/applicants/' + data.userId + '/activate/' + data.pinCode, param).then(function (response) {\n            resolve(response.data);\n            toastr.success('Xác thực thành công');\n          }).catch(function (xhr) {\n            reject(xhr);\n            toastr.error('Xác thực thất bại. Vui lòng thử lại');\n          });\n        });\n      });\n    },\n    confirmForgotPASS: function confirmForgotPASS(_ref10, data) {\n      var commit = _ref10.commit,\n          state = _ref10.state;\n      return new Promise(function (resolve, reject) {\n        store.dispatch('loadInitResource').then(function (result) {\n          var param = {\n            headers: {\n              groupId: state.initData.groupId\n            } // test local\n            // axios.get('http://127.0.0.1:8081/api/users/' + data.confirmCode + '/forgot', param).then(function (response) {\n\n          };\n          axios.get('/o/rest/v2/users/' + data.confirmCode + '/forgot?j_captcha_response=' + data['j_captcha_response'], param).then(function (response) {\n            if (response['status'] !== undefined && response['status'] === 203) {\n              toastr.error('Nhập sai mã Captcha');\n              reject(xhr);\n            } else {\n              resolve(response.data);\n            } // toastr.success('Xác thực thành công')\n\n          }).catch(function (xhr) {\n            reject(xhr);\n            toastr.error('Yêu cầu thất bại. Vui lòng thử lại');\n          });\n        });\n      });\n    },\n    confirmCodeForgotPass: function confirmCodeForgotPass(_ref11, data) {\n      var commit = _ref11.commit,\n          state = _ref11.state;\n      return new Promise(function (resolve, reject) {\n        store.dispatch('loadInitResource').then(function (result) {\n          var param = {\n            headers: {\n              groupId: state.initData.groupId\n            } // test local\n            // axios.get('http://127.0.0.1:8081/api/users/' + data.userCode + '/forgot/confirm/' + data.confirmCode, param).then(function (response) {\n\n          };\n          axios.get('/o/rest/v2/users/' + data.userCode + '/forgot/confirm/' + data.confirmCode + '?j_captcha_response=' + data['j_captcha_response'], param).then(function (response) {\n            resolve(response.data);\n            toastr.success('Xác thực thành công. Bạn vui lòng kiểm tra email hoặc số điện thoại để có mật khẩu mới');\n            setTimeout(function () {\n              var redirectURL = window.themeDisplay.getLayoutRelativeURL().substring(0, window.themeDisplay.getLayoutRelativeURL().lastIndexOf('\\/'));\n              window.open(redirectURL, '_self');\n            }, 500);\n          }).catch(function (xhr) {\n            reject(xhr);\n            toastr.error('Yêu cầu thất bại. Vui lòng nhập lại mã bảo mật');\n          });\n        });\n      });\n    }\n  },\n  mutations: {\n    setLoading: function setLoading(state, payload) {\n      state.loading = payload;\n    },\n    setInitData: function setInitData(state, payload) {\n      state.initData = payload;\n    },\n    setAgencyList: function setAgencyList(state, payload) {\n      state.agencyList = payload;\n    },\n    setDomainList: function setDomainList(state, payload) {\n      state.domainList = payload;\n    },\n    setLevelList: function setLevelList(state, payload) {\n      state.levelList = payload;\n    }\n  },\n  getters: {\n    loading: function loading(state) {\n      return state.loading;\n    },\n    index: function index(state) {\n      return state.index;\n    },\n    getAgencyList: function getAgencyList(state) {\n      return state.agencyList;\n    },\n    getDomainList: function getDomainList(state) {\n      return state.domainList;\n    },\n    getLevelList: function getLevelList(state) {\n      return state.levelList;\n    }\n  }\n});",{"version":3,"sources":["/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/src/store/index.js"],"names":["Vue","Vuex","toastr","axios","use","options","store","Store","state","initData","loading","index","agencyList","domainList","levelList","actions","loadInitResource","commit","Promise","resolve","reject","window","themeDisplay","undefined","getScopeGroupId","getUserName","getUserId","makeImageCapLogin","param","headers","groupId","responseType","url","get","then","response","URL","createObjectURL","data","catch","xhr","makeImageCap","checkApplicantInfos","filter","dataCheck","URLSearchParams","append","applicantIdNo","applicantName","post","result1","getApplicantInfos","console","log","goToDangNhap","dispatch","result","configs","btoa","dataPostApplicant","j_captcha_response","location","href","getURLHome","error","autoClose","postApplicant","applicantType","applicantIdNoDate","contactEmail","contactTelNo","password","success","errorRes","dataError","description","getDieuKhoan","dataReturn","dataRule","Array","isArray","length","privacy","item","id","name","confirmPIN","userId","pinCode","confirmForgotPASS","confirmCode","confirmCodeForgotPass","userCode","setTimeout","redirectURL","getLayoutRelativeURL","substring","lastIndexOf","open","mutations","setLoading","payload","setInitData","setAgencyList","setDomainList","setLevelList","getters","getAgencyList","getDomainList","getLevelList"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport toastr from 'toastr'\r\nimport axios from 'axios'\r\n// \r\n\r\nVue.use(toastr)\r\nVue.use(Vuex)\r\ntoastr.options = {\r\n  'closeButton': true,\r\n  'timeOut': '5000'\r\n}\r\nexport const store = new Vuex.Store({\r\n  state: {\r\n    initData: {},\r\n    loading: false,\r\n    index: 0,\r\n    agencyList: [],\r\n    domainList: [],\r\n    levelList: []\r\n  },\r\n  actions: {\r\n    loadInitResource ({commit, state}) {\r\n      return new Promise((resolve, reject) => {\r\n        if (window.themeDisplay !== null && window.themeDisplay !== undefined) {\r\n          state.initData['groupId'] = window.themeDisplay.getScopeGroupId()\r\n          state.initData['user'] = {\r\n            'userName': window.themeDisplay.getUserName(),\r\n            'userEmail': '',\r\n            'userId': window.themeDisplay.getUserId()\r\n          }\r\n        } else {\r\n          state.initData['groupId'] = 0\r\n          state.initData['user'] = {\r\n            'userName': '',\r\n            'userEmail': '',\r\n            'userId': 20103\r\n          }\r\n        }\r\n        resolve(state.initData)\r\n      })\r\n    },\r\n    makeImageCapLogin ({commit, state}) {\r\n      return new Promise((resolve, reject) => {\r\n        let param = {\r\n          headers: {\r\n            groupId: state.initData.groupId ? state.initData.groupId : '',\r\n            'Accept': 'application/json'\r\n          },\r\n          responseType: 'blob'\r\n        }\r\n        // test local\r\n        var url = '/o/v1/opencps/users/login/jcaptcha'\r\n        axios.get(url, param).then(response => {\r\n          var url = window.URL.createObjectURL(response.data)\r\n          resolve(url)\r\n        }).catch(xhr => {\r\n          reject(xhr)\r\n        })\r\n      })\r\n    },\r\n    makeImageCap ({commit, state}) {\r\n      return new Promise((resolve, reject) => {\r\n        let param = {\r\n          headers: {\r\n            groupId: state.initData.groupId ? state.initData.groupId : '',\r\n            'Accept': 'application/json'\r\n          },\r\n          responseType: 'blob'\r\n        }\r\n        // test local\r\n        var url = '/o/rest/v2/applicants/jcaptcha'\r\n        axios.get(url, param).then(response => {\r\n          var url = window.URL.createObjectURL(response.data)\r\n          resolve(url)\r\n        }).catch(xhr => {\r\n          reject(xhr)\r\n        })\r\n      })\r\n    },\r\n    checkApplicantInfos ({commit, state}, filter) {\r\n      return new Promise((resolve, reject) => {\r\n        let param = {\r\n          headers: {\r\n            groupId: state.initData.groupId ? state.initData.groupId : '',\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          }\r\n        }\r\n        // test local\r\n        var url = '/o/rest/v2/applicants/ngsp/verify'\r\n        // var url = 'http://127.0.0.1:8081/api/applicants/ngsp/verify'\r\n        var dataCheck = new URLSearchParams()\r\n        dataCheck.append('applicantIdNo', filter.applicantIdNo ? filter.applicantIdNo : '')\r\n        dataCheck.append('applicantName', filter.applicantName ? filter.applicantName : '')\r\n        axios.post(url, dataCheck, param).then(result1 => {\r\n          resolve(result1.data)\r\n        }).catch(xhr => {\r\n          reject(xhr)\r\n        })\r\n      })\r\n    },\r\n    getApplicantInfos ({ commit, state }, filter) {\r\n      return new Promise((resolve, reject) => {\r\n        let param = {\r\n          headers: {\r\n            groupId: state.initData.groupId\r\n          }\r\n        }\r\n        // test local\r\n        // axios.get('http://127.0.0.1:8081/api/applicants/ngsp/0100109106', param).then(function (response) {\r\n        axios.get('/o/rest/v2/applicants/ngsp/' + filter.applicantIdNo, param).then(function (response) {\r\n          if (response.data && response.data['Data']) {\r\n            resolve(response.data['Data'])\r\n          }\r\n        }).catch(function (xhr) {\r\n          console.log(xhr)\r\n          reject(xhr)\r\n        })\r\n      })\r\n    },\r\n    goToDangNhap({ commit, state }, filter) {\r\n      store.dispatch('loadInitResource').then(function (result) {\r\n        let configs = {\r\n          headers: {\r\n            'Authorization': 'BASIC ' + window.btoa(filter['npmreactlogin_login'] + \":\" + filter['npmreactlogin_password']),\r\n          }\r\n        }\r\n        var dataPostApplicant = new URLSearchParams()\r\n        dataPostApplicant.append('j_captcha_response', filter.j_captcha_response)\r\n        axios.post('/o/v1/opencps/login', dataPostApplicant, configs).then(function (response) {\r\n          console.log(response.data)\r\n          if (response.data !== '' && response.data !== 'ok') {\r\n            if (response.data === 'pending') {\r\n              window.location.href = window.themeDisplay.getURLHome() +\r\n              \"/register#/xac-thuc-tai-khoan?active_user_id=\" + window.themeDisplay.getUserId() +\r\n                \"&redirectURL=\" + window.themeDisplay.getURLHome()\r\n            } else {\r\n              window.location.href = response.data\r\n            }\r\n          } else if (response.data === 'ok') {\r\n            window.location.href = window.themeDisplay.getURLHome()\r\n          } else if (response.data === 'captcha') {\r\n            toastr.error(\"Nhập sai mã Captcha.\", { autoClose: 2000 });\r\n          } else {\r\n            toastr.error(\"Tên đăng nhập hoặc mật khẩu không chính xác.\", { autoClose: 2000 });\r\n          }\r\n        }).catch(function (error) {\r\n          toastr.error(\"Tên đăng nhập hoặc mật khẩu không chính xác.\", { autoClose: 2000 });\r\n        })\r\n      })\r\n    },\r\n    postApplicant ({ commit, state }, data) {\r\n      return new Promise((resolve, reject) => {\r\n        let configs = {\r\n          headers: {\r\n            'groupId': state.initData.groupId,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n          }\r\n        }\r\n        store.dispatch('loadInitResource').then(function (result) {\r\n          let configs = {\r\n            headers: {\r\n              'groupId': state.initData.groupId,\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/x-www-form-urlencoded'\r\n            }\r\n          }\r\n          var dataPostApplicant = new URLSearchParams()\r\n          dataPostApplicant.append('applicantIdType', data.applicantType)\r\n          dataPostApplicant.append('applicantName', data.applicantName)\r\n          dataPostApplicant.append('applicantIdNo', data.applicantIdNo)\r\n          dataPostApplicant.append('applicantIdDate', data.applicantIdNoDate)\r\n          dataPostApplicant.append('contactEmail', data.contactEmail)\r\n          dataPostApplicant.append('contactTelNo', data.contactTelNo)\r\n          dataPostApplicant.append('password', data.password)\r\n          dataPostApplicant.append('j_captcha_response', data.j_captcha_response)\r\n          console.log('dataPostApplicant', dataPostApplicant)\r\n          // test local\r\n          // axios.post('http://127.0.0.1:8081/api/applicants', dataPostApplicant, configs).then(function (response) {\r\n          axios.post('/o/rest/v2/applicants/withcaptcha', dataPostApplicant, configs).then(function (response) {\r\n            toastr.success('Đăng ký thành công')\r\n            resolve(response.data)\r\n          }).catch(function (errorRes, response) {\r\n            reject(errorRes)\r\n            console.log('response', errorRes.response)\r\n            let dataError\r\n            if (errorRes.response.data) {\r\n              dataError = errorRes.response.data\r\n              if (dataError && dataError.description && dataError.description === 'DuplicateContactEmailException') {\r\n                toastr.error('Đăng ký thất bại. Email sử dụng đã tồn tại trên hệ thống. Sử dụng Email khác để đăng ký')\r\n              } else if (dataError && dataError.description && dataError.description === 'DuplicateApplicantIdException') {\r\n                toastr.error('Đăng ký thất bại. Số CMDN/Mã số thuế đã tồn tại trên hệ thống. Sử dụng số CMDN/mã số thuế khác để đăng ký')\r\n              } else if (dataError && dataError.description && dataError.description === 'DuplicateContactTelNoException') {\r\n                toastr.error('Đăng ký thất bại. Số điện thoại đã được sử dụng trên hệ thống. Sử dụng số điện thoại khác để đăng ký')\r\n              } else if (dataError && dataError.description && dataError.description === 'Invalid ID, could not validate unexisting or already validated captcha') {\r\n                toastr.error('Nhập sai Captcha')\r\n              } else {\r\n                toastr.error('Đăng ký thất bại. Vui lòng thử lại ' + dataError.description)\r\n              }\r\n            }\r\n          })\r\n        })\r\n      })\r\n    },\r\n    getDieuKhoan ({commit, state}, data) {\r\n      return new Promise((resolve, reject) => {\r\n        store.dispatch('loadInitResource').then(function (result) {\r\n          let param = {\r\n            headers: {\r\n              groupId: state.initData.groupId\r\n            }\r\n          }\r\n          // test local\r\n          // axios.get('http://127.0.0.1:8081/api/dictcollections/jexcel/backend.datamgt.service/org.opencps.datamgt.model.DictCollection/org.opencps.datamgt.service.DictCollectionLocalServiceUtil/collectionCode/dataForm', param).then(function (response) {\r\n          axios.get('/o/v1/opencps/jexcel/backend.datamgt.service/org.opencps.datamgt.model.DictCollection/org.opencps.datamgt.service.DictCollectionLocalServiceUtil/collectionCode/dataForm', param).then(function (response) {\r\n            if (response.data) {\r\n              let dataReturn = response.data\r\n              let dataRule\r\n              if (Array.isArray(dataReturn) && dataReturn.length > 0) {\r\n                let privacy = dataReturn.filter(function (item) {\r\n                  return (item.id === 'PRIVACY')\r\n                })\r\n                dataRule = privacy && privacy.length > 0 ? privacy[0].name : ''\r\n              }\r\n              resolve(dataRule)\r\n            } else {\r\n              resolve('')\r\n            }\r\n          }).catch(function (error) {\r\n            console.log(error)\r\n            reject(error)\r\n          })\r\n        })\r\n      })\r\n    },\r\n    confirmPIN ({ commit, state }, data) {\r\n      return new Promise((resolve, reject) => {\r\n        store.dispatch('loadInitResource').then(function (result) {\r\n          let param = {\r\n            headers: {\r\n              groupId: state.initData.groupId\r\n            }\r\n          }\r\n          // test local\r\n          // axios.get('http://127.0.0.1:8081/api/applicants/' + data.userId + '/activate/' + data.pinCode, param).then(function (response) {\r\n          axios.get('/o/rest/v2/applicants/' + data.userId + '/activate/' + data.pinCode, param).then(function (response) {\r\n            resolve(response.data)\r\n            toastr.success('Xác thực thành công')\r\n          }).catch(function (xhr) {\r\n            reject(xhr)\r\n            toastr.error('Xác thực thất bại. Vui lòng thử lại')\r\n          })\r\n        })\r\n      })\r\n    },\r\n    confirmForgotPASS ({ commit, state }, data) {\r\n      return new Promise((resolve, reject) => {\r\n        store.dispatch('loadInitResource').then(function (result) {\r\n          let param = {\r\n            headers: {\r\n              groupId: state.initData.groupId\r\n            }\r\n          }\r\n          // test local\r\n          // axios.get('http://127.0.0.1:8081/api/users/' + data.confirmCode + '/forgot', param).then(function (response) {\r\n          axios.get('/o/rest/v2/users/' + data.confirmCode + '/forgot?j_captcha_response=' + data['j_captcha_response'], param).then(function (response) {\r\n            if (response['status'] !== undefined && response['status'] === 203) {\r\n              toastr.error('Nhập sai mã Captcha')\r\n              reject(xhr)\r\n            } else {\r\n              resolve(response.data)\r\n            }\r\n            // toastr.success('Xác thực thành công')\r\n          }).catch(function (xhr) {\r\n            reject(xhr)\r\n            toastr.error('Yêu cầu thất bại. Vui lòng thử lại')\r\n          })\r\n        })\r\n      })\r\n    },\r\n    confirmCodeForgotPass ({ commit, state }, data) {\r\n      return new Promise((resolve, reject) => {\r\n        store.dispatch('loadInitResource').then(function (result) {\r\n          let param = {\r\n            headers: {\r\n              groupId: state.initData.groupId\r\n            }\r\n          }\r\n          // test local\r\n          // axios.get('http://127.0.0.1:8081/api/users/' + data.userCode + '/forgot/confirm/' + data.confirmCode, param).then(function (response) {\r\n          axios.get('/o/rest/v2/users/' + data.userCode + '/forgot/confirm/' + data.confirmCode + '?j_captcha_response=' + data['j_captcha_response'], param).then(function (response) {\r\n            resolve(response.data)\r\n            toastr.success('Xác thực thành công. Bạn vui lòng kiểm tra email hoặc số điện thoại để có mật khẩu mới')\r\n            setTimeout(function () {\r\n              let redirectURL = window.themeDisplay.getLayoutRelativeURL().substring(0, window.themeDisplay.getLayoutRelativeURL().lastIndexOf('\\/'))\r\n              window.open(redirectURL, '_self')\r\n            }, 500)\r\n          }).catch(function (xhr) {\r\n            reject(xhr)\r\n            toastr.error('Yêu cầu thất bại. Vui lòng nhập lại mã bảo mật')\r\n          })\r\n        })\r\n      })\r\n    }\r\n  },\r\n  mutations: {\r\n    setLoading (state, payload) {\r\n      state.loading = payload\r\n    },\r\n    setInitData (state, payload) {\r\n      state.initData = payload\r\n    },\r\n    setAgencyList (state, payload) {\r\n      state.agencyList = payload\r\n    },\r\n    setDomainList (state, payload) {\r\n      state.domainList = payload\r\n    },\r\n    setLevelList (state, payload) {\r\n      state.levelList = payload\r\n    }\r\n  },\r\n  getters: {\r\n    loading (state) {\r\n      return state.loading\r\n    },\r\n    index (state) {\r\n      return state.index\r\n    },\r\n    getAgencyList (state) {\r\n      return state.agencyList\r\n    },\r\n    getDomainList (state) {\r\n      return state.domainList\r\n    },\r\n    getLevelList (state) {\r\n      return state.levelList\r\n    }\r\n  }\r\n})\r\n"]}]}