{"remainingRequest":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/src/components/screens/Captcha.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/src/components/screens/Captcha.vue","mtime":1548173899253},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/vuetify-loader/lib/loader.js","mtime":499162500000},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/binhth/Documents/fds/opencps/frontend-opencps-v2.1/voting/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nul#captcha li {\n  display:inline;\n}\nul#captcha li:focus {\n  outline:none;\n  box-shadow:0 0 0 2px #68b, inset 0 0 0 1px #ddd;\n}\nul#captcha li:hover {\n  box-shadow:0 0 0 2px #68b, inset 0 0 0 1px #ddd;\n  cursor: pointer\n}\n",{"version":3,"sources":["Captcha.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Captcha.vue","sourceRoot":"src/components/screens","sourcesContent":["<template>\n  <v-layout row wrap>\n    <v-flex xs12>\n      <img :src=\"chapchablob\" alt=\"capcha\">\n    </v-flex>\n    <v-flex xs10 class=\"mt-2\">\n      <v-text-field\n        v-model=\"j_captcha_response\"\n        placeholder=\"Nháº­p captcha\"\n      ></v-text-field>\n    </v-flex>\n    <v-flex xs2 class=\"mt-2 text-right pr-1\">\n      <v-btn flat icon v-on:click.native=\"makeImageCap\">\n        <v-icon size=\"28\">refresh</v-icon>\n      </v-btn>\n    </v-flex>\n  </v-layout>\n</template>\n\n<script>\n\nimport Vue from 'vue'\nimport $ from 'jquery'\nexport default {\n  props: ['index'],\n  components: {\n  },\n  data: () => ({\n    j_captcha_response: '',\n    chapchablob: '',\n    options: {},\n    arrCaptcha: [],\n    captcha: '',\n    currentlyDragging: null,\n    loggedEvent: '',\n    images: [{name: 'Image 1', src: 'http://placehold.it/100/000000/ffffff'},\n    {name: 'Image 2', src: 'http://placehold.it/100/C93742/ffffff'},\n    {name: 'Image 3', src: 'http://placehold.it/100/6894D1/ffffff'}\n    ]\n  }),\n  computed: {\n    loading () {\n      return this.$store.getters.loading\n    }\n  },\n  created () {\n    var vm = this\n    vm.makeImageCap()\n  },\n  watch: {\n  },\n  methods: {\n    makeImageCap () {\n      var vm = this\n      vm.chapchablob = ''\n      vm.$store.dispatch('makeImageCap').then(function (result) {\n        vm.chapchablob = result\n      }).catch(function (reject) {\n        vm.chapchablob = ''\n      })\n    },\n    makeRandomString () {\n      var vm = this\n      var text = ''\n      var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n      for (var i = 0; i < 4; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\n      }\n      if (text) {\n        vm.arrCaptcha = vm.shuffleArrCaptcha(text.split(''))\n      }\n      vm.captcha = text\n    },\n    shuffleArrCaptcha (arra1) {\n      var ctr = arra1.length\n      var temp = null\n      var index = 0\n      while (ctr > 0) {\n        index = Math.floor(Math.random() * ctr)\n        ctr--\n        temp = arra1[ctr]\n        arra1[ctr] = arra1[index]\n        arra1[index] = temp\n      }\n      return arra1\n    },\n    checkValidCaptcha () {\n      var vm = this\n      var str = ''\n      let items = $('#captcha').children()\n      console.log(items)\n      for (var i = 0; i < items.length; i++) {\n        str += items[i].innerHTML\n      }\n      if (vm.captcha === str) {\n        return true\n      } else {\n        return false\n      }\n    }\n  },\n  filters: {\n    dateTimeView (arg) {\n      if (arg) {\n        let value = new Date(arg)\n        return `${value.getDate().toString().padStart(2, '0')}/${(value.getMonth() + 1).toString().padStart(2, '0')}/${value.getFullYear()}`\n      } else {\n        return ''\n      }\n    }\n  }\n}\n</script>\n<style>\n  ul#captcha li {\n    display:inline;\n  }\n  ul#captcha li:focus {\n    outline:none;\n    box-shadow:0 0 0 2px #68b, inset 0 0 0 1px #ddd;\n  }\n  ul#captcha li:hover {\n    box-shadow:0 0 0 2px #68b, inset 0 0 0 1px #ddd;\n    cursor: pointer\n  }\n</style>\n"]}]}